{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Button, Checkbox, Drawer, message } from \"antd\";\nimport CustomScrollbars from \"../../../../util/CustomScrollbars\"; // import IFIList from \"../../../app/components/ifi/IFIList\";\n\nimport AppModuleHeader from \"../../../../app/components/AppModuleHeader\";\nimport AddIFI from \"../../../../app/components/ifi/AddIFI\";\nimport IntlMessages from \"../../../../util/IntlMessages\";\nimport './index.css';\n\nvar IFI = /*#__PURE__*/function (_Component) {\n  _inherits(IFI, _Component);\n\n  var _super = _createSuper(IFI);\n\n  function IFI() {\n    var _this;\n\n    _classCallCheck(this, IFI);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"IFISideBar\", function (ifi) {\n      return __jsx(\"div\", {\n        className: \"gx-module-side\"\n      }, __jsx(\"div\", {\n        className: \"gx-module-side-header\"\n      }, __jsx(\"div\", {\n        className: \"gx-module-logo\"\n      }, __jsx(\"i\", {\n        className: \"icon icon-contacts gx-mr-4\"\n      }), __jsx(\"span\", null, __jsx(IntlMessages, {\n        id: \"chat.contacts\"\n      })))), __jsx(\"div\", {\n        className: \"gx-module-side-content\"\n      }, __jsx(CustomScrollbars, {\n        className: \"gx-module-side-scroll\"\n      }, __jsx(\"div\", {\n        className: \"gx-module-add-task\"\n      }, __jsx(Button, {\n        className: \"gx-btn-block ant-btn\",\n        type: \"primary\",\n        \"aria-label\": \"add\",\n        onClick: _this.onAddIFI\n      }, __jsx(\"i\", {\n        className: \"icon icon-add gx-mr-2\"\n      }), __jsx(\"span\", null, \"Add New IFI\"))))));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onIFISelect\", function (data) {\n      data.selected = !data.selected;\n      var selectedIFIs = 0;\n\n      var IFIList = _this.state.IFIList.map(function (ifi) {\n        if (ifi.selected) {\n          selectedIFIs++;\n        }\n\n        if (ifi.id === data.id) {\n          if (ifi.selected) {\n            selectedIFIs++;\n          }\n\n          return data;\n        } else {\n          return ifi;\n        }\n      });\n\n      _this.setState({\n        selectedIFIs: selectedIFIs,\n        IFIList: IFIList\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onAddIFI\", function () {\n      _this.setState({\n        addIFIState: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onIFIClose\", function () {\n      _this.setState({\n        addIFIState: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFilterOptionSelect\", function (option) {\n      switch (option.name) {\n        case 'All contacts':\n          {\n            _this.setState({\n              selectedSectionId: option.id,\n              filterOption: option.name,\n              IFIList: _this.state.allIFI\n            });\n\n            break;\n          }\n\n        case 'Frequently contacted':\n          {\n            _this.setState({\n              selectedSectionId: option.id,\n              filterOption: option.name,\n              IFIList: _this.state.allIFI.filter(function (ifi) {\n                return ifi.frequently;\n              })\n            });\n\n            break;\n          }\n\n        case 'Starred contacts':\n          {\n            _this.setState({\n              selectedSectionId: option.id,\n              filterOption: option.name,\n              IFIList: _this.state.allIFI.filter(function (ifi) {\n                return ifi.starred;\n              })\n            });\n\n            break;\n          }\n\n        default:\n          break;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSaveIFI\", function (data) {\n      var isNew = true;\n\n      var IFIList = _this.state.allIFI.map(function (ifi) {\n        if (ifi.id === data.id) {\n          isNew = false;\n          return data;\n        } else {\n          return ifi;\n        }\n      });\n\n      if (isNew) {\n        IFIList.push(data);\n      }\n\n      _this.setState({\n        alertMessage: isNew ? 'IFI Added Successfully' : 'IFI Updated Successfully',\n        showMessage: true,\n        IFIList: IFIList,\n        allIFI: IFIList\n      }); // this.onFilterOptionSelect(this.state.filterOption);\n\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDeleteIFI\", function (data) {\n      _this.setState({\n        alertMessage: 'IFI Deleted Successfully',\n        showMessage: true,\n        allIFI: _this.state.allIFI.filter(function (ifi) {\n          return ifi.id !== data.id;\n        }),\n        IFIList: _this.state.allIFI.filter(function (ifi) {\n          return ifi.id !== data.id;\n        })\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDeleteSelectedIFI\", function () {\n      var contacts = _this.state.allIFI.filter(function (ifi) {\n        return !ifi.selected;\n      });\n\n      _this.setState({\n        alertMessage: 'IFI Deleted Successfully',\n        showMessage: true,\n        allIFI: contacts,\n        IFIList: contacts,\n        selectedIFIs: 0\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"filterIFI\", function (ifiName) {\n      var filterOption = _this.state.filterOption;\n\n      if (ifiName === '') {\n        _this.setState({\n          IFIList: _this.state.allIFI\n        });\n      } else {\n        var filterIFI = _this.state.allIFI.filter(function (ifi) {\n          return ifi.name.toLowerCase().indexOf(ifiName.toLowerCase()) > -1;\n        });\n\n        if (filterOption === 'All contacts') {\n          _this.setState({\n            IFIList: filterIFI\n          });\n        } else if (filterOption === 'Frequently contacted') {\n          _this.setState({\n            IFIList: filterIFI.filter(function (ifi) {\n              return ifi.frequently;\n            })\n          });\n        } else if (filterOption === 'Starred contacts') {\n          _this.setState({\n            IFIList: filterIFI.filter(function (ifi) {\n              return ifi.starred;\n            })\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleRequestClose\", function () {\n      _this.setState({\n        showMessage: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getAllIFI\", function () {\n      var IFIList = _this.state.allIFI.map(function (ifi) {\n        return ifi ? _objectSpread(_objectSpread({}, ifi), {}, {\n          selected: true\n        }) : ifi;\n      });\n\n      _this.setState({\n        selectedIFIs: IFIList.length,\n        allIFI: IFIList,\n        IFIList: IFIList\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getUnselectedAllIFI\", function () {\n      var IFIList = _this.state.allIFI.map(function (ifi) {\n        return ifi ? _objectSpread(_objectSpread({}, ifi), {}, {\n          selected: false\n        }) : ifi;\n      });\n\n      _this.setState({\n        selectedIFIs: 0,\n        allIFI: IFIList,\n        IFIList: IFIList\n      });\n    });\n\n    _this.state = {\n      selectedIFI: null,\n      selectedIFIs: 0,\n      allIFI: null,\n      IFIList: null,\n      ifi: {\n        name: '',\n        legalAddress: '',\n        responsiblePersonFullname: '',\n        responsiblePersonPosition: '',\n        responsiblePersonPhoneNumber: '',\n        responsiblePersonEmail: '',\n        additionalContactPersonFullname: '',\n        additionalContactPersonPosition: '',\n        additionalContactPersonPhoneNumber: '',\n        additionalContactPersonEmail: ''\n      },\n      drawerState: false,\n      noContentFoundMessage: 'No IFI found in selected folder',\n      alertMessage: '',\n      showMessage: false,\n      selectedSectionId: 1,\n      searchUser: '',\n      filterOption: 'All IFIs',\n      addIFIState: false\n    };\n    return _this;\n  }\n\n  _createClass(IFI, [{\n    key: \"onAllIFISelect\",\n    value: function onAllIFISelect() {\n      var selectAll = this.state.selectedIFIs < this.state.IFIList.length;\n\n      if (selectAll) {\n        this.getAllIFI();\n      } else {\n        this.getUnselectedAllIFI();\n      }\n    }\n  }, {\n    key: \"updateIFIUser\",\n    value: function updateIFIUser(evt) {\n      this.setState({\n        searchUser: evt.target.value\n      });\n      this.filterIFI(evt.target.value);\n    }\n  }, {\n    key: \"onToggleDrawer\",\n    value: function onToggleDrawer() {\n      this.setState({\n        drawerState: !this.state.drawerState\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          ifi = _this$state.ifi,\n          IFIList = _this$state.IFIList,\n          addIFIState = _this$state.addIFIState,\n          drawerState = _this$state.drawerState,\n          selectedIFIs = _this$state.selectedIFIs,\n          alertMessage = _this$state.alertMessage,\n          showMessage = _this$state.showMessage,\n          noContentFoundMessage = _this$state.noContentFoundMessage;\n      return __jsx(\"div\", {\n        className: \"gx-main-content\"\n      }, __jsx(\"div\", {\n        className: \"gx-app-module\"\n      }, __jsx(\"div\", {\n        className: \"gx-d-block gx-d-lg-none\"\n      }, __jsx(Drawer, {\n        placement: \"left\",\n        closable: false,\n        visible: drawerState,\n        onClose: this.onToggleDrawer.bind(this)\n      }, this.IFISideBar())), __jsx(\"div\", {\n        className: \"gx-module-sidenav gx-d-none gx-d-lg-flex\"\n      }, this.IFISideBar(ifi)), __jsx(\"div\", {\n        className: \"gx-module-box\"\n      }, __jsx(\"div\", {\n        className: \"gx-module-box-header\"\n      }, __jsx(\"span\", {\n        className: \"gx-drawer-btn gx-d-flex gx-d-lg-none\"\n      }, __jsx(\"i\", {\n        className: \"icon icon-menu gx-icon-btn\",\n        \"aria-label\": \"Menu\",\n        onClick: this.onToggleDrawer.bind(this)\n      })), __jsx(AppModuleHeader, {\n        placeholder: \"Search ifi\",\n        notification: false,\n        apps: false,\n        ifi: this.state.ifi,\n        onChange: this.updateIFIUser.bind(this),\n        value: this.state.searchUser\n      })), __jsx(\"div\", {\n        className: \"gx-module-box-content\"\n      }, __jsx(\"div\", {\n        className: \"gx-module-box-topbar\"\n      }, __jsx(Checkbox, {\n        color: \"primary\",\n        className: \"gx-icon-btn\",\n        indeterminate: selectedIFIs > 0 && selectedIFIs < IFIList.length,\n        checked: selectedIFIs > 0,\n        onChange: this.onAllIFISelect.bind(this),\n        value: \"SelectIFI\"\n      }), selectedIFIs > 0 && __jsx(\"i\", {\n        className: \"gx-icon-btn icon icon-trash\",\n        onClick: this.onDeleteSelectedIFI.bind(this)\n      })), __jsx(CustomScrollbars, {\n        className: \"gx-module-content-scroll\"\n      }, IFIList.length === 0 ? __jsx(\"div\", {\n        className: \"gx-h-100 gx-d-flex gx-align-items-center gx-justify-content-center\"\n      }, noContentFoundMessage) : __jsx(ContactList, {\n        IFIList: IFIList,\n        addFavourite: this.addFavourite.bind(this),\n        onIFISelect: this.onIFISelect.bind(this),\n        onDeleteIFI: this.onDeleteIFI.bind(this),\n        onSaveIFI: this.onSaveIFI.bind(this)\n      }))))), __jsx(AddIFI, {\n        open: addIFIState,\n        ifi: {},\n        onSaveIFI: this.onSaveIFI,\n        onIFIClose: this.onIFIClose,\n        onDeleteIFI: this.onDeleteIFI\n      }), showMessage && message.info(__jsx(\"span\", {\n        id: \"message-id\"\n      }, alertMessage), 3, this.handleRequestClose));\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setState({\n        IFIList: this.props.IFIList,\n        allIFI: this.props.IFIList\n      });\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var res, IFIList;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch('http://127.0.0.1:8000/ifis');\n\n              case 2:\n                res = _context.sent;\n                _context.next = 5;\n                return res.json();\n\n              case 5:\n                IFIList = _context.sent;\n                console.log('IFIList: ', IFIList);\n                return _context.abrupt(\"return\", {\n                  IFIList: IFIList\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return IFI;\n}(Component);\n\nexport default IFI;","map":{"version":3,"sources":["E:/frontend-projects/crm-frontend-wieldy/routes/main/CRM/IFIs/index.js"],"names":["Button","Checkbox","Drawer","message","CustomScrollbars","AppModuleHeader","AddIFI","IntlMessages","IFI","ifi","onAddIFI","data","selected","selectedIFIs","IFIList","state","map","id","setState","addIFIState","option","name","selectedSectionId","filterOption","allIFI","filter","frequently","starred","isNew","push","alertMessage","showMessage","contacts","ifiName","filterIFI","toLowerCase","indexOf","length","selectedIFI","legalAddress","responsiblePersonFullname","responsiblePersonPosition","responsiblePersonPhoneNumber","responsiblePersonEmail","additionalContactPersonFullname","additionalContactPersonPosition","additionalContactPersonPhoneNumber","additionalContactPersonEmail","drawerState","noContentFoundMessage","searchUser","selectAll","getAllIFI","getUnselectedAllIFI","evt","target","value","onToggleDrawer","bind","IFISideBar","updateIFIUser","onAllIFISelect","onDeleteSelectedIFI","addFavourite","onIFISelect","onDeleteIFI","onSaveIFI","onIFIClose","info","handleRequestClose","props","fetch","res","json","console","log","Component"],"mappings":"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","sourcesContent":["import {Button, Checkbox, Drawer, message} from \"antd\";\r\nimport CustomScrollbars from \"../../../../util/CustomScrollbars\";\r\n\r\n// import IFIList from \"../../../app/components/ifi/IFIList\";\r\nimport AppModuleHeader from \"../../../../app/components/AppModuleHeader\";\r\nimport AddIFI from \"../../../../app/components/ifi/AddIFI\";\r\nimport IntlMessages from \"../../../../util/IntlMessages\";\r\nimport './index.css';\r\n\r\nclass IFI extends Component {\r\n  constructor() {\r\n    super();\r\n    \r\n    this.state = {\r\n      selectedIFI: null,\r\n      selectedIFIs: 0,\r\n      allIFI: null,\r\n      IFIList: null,\r\n      ifi: {\r\n        name: '',\r\n        legalAddress: '',\r\n        responsiblePersonFullname: '',\r\n        responsiblePersonPosition: '',\r\n        responsiblePersonPhoneNumber: '',\r\n        responsiblePersonEmail: '',\r\n        additionalContactPersonFullname: '',\r\n        additionalContactPersonPosition: '',\r\n        additionalContactPersonPhoneNumber: '',\r\n        additionalContactPersonEmail: '',\r\n      },\r\n      drawerState: false,\r\n      noContentFoundMessage: 'No IFI found in selected folder',\r\n      alertMessage: '',\r\n      showMessage: false,\r\n      selectedSectionId: 1,\r\n      searchUser: '',\r\n      filterOption: 'All IFIs',\r\n      addIFIState: false,\r\n    }\r\n  }\r\n\r\n  IFISideBar = (ifi) => {\r\n    return <div className=\"gx-module-side\">\r\n      <div className=\"gx-module-side-header\">\r\n        <div className=\"gx-module-logo\">\r\n          <i className=\"icon icon-contacts gx-mr-4\"/>\r\n          <span><IntlMessages id=\"chat.contacts\"/></span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"gx-module-side-content\">\r\n        <CustomScrollbars className=\"gx-module-side-scroll\">\r\n          <div className=\"gx-module-add-task\">\r\n            <Button className=\"gx-btn-block ant-btn\" type=\"primary\" aria-label=\"add\"\r\n                    onClick={this.onAddIFI}>\r\n              <i className=\"icon icon-add gx-mr-2\"/>\r\n              <span>Add New IFI</span>\r\n            </Button>\r\n          </div>\r\n        </CustomScrollbars>\r\n      </div>\r\n    </div>\r\n\r\n  };\r\n\r\n  onIFISelect = (data) => {\r\n    data.selected = !data.selected;\r\n    let selectedIFIs = 0;\r\n    const IFIList = this.state.IFIList.map(ifi => {\r\n        if (ifi.selected) {\r\n          selectedIFIs++;\r\n        }\r\n        if (ifi.id === data.id) {\r\n          if (ifi.selected) {\r\n            selectedIFIs++;\r\n          }\r\n          return data;\r\n        } else {\r\n          return ifi;\r\n        }\r\n      }\r\n    );\r\n    this.setState({\r\n      selectedIFIs: selectedIFIs,\r\n      IFIList: IFIList\r\n    });\r\n\r\n  };\r\n\r\n  onAddIFI = () => {\r\n    this.setState({addIFIState: true});\r\n  };\r\n\r\n  onIFIClose = () => {\r\n    this.setState({addIFIState: false});\r\n  };\r\n  \r\n  onFilterOptionSelect = (option) => {\r\n    switch (option.name) {\r\n      case 'All contacts': {\r\n        this.setState({\r\n          selectedSectionId: option.id,\r\n          filterOption: option.name,\r\n          IFIList: this.state.allIFI\r\n        });\r\n        break;\r\n      }\r\n      case 'Frequently contacted': {\r\n        this.setState({\r\n          selectedSectionId: option.id,\r\n          filterOption: option.name,\r\n          IFIList: this.state.allIFI.filter((ifi) => ifi.frequently)\r\n        });\r\n        break;\r\n      }\r\n      case 'Starred contacts': {\r\n        this.setState({\r\n          selectedSectionId: option.id,\r\n          filterOption: option.name,\r\n          IFIList: this.state.allIFI.filter((ifi) => ifi.starred)\r\n        });\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  onSaveIFI = (data) => {\r\n    let isNew = true;\r\n    const IFIList = this.state.allIFI.map((ifi) => {\r\n      if (ifi.id === data.id) {\r\n        isNew = false;\r\n        return data\r\n      } else {\r\n        return ifi\r\n      }\r\n    });\r\n    if (isNew) {\r\n      IFIList.push(data);\r\n    }\r\n    this.setState({\r\n      alertMessage: isNew ? 'IFI Added Successfully' : 'IFI Updated Successfully',\r\n      showMessage: true,\r\n      IFIList: IFIList,\r\n      allIFI: IFIList\r\n    });\r\n    // this.onFilterOptionSelect(this.state.filterOption);\r\n  };\r\n\r\n  onDeleteIFI = (data) => {\r\n    this.setState({\r\n      alertMessage: 'IFI Deleted Successfully',\r\n      showMessage: true,\r\n      allIFI: this.state.allIFI.filter((ifi) => ifi.id !== data.id),\r\n      IFIList: this.state.allIFI.filter((ifi) => ifi.id !== data.id)\r\n    })\r\n  };\r\n\r\n  onDeleteSelectedIFI = () => {\r\n    const contacts = this.state.allIFI.filter((ifi) => !ifi.selected);\r\n    this.setState({\r\n      alertMessage: 'IFI Deleted Successfully',\r\n      showMessage: true,\r\n      allIFI: contacts,\r\n      IFIList: contacts,\r\n      selectedIFIs: 0\r\n    })\r\n  };\r\n  \r\n  filterIFI = (ifiName) => {\r\n    const {filterOption} = this.state;\r\n    if (ifiName === '') {\r\n      this.setState({IFIList: this.state.allIFI});\r\n    } else {\r\n      const filterIFI = this.state.allIFI.filter((ifi) =>\r\n        ifi.name.toLowerCase().indexOf(ifiName.toLowerCase()) > -1);\r\n      if (filterOption === 'All contacts') {\r\n        this.setState({IFIList: filterIFI});\r\n      } else if (filterOption === 'Frequently contacted') {\r\n        this.setState({IFIList: filterIFI.filter((ifi) => ifi.frequently)});\r\n\r\n      } else if (filterOption === 'Starred contacts') {\r\n        this.setState({IFIList: filterIFI.filter((ifi) => ifi.starred)});\r\n      }\r\n    }\r\n  };\r\n  \r\n  handleRequestClose = () => {\r\n    this.setState({\r\n      showMessage: false,\r\n    });\r\n  };\r\n  \r\n  getAllIFI = () => {\r\n    let IFIList = this.state.allIFI.map((ifi) => ifi ? {\r\n      ...ifi,\r\n      selected: true\r\n    } : ifi);\r\n    this.setState({\r\n      selectedIFIs: IFIList.length,\r\n      allIFI: IFIList,\r\n      IFIList: IFIList\r\n    });\r\n  };\r\n  \r\n  getUnselectedAllIFI = () => {\r\n    let IFIList = this.state.allIFI.map((ifi) => ifi ? {\r\n      ...ifi,\r\n      selected: false\r\n    } : ifi);\r\n    this.setState({\r\n      selectedIFIs: 0,\r\n      allIFI: IFIList,\r\n      IFIList: IFIList\r\n    });\r\n  };\r\n\r\n  onAllIFISelect() {\r\n    const selectAll = this.state.selectedIFIs < this.state.IFIList.length;\r\n    if (selectAll) {\r\n      this.getAllIFI();\r\n    } else {\r\n      this.getUnselectedAllIFI();\r\n    }\r\n  }\r\n\r\n  updateIFIUser(evt) {\r\n    this.setState({\r\n      searchUser: evt.target.value,\r\n    });\r\n    this.filterIFI(evt.target.value)\r\n  }\r\n\r\n  onToggleDrawer() {\r\n    this.setState({\r\n      drawerState: !this.state.drawerState\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {ifi, IFIList, addIFIState, drawerState, selectedIFIs, alertMessage, showMessage, noContentFoundMessage} = this.state;\r\n    return (\r\n      <div className=\"gx-main-content\">\r\n        <div className=\"gx-app-module\">\r\n\r\n          <div className=\"gx-d-block gx-d-lg-none\">\r\n            <Drawer\r\n              placement=\"left\"\r\n              closable={false}\r\n              visible={drawerState}\r\n              onClose={this.onToggleDrawer.bind(this)}>\r\n              {this.IFISideBar()}\r\n            </Drawer>\r\n          </div>\r\n          <div className=\"gx-module-sidenav gx-d-none gx-d-lg-flex\">\r\n            {this.IFISideBar(ifi)}\r\n          </div>\r\n\r\n          <div className=\"gx-module-box\">\r\n            <div className=\"gx-module-box-header\">\r\n              <span className=\"gx-drawer-btn gx-d-flex gx-d-lg-none\">\r\n                  <i className=\"icon icon-menu gx-icon-btn\" aria-label=\"Menu\"\r\n                     onClick={this.onToggleDrawer.bind(this)}/>\r\n              </span>\r\n\r\n              <AppModuleHeader placeholder=\"Search ifi\" notification={false} apps={false}\r\n                               ifi={this.state.ifi}\r\n                               onChange={this.updateIFIUser.bind(this)}\r\n                               value={this.state.searchUser}/>\r\n            </div>\r\n            <div className=\"gx-module-box-content\">\r\n\r\n              <div className=\"gx-module-box-topbar\">\r\n                <Checkbox color=\"primary\" className=\"gx-icon-btn\"\r\n                          indeterminate={selectedIFIs > 0 && selectedIFIs < IFIList.length}\r\n                          checked={selectedIFIs > 0}\r\n                          onChange={this.onAllIFISelect.bind(this)}\r\n                          value=\"SelectIFI\"/>\r\n\r\n\r\n                {selectedIFIs > 0 &&\r\n                <i className=\"gx-icon-btn icon icon-trash\" onClick={this.onDeleteSelectedIFI.bind(this)}/>}\r\n\r\n              </div>\r\n              <CustomScrollbars className=\"gx-module-content-scroll\">\r\n                {IFIList.length === 0 ?\r\n                  <div className=\"gx-h-100 gx-d-flex gx-align-items-center gx-justify-content-center\">\r\n                    {noContentFoundMessage}\r\n                  </div>\r\n                  : <ContactList IFIList={IFIList}\r\n                                 addFavourite={this.addFavourite.bind(this)}\r\n                                 onIFISelect={this.onIFISelect.bind(this)}\r\n                                 onDeleteIFI={this.onDeleteIFI.bind(this)}\r\n                                 onSaveIFI={this.onSaveIFI.bind(this)}/>\r\n                }\r\n\r\n\r\n              </CustomScrollbars>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <AddIFI open={addIFIState} ifi={{\r\n          \r\n        }} onSaveIFI={this.onSaveIFI}\r\n                    onIFIClose={this.onIFIClose} onDeleteIFI={this.onDeleteIFI}/>\r\n\r\n        {showMessage && message.info(<span id=\"message-id\">{alertMessage}</span>, 3, this.handleRequestClose)}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  static async getInitialProps() {\r\n    const res = await fetch('http://127.0.0.1:8000/ifis')\r\n    const IFIList = await res.json()\r\n    console.log('IFIList: ', IFIList);\r\n    return { IFIList }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.setState({\r\n      IFIList: this.props.IFIList,\r\n      allIFI: this.props.IFIList\r\n    })\r\n  }\r\n}\r\n\r\nexport default IFI;\r\n"]},"metadata":{},"sourceType":"module"}