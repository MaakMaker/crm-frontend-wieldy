{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Form, Select, InputNumber, Switch, Radio, Slider, Button, Upload, Rate, Checkbox, Row, Col, Card } from 'antd';\nimport { UploadOutlined, InboxOutlined } from '@ant-design/icons';\nvar Option = Select.Option;\nvar formItemLayout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 14\n  }\n};\n\nvar normFile = function normFile(e) {\n  console.log('Upload event:', e);\n\n  if (Array.isArray(e)) {\n    return e;\n  }\n\n  return e && e.fileList;\n};\n\nvar OtherFormControls = function OtherFormControls() {\n  var onFinish = function onFinish(values) {\n    console.log('Received values of form: ', values);\n  };\n\n  return __jsx(Card, {\n    className: \"gx-card\",\n    title: \"OTHER FORM CONTROLS\"\n  }, __jsx(Form, _extends({\n    name: \"validate_other\"\n  }, formItemLayout, {\n    onFinish: onFinish,\n    initialValues: {\n      'input-number': 3,\n      'checkbox-group': ['A', 'B'],\n      rate: 3.5\n    }\n  }), __jsx(Form.Item, {\n    label: \"Plain Text\"\n  }, __jsx(\"span\", {\n    className: \"ant-form-text\"\n  }, \"China\")), __jsx(Form.Item, {\n    name: \"select\",\n    label: \"Select\",\n    hasFeedback: true,\n    rules: [{\n      required: true,\n      message: 'Please select your country!'\n    }]\n  }, __jsx(Select, {\n    placeholder: \"Please select a country\"\n  }, __jsx(Option, {\n    value: \"china\"\n  }, \"China\"), __jsx(Option, {\n    value: \"usa\"\n  }, \"U.S.A\"))), __jsx(Form.Item, {\n    name: \"select-multiple\",\n    label: \"Select[multiple]\",\n    rules: [{\n      required: true,\n      message: 'Please select your favourite colors!',\n      type: 'array'\n    }]\n  }, __jsx(Select, {\n    mode: \"multiple\",\n    placeholder: \"Please select favourite colors\"\n  }, __jsx(Option, {\n    value: \"red\"\n  }, \"Red\"), __jsx(Option, {\n    value: \"green\"\n  }, \"Green\"), __jsx(Option, {\n    value: \"blue\"\n  }, \"Blue\"))), __jsx(Form.Item, {\n    label: \"InputNumber\"\n  }, __jsx(Form.Item, {\n    name: \"input-number\",\n    noStyle: true\n  }, __jsx(InputNumber, {\n    min: 1,\n    max: 10\n  })), __jsx(\"span\", {\n    className: \"ant-form-text\"\n  }, \" machines\")), __jsx(Form.Item, {\n    name: \"switch\",\n    label: \"Switch\",\n    valuePropName: \"checked\"\n  }, __jsx(Switch, null)), __jsx(Form.Item, {\n    name: \"slider\",\n    label: \"Slider\"\n  }, __jsx(Slider, {\n    marks: {\n      0: 'A',\n      20: 'B',\n      40: 'C',\n      60: 'D',\n      80: 'E',\n      100: 'F'\n    }\n  })), __jsx(Form.Item, {\n    name: \"radio-group\",\n    label: \"Radio.Group\"\n  }, __jsx(Radio.Group, null, __jsx(Radio, {\n    value: \"a\"\n  }, \"item 1\"), __jsx(Radio, {\n    value: \"b\"\n  }, \"item 2\"), __jsx(Radio, {\n    value: \"c\"\n  }, \"item 3\"))), __jsx(Form.Item, {\n    name: \"radio-button\",\n    label: \"Radio.Button\"\n  }, __jsx(Radio.Group, null, __jsx(Radio.Button, {\n    value: \"a\"\n  }, \"item 1\"), __jsx(Radio.Button, {\n    value: \"b\"\n  }, \"item 2\"), __jsx(Radio.Button, {\n    value: \"c\"\n  }, \"item 3\"))), __jsx(Form.Item, {\n    name: \"checkbox-group\",\n    label: \"Checkbox.Group\"\n  }, __jsx(Checkbox.Group, null, __jsx(Row, null, __jsx(Col, {\n    span: 8\n  }, __jsx(Checkbox, {\n    value: \"A\",\n    style: {\n      lineHeight: '32px'\n    }\n  }, \"A\")), __jsx(Col, {\n    span: 8\n  }, __jsx(Checkbox, {\n    value: \"B\",\n    style: {\n      lineHeight: '32px'\n    },\n    disabled: true\n  }, \"B\")), __jsx(Col, {\n    span: 8\n  }, __jsx(Checkbox, {\n    value: \"C\",\n    style: {\n      lineHeight: '32px'\n    }\n  }, \"C\")), __jsx(Col, {\n    span: 8\n  }, __jsx(Checkbox, {\n    value: \"D\",\n    style: {\n      lineHeight: '32px'\n    }\n  }, \"D\")), __jsx(Col, {\n    span: 8\n  }, __jsx(Checkbox, {\n    value: \"E\",\n    style: {\n      lineHeight: '32px'\n    }\n  }, \"E\")), __jsx(Col, {\n    span: 8\n  }, __jsx(Checkbox, {\n    value: \"F\",\n    style: {\n      lineHeight: '32px'\n    }\n  }, \"F\"))))), __jsx(Form.Item, {\n    name: \"rate\",\n    label: \"Rate\"\n  }, __jsx(Rate, null)), __jsx(Form.Item, {\n    name: \"upload\",\n    label: \"Upload\",\n    valuePropName: \"fileList\",\n    getValueFromEvent: normFile,\n    extra: \"longgggggggggggggggggggggggggggggggggg\"\n  }, __jsx(Upload, {\n    name: \"logo\",\n    action: \"/upload.do\",\n    listType: \"picture\"\n  }, __jsx(Button, null, __jsx(UploadOutlined, null), \" Click to upload\"))), __jsx(Form.Item, {\n    label: \"Dragger\"\n  }, __jsx(Form.Item, {\n    name: \"dragger\",\n    valuePropName: \"fileList\",\n    getValueFromEvent: normFile,\n    noStyle: true\n  }, __jsx(Upload.Dragger, {\n    name: \"files\",\n    action: \"/upload.do\"\n  }, __jsx(\"p\", {\n    className: \"ant-upload-drag-icon\"\n  }, __jsx(InboxOutlined, null)), __jsx(\"p\", {\n    className: \"ant-upload-text\"\n  }, \"Click or drag file to this area to upload\"), __jsx(\"p\", {\n    className: \"ant-upload-hint\"\n  }, \"Support for a single or bulk upload.\")))), __jsx(Form.Item, {\n    wrapperCol: {\n      span: 12,\n      offset: 6\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\"\n  }, \"Submit\"))));\n};\n\n_c = OtherFormControls;\nexport default OtherFormControls;\n\nvar _c;\n\n$RefreshReg$(_c, \"OtherFormControls\");","map":{"version":3,"sources":["E:/frontend-projects/crm-frontend-wieldy/routes/components/dataEntry/Form/OtherFormControls.js"],"names":["React","Form","Select","InputNumber","Switch","Radio","Slider","Button","Upload","Rate","Checkbox","Row","Col","Card","UploadOutlined","InboxOutlined","Option","formItemLayout","labelCol","span","wrapperCol","normFile","e","console","log","Array","isArray","fileList","OtherFormControls","onFinish","values","rate","required","message","type","lineHeight","offset"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Button,\r\n  Upload,\r\n  Rate,\r\n  Checkbox,\r\n  Row,\r\n  Col,\r\n  Card\r\n} from 'antd';\r\nimport { UploadOutlined, InboxOutlined } from '@ant-design/icons';\r\n\r\nconst { Option } = Select;\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    span: 6,\r\n  },\r\n  wrapperCol: {\r\n    span: 14,\r\n  },\r\n};\r\n\r\nconst normFile = e => {\r\n  console.log('Upload event:', e);\r\n\r\n  if (Array.isArray(e)) {\r\n    return e;\r\n  }\r\n\r\n  return e && e.fileList;\r\n};\r\n\r\nconst OtherFormControls = () => {\r\n  const onFinish = values => {\r\n    console.log('Received values of form: ', values);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"gx-card\" title=\"OTHER FORM CONTROLS\">\r\n    <Form\r\n      name=\"validate_other\"\r\n      {...formItemLayout}\r\n      onFinish={onFinish}\r\n      initialValues={{\r\n        'input-number': 3,\r\n        'checkbox-group': ['A', 'B'],\r\n        rate: 3.5,\r\n      }}\r\n    >\r\n      <Form.Item label=\"Plain Text\">\r\n        <span className=\"ant-form-text\">China</span>\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"select\"\r\n        label=\"Select\"\r\n        hasFeedback\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please select your country!',\r\n          },\r\n        ]}\r\n      >\r\n        <Select placeholder=\"Please select a country\">\r\n          <Option value=\"china\">China</Option>\r\n          <Option value=\"usa\">U.S.A</Option>\r\n        </Select>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"select-multiple\"\r\n        label=\"Select[multiple]\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please select your favourite colors!',\r\n            type: 'array',\r\n          },\r\n        ]}\r\n      >\r\n        <Select mode=\"multiple\" placeholder=\"Please select favourite colors\">\r\n          <Option value=\"red\">Red</Option>\r\n          <Option value=\"green\">Green</Option>\r\n          <Option value=\"blue\">Blue</Option>\r\n        </Select>\r\n      </Form.Item>\r\n\r\n      <Form.Item label=\"InputNumber\">\r\n        <Form.Item name=\"input-number\" noStyle>\r\n          <InputNumber min={1} max={10} />\r\n        </Form.Item>\r\n        <span className=\"ant-form-text\"> machines</span>\r\n      </Form.Item>\r\n\r\n      <Form.Item name=\"switch\" label=\"Switch\" valuePropName=\"checked\">\r\n        <Switch />\r\n      </Form.Item>\r\n\r\n      <Form.Item name=\"slider\" label=\"Slider\">\r\n        <Slider\r\n          marks={{\r\n            0: 'A',\r\n            20: 'B',\r\n            40: 'C',\r\n            60: 'D',\r\n            80: 'E',\r\n            100: 'F',\r\n          }}\r\n        />\r\n      </Form.Item>\r\n\r\n      <Form.Item name=\"radio-group\" label=\"Radio.Group\">\r\n        <Radio.Group>\r\n          <Radio value=\"a\">item 1</Radio>\r\n          <Radio value=\"b\">item 2</Radio>\r\n          <Radio value=\"c\">item 3</Radio>\r\n        </Radio.Group>\r\n      </Form.Item>\r\n\r\n      <Form.Item name=\"radio-button\" label=\"Radio.Button\">\r\n        <Radio.Group>\r\n          <Radio.Button value=\"a\">item 1</Radio.Button>\r\n          <Radio.Button value=\"b\">item 2</Radio.Button>\r\n          <Radio.Button value=\"c\">item 3</Radio.Button>\r\n        </Radio.Group>\r\n      </Form.Item>\r\n\r\n      <Form.Item name=\"checkbox-group\" label=\"Checkbox.Group\">\r\n        <Checkbox.Group>\r\n          <Row>\r\n            <Col span={8}>\r\n              <Checkbox\r\n                value=\"A\"\r\n                style={{\r\n                  lineHeight: '32px',\r\n                }}\r\n              >\r\n                A\r\n              </Checkbox>\r\n            </Col>\r\n            <Col span={8}>\r\n              <Checkbox\r\n                value=\"B\"\r\n                style={{\r\n                  lineHeight: '32px',\r\n                }}\r\n                disabled\r\n              >\r\n                B\r\n              </Checkbox>\r\n            </Col>\r\n            <Col span={8}>\r\n              <Checkbox\r\n                value=\"C\"\r\n                style={{\r\n                  lineHeight: '32px',\r\n                }}\r\n              >\r\n                C\r\n              </Checkbox>\r\n            </Col>\r\n            <Col span={8}>\r\n              <Checkbox\r\n                value=\"D\"\r\n                style={{\r\n                  lineHeight: '32px',\r\n                }}\r\n              >\r\n                D\r\n              </Checkbox>\r\n            </Col>\r\n            <Col span={8}>\r\n              <Checkbox\r\n                value=\"E\"\r\n                style={{\r\n                  lineHeight: '32px',\r\n                }}\r\n              >\r\n                E\r\n              </Checkbox>\r\n            </Col>\r\n            <Col span={8}>\r\n              <Checkbox\r\n                value=\"F\"\r\n                style={{\r\n                  lineHeight: '32px',\r\n                }}\r\n              >\r\n                F\r\n              </Checkbox>\r\n            </Col>\r\n          </Row>\r\n        </Checkbox.Group>\r\n      </Form.Item>\r\n\r\n      <Form.Item name=\"rate\" label=\"Rate\">\r\n        <Rate />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"upload\"\r\n        label=\"Upload\"\r\n        valuePropName=\"fileList\"\r\n        getValueFromEvent={normFile}\r\n        extra=\"longgggggggggggggggggggggggggggggggggg\"\r\n      >\r\n        <Upload name=\"logo\" action=\"/upload.do\" listType=\"picture\">\r\n          <Button>\r\n            <UploadOutlined /> Click to upload\r\n          </Button>\r\n        </Upload>\r\n      </Form.Item>\r\n\r\n      <Form.Item label=\"Dragger\">\r\n        <Form.Item name=\"dragger\" valuePropName=\"fileList\" getValueFromEvent={normFile} noStyle>\r\n          <Upload.Dragger name=\"files\" action=\"/upload.do\">\r\n            <p className=\"ant-upload-drag-icon\">\r\n              <InboxOutlined />\r\n            </p>\r\n            <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\r\n            <p className=\"ant-upload-hint\">Support for a single or bulk upload.</p>\r\n          </Upload.Dragger>\r\n        </Form.Item>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        wrapperCol={{\r\n          span: 12,\r\n          offset: 6,\r\n        }}\r\n      >\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default OtherFormControls;\r\n"]},"metadata":{},"sourceType":"module"}