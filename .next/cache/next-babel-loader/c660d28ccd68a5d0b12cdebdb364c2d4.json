{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Button, Card, Form, Input } from \"antd\";\nimport UserOutlined from \"@ant-design/icons/lib/icons/UserOutlined\";\nimport LockOutlined from \"@ant-design/icons/lib/icons/LockOutlined\";\nvar FormItem = Form.Item;\n\nfunction hasErrors(fieldsError) {\n  return Object.keys(fieldsError).some(function (field) {\n    return fieldsError[field];\n  });\n}\n\nvar Basic = /*#__PURE__*/function (_Component) {\n  _inherits(Basic, _Component);\n\n  var _super = _createSuper(Basic);\n\n  function Basic() {\n    var _this;\n\n    _classCallCheck(this, Basic);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"onFinishFailed\", function (errorInfo) {\n      console.log('Failed:', errorInfo);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFinish\", function (values) {\n      console.log('Received values of form: ', values);\n    });\n\n    return _this;\n  }\n\n  _createClass(Basic, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(Card, {\n        className: \"gx-card\",\n        title: \"Basic\"\n      }, __jsx(Form, {\n        initialValues: {\n          remember: true\n        },\n        name: \"basic\",\n        onFinish: this.onFinish,\n        onFinishFailed: this.onFinishFailed,\n        layout: \"inline\"\n      }, __jsx(FormItem, {\n        rules: [{\n          required: true,\n          message: 'Please input your username!\\'}'\n        }],\n        name: \"uaername\"\n      }, __jsx(Input, {\n        prefix: __jsx(UserOutlined, {\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          }\n        }),\n        placeholder: \"Username\"\n      })), __jsx(FormItem, {\n        rules: [{\n          required: true,\n          message: 'Please input your Password!'\n        }],\n        name: \"password\"\n      }, __jsx(Input, {\n        prefix: __jsx(LockOutlined, {\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          }\n        }),\n        type: \"password\",\n        placeholder: \"Password\"\n      })), __jsx(FormItem, null, __jsx(Button, {\n        className: \"gx-mb-0\",\n        type: \"primary\",\n        htmlType: \"submit\"\n      }, \"Log in\"))));\n    }\n  }]);\n\n  return Basic;\n}(Component);\n\nexport default Basic;","map":{"version":3,"sources":["E:/frontend-projects/crm-frontend-wieldy/routes/components/dataEntry/Form/Basic.js"],"names":["React","Component","Button","Card","Form","Input","UserOutlined","LockOutlined","FormItem","Item","hasErrors","fieldsError","Object","keys","some","field","Basic","errorInfo","console","log","values","remember","onFinish","onFinishFailed","required","message","color"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,IAAtB,EAA4BC,KAA5B,QAAwC,MAAxC;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AAEA,IAAMC,QAAQ,GAAGJ,IAAI,CAACK,IAAtB;;AAEA,SAASC,SAAT,CAAmBC,WAAnB,EAAgC;AAC9B,SAAOC,MAAM,CAACC,IAAP,CAAYF,WAAZ,EAAyBG,IAAzB,CAA8B,UAAAC,KAAK;AAAA,WAAIJ,WAAW,CAACI,KAAD,CAAf;AAAA,GAAnC,CAAP;AACD;;IAEKC,K;;;;;;;;;;;;;;;;qEAGa,UAAAC,SAAS,EAAI;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,SAAvB;AACD,K;;+DAEU,UAAAG,MAAM,EAAI;AACnBF,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCC,MAAzC;AAED,K;;;;;;;6BAEQ;AACP,aACE,MAAC,IAAD;AAAM,QAAA,SAAS,EAAC,SAAhB;AAA0B,QAAA,KAAK,EAAC;AAAhC,SACE,MAAC,IAAD;AACE,QAAA,aAAa,EAAE;AAACC,UAAAA,QAAQ,EAAE;AAAX,SADjB;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,QAAQ,EAAE,KAAKC,QAHjB;AAIE,QAAA,cAAc,EAAE,KAAKC,cAJvB;AAKE,QAAA,MAAM,EAAC;AALT,SAOE,MAAC,QAAD;AAAU,QAAA,KAAK,EAAE,CAAC;AAACC,UAAAA,QAAQ,EAAE,IAAX;AAAiBC,UAAAA,OAAO,EAAE;AAA1B,SAAD,CAAjB;AAAgF,QAAA,IAAI,EAAC;AAArF,SAEE,MAAC,KAAD;AAAO,QAAA,MAAM,EAAE,MAAC,YAAD;AAAc,UAAA,KAAK,EAAE;AAACC,YAAAA,KAAK,EAAE;AAAR;AAArB,UAAf;AACO,QAAA,WAAW,EAAC;AADnB,QAFF,CAPF,EAaE,MAAC,QAAD;AAAU,QAAA,KAAK,EAAE,CAAC;AAACF,UAAAA,QAAQ,EAAE,IAAX;AAAiBC,UAAAA,OAAO,EAAE;AAA1B,SAAD,CAAjB;AAA6E,QAAA,IAAI,EAAC;AAAlF,SACE,MAAC,KAAD;AAAO,QAAA,MAAM,EAAE,MAAC,YAAD;AAAc,UAAA,KAAK,EAAE;AAACC,YAAAA,KAAK,EAAE;AAAR;AAArB,UAAf;AACO,QAAA,IAAI,EAAC,UADZ;AAEO,QAAA,WAAW,EAAC;AAFnB,QADF,CAbF,EAkBE,MAAC,QAAD,QACE,MAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,SAAlB;AACQ,QAAA,IAAI,EAAC,SADb;AAEQ,QAAA,QAAQ,EAAC;AAFjB,kBADF,CAlBF,CADF,CADF;AA+BD;;;;EA5CiBzB,S;;AA+CpB,eAAee,KAAf","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Button, Card, Form, Input} from \"antd\";\r\nimport UserOutlined from \"@ant-design/icons/lib/icons/UserOutlined\";\r\nimport LockOutlined from \"@ant-design/icons/lib/icons/LockOutlined\";\r\n\r\nconst FormItem = Form.Item;\r\n\r\nfunction hasErrors(fieldsError) {\r\n  return Object.keys(fieldsError).some(field => fieldsError[field]);\r\n}\r\n\r\nclass Basic extends Component {\r\n\r\n\r\n  onFinishFailed = errorInfo => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  onFinish = values => {\r\n    console.log('Received values of form: ', values);\r\n\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Basic\">\r\n        <Form\r\n          initialValues={{remember: true}}\r\n          name=\"basic\"\r\n          onFinish={this.onFinish}\r\n          onFinishFailed={this.onFinishFailed}\r\n          layout=\"inline\">\r\n\r\n          <FormItem rules={[{required: true, message: 'Please input your username!\\'}'}]} name=\"uaername\">\r\n\r\n            <Input prefix={<UserOutlined style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                   placeholder=\"Username\"/>\r\n          </FormItem>\r\n\r\n          <FormItem rules={[{required: true, message: 'Please input your Password!'}]} name=\"password\">\r\n            <Input prefix={<LockOutlined style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                   type=\"password\"\r\n                   placeholder=\"Password\"/>\r\n          </FormItem>\r\n          <FormItem>\r\n            <Button className=\"gx-mb-0\"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n            >\r\n              Log in\r\n            </Button>\r\n          </FormItem>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Basic;\r\n\r\n"]},"metadata":{},"sourceType":"module"}