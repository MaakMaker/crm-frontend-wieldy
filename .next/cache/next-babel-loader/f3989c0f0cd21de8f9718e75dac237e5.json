{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { Form, Input, Button, Card } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport React from \"react\";\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 4\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 20\n    }\n  }\n};\nconst formItemLayoutWithOutLabel = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 20,\n      offset: 4\n    }\n  }\n};\n\nconst DynamicFormItem = () => {\n  const onFinish = values => {\n    console.log('Received values of form:', values);\n  };\n\n  return __jsx(Card, {\n    className: \"gx-card\",\n    title: \"Dynamic Form Item\"\n  }, __jsx(Form, _extends({\n    name: \"dynamic_form_item\"\n  }, formItemLayoutWithOutLabel, {\n    onFinish: onFinish\n  }), __jsx(Form.List, {\n    name: \"names\"\n  }, (fields, {\n    add,\n    remove\n  }) => {\n    return __jsx(\"div\", null, fields.map((field, index) => __jsx(Form.Item, _extends({}, index === 0 ? formItemLayout : formItemLayoutWithOutLabel, {\n      label: index === 0 ? 'Passengers' : '',\n      required: false,\n      key: field.key\n    }), __jsx(Form.Item, _extends({}, field, {\n      validateTrigger: ['onChange', 'onBlur'],\n      rules: [{\n        required: true,\n        whitespace: true,\n        message: \"Please input passenger's name or delete this field.\"\n      }],\n      noStyle: true\n    }), __jsx(Input, {\n      placeholder: \"passenger name\",\n      style: {\n        width: '60%'\n      }\n    })), fields.length > 1 ? __jsx(MinusCircleOutlined, {\n      className: \"dynamic-delete-button\",\n      style: {\n        margin: '0 8px'\n      },\n      onClick: () => {\n        remove(field.name);\n      }\n    }) : null)), __jsx(Form.Item, null, __jsx(Button, {\n      type: \"dashed\",\n      onClick: () => {\n        add();\n      },\n      style: {\n        width: '60%'\n      }\n    }, __jsx(PlusOutlined, null), \" Add field\")));\n  }), __jsx(Form.Item, null, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\"\n  }, \"Submit\"))));\n};\n\nexport default DynamicFormItem;","map":{"version":3,"sources":["E:/frontend-projects/crm-frontend-wieldy/routes/components/dataEntry/Form/DynamicFormItem.js"],"names":["Form","Input","Button","Card","MinusCircleOutlined","PlusOutlined","React","formItemLayout","labelCol","xs","span","sm","wrapperCol","formItemLayoutWithOutLabel","offset","DynamicFormItem","onFinish","values","console","log","fields","add","remove","map","field","index","key","required","whitespace","message","width","length","margin","name"],"mappings":"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","sourcesContent":["import { Form, Input, Button ,Card} from 'antd';\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React from \"react\";\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 4 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 20 },\r\n  },\r\n};\r\nconst formItemLayoutWithOutLabel = {\r\n  wrapperCol: {\r\n    xs: { span: 24, offset: 0 },\r\n    sm: { span: 20, offset: 4 },\r\n  },\r\n};\r\n\r\nconst DynamicFormItem = () => {\r\n  const onFinish = values => {\r\n    console.log('Received values of form:', values);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"gx-card\" title=\"Dynamic Form Item\">\r\n    <Form name=\"dynamic_form_item\" {...formItemLayoutWithOutLabel} onFinish={onFinish}>\r\n      <Form.List name=\"names\">\r\n        {(fields, { add, remove }) => {\r\n          return (\r\n            <div>\r\n              {fields.map((field, index) => (\r\n                <Form.Item\r\n                  {...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel)}\r\n                  label={index === 0 ? 'Passengers' : ''}\r\n                  required={false}\r\n                  key={field.key}\r\n                >\r\n                  <Form.Item\r\n                    {...field}\r\n                    validateTrigger={['onChange', 'onBlur']}\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        whitespace: true,\r\n                        message: \"Please input passenger's name or delete this field.\",\r\n                      },\r\n                    ]}\r\n                    noStyle\r\n                  >\r\n                    <Input placeholder=\"passenger name\" style={{ width: '60%' }} />\r\n                  </Form.Item>\r\n                  {fields.length > 1 ? (\r\n                    <MinusCircleOutlined\r\n                      className=\"dynamic-delete-button\"\r\n                      style={{ margin: '0 8px' }}\r\n                      onClick={() => {\r\n                        remove(field.name);\r\n                      }}\r\n                    />\r\n                  ) : null}\r\n                </Form.Item>\r\n              ))}\r\n              <Form.Item>\r\n                <Button\r\n                  type=\"dashed\"\r\n                  onClick={() => {\r\n                    add();\r\n                  }}\r\n                  style={{ width: '60%' }}\r\n                >\r\n                  <PlusOutlined /> Add field\r\n                </Button>\r\n              </Form.Item>\r\n            </div>\r\n          );\r\n        }}\r\n      </Form.List>\r\n\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n    </Card>\r\n  );\r\n};\r\nexport  default  DynamicFormItem;\r\n"]},"metadata":{},"sourceType":"module"}