{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Button, Checkbox, Drawer, Dropdown, Menu, message } from \"antd\";\nimport CustomScrollbars from \"../../../util/CustomScrollbars\";\nimport toDos from \"./data/todo\";\nimport filters from \"./data/filters\";\nimport labels from \"./data/labels\";\nimport options from \"./data/options\";\nimport todoConversation from \"./data/todoConversation\";\nimport ToDoList from \"../../../app/components/todo/ToDoList\";\nimport ToDoDetail from \"../../../app/components/todo/ToDoDetail\";\nimport AppModuleHeader from \"../../../app/components/AppModuleHeader\";\nimport IntlMessages from \"../../../util/IntlMessages\";\nimport CircularProgress from \"../../../app/components/CircularProgress\";\nimport './index.css';\nvar ITEM_HEIGHT = 34;\n\nvar ToDo = /*#__PURE__*/function (_Component) {\n  _inherits(ToDo, _Component);\n\n  var _super = _createSuper(ToDo);\n\n  function ToDo() {\n    var _this;\n\n    _classCallCheck(this, ToDo);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"onSortEnd\", function (_ref) {\n      var oldIndex = _ref.oldIndex,\n          newIndex = _ref.newIndex;\n\n      _this.setState({\n        toDos: (_this.state.toDos, oldIndex, newIndex)\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onLabelSelect\", function (event) {\n      _this.setState({\n        anchorEl: event.currentTarget,\n        labelMenuState: !_this.state.labelMenuState\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onOptionMenuSelect\", function (event) {\n      _this.setState({\n        anchorEl: event.currentTarget,\n        optionMenuState: !_this.state.optionMenuState\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onOptionMenuItemSelect\", function (e) {\n      switch (e.key) {\n        case 'All':\n          _this.handleRequestClose();\n\n          _this.getAllTodo();\n\n          break;\n\n        case 'None':\n          _this.handleRequestClose();\n\n          _this.getUnselectedAllTodo();\n\n          break;\n\n        case 'Starred':\n          _this.handleRequestClose();\n\n          _this.getStarredToDo();\n\n          break;\n\n        case 'Unstarred':\n          _this.handleRequestClose();\n\n          _this.getUnStarredTodo();\n\n          break;\n\n        case 'Important':\n          _this.handleRequestClose();\n\n          _this.getImportantToDo();\n\n          break;\n\n        case 'Unimportant':\n          _this.handleRequestClose();\n\n          _this.getUnimportantToDo();\n\n          break;\n\n        default:\n          return '';\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getAllTodo\", function () {\n      var toDos = _this.state.allToDos.map(function (todo) {\n        return todo ? _objectSpread(_objectSpread({}, todo), {}, {\n          selected: true\n        }) : todo;\n      });\n\n      _this.setState({\n        selectedToDos: toDos.length,\n        allToDos: toDos,\n        optionName: 'All',\n        toDos: toDos\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getUnselectedAllTodo\", function () {\n      var toDos = _this.state.allToDos.map(function (todo) {\n        return todo ? _objectSpread(_objectSpread({}, todo), {}, {\n          selected: false\n        }) : todo;\n      });\n\n      _this.setState({\n        selectedToDos: 0,\n        allToDos: toDos,\n        optionName: 'None',\n        toDos: toDos\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getStarredToDo\", function () {\n      var selectedToDos = 0;\n\n      var toDos = _this.state.allToDos.map(function (todo) {\n        if (todo.starred) {\n          selectedToDos++;\n          return _objectSpread(_objectSpread({}, todo), {}, {\n            selected: true\n          });\n        }\n\n        return _objectSpread(_objectSpread({}, todo), {}, {\n          selected: false\n        });\n      });\n\n      _this.setState({\n        selectedToDos: selectedToDos,\n        allToDos: toDos,\n        toDos: toDos.filter(function (todo) {\n          return !todo.deleted;\n        })\n      });\n\n      return toDos;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getUnStarredTodo\", function () {\n      var selectedToDos = 0;\n\n      var toDos = _this.state.allToDos.map(function (todo) {\n        if (!todo.starred) {\n          selectedToDos++;\n          return _objectSpread(_objectSpread({}, todo), {}, {\n            selected: true\n          });\n        }\n\n        return _objectSpread(_objectSpread({}, todo), {}, {\n          selected: false\n        });\n      });\n\n      _this.setState({\n        selectedToDos: selectedToDos,\n        allToDos: toDos,\n        optionName: 'Unstarred',\n        toDos: toDos.filter(function (todo) {\n          return !todo.deleted;\n        })\n      });\n\n      return toDos;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getImportantToDo\", function () {\n      var selectedToDos = 0;\n\n      var toDos = _this.state.allToDos.map(function (todo) {\n        if (todo.important) {\n          selectedToDos++;\n          return _objectSpread(_objectSpread({}, todo), {}, {\n            selected: true\n          });\n        }\n\n        return _objectSpread(_objectSpread({}, todo), {}, {\n          selected: false\n        });\n      });\n\n      _this.setState({\n        selectedToDos: selectedToDos,\n        allToDos: toDos,\n        optionName: 'Important',\n        toDos: toDos.filter(function (todo) {\n          return !todo.deleted;\n        })\n      });\n\n      return toDos;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getUnimportantToDo\", function () {\n      var selectedToDos = 0;\n\n      var toDos = _this.state.allToDos.map(function (todo) {\n        if (!todo.important) {\n          selectedToDos++;\n          return _objectSpread(_objectSpread({}, todo), {}, {\n            selected: true\n          });\n        }\n\n        return _objectSpread(_objectSpread({}, todo), {}, {\n          selected: false\n        });\n      });\n\n      _this.setState({\n        selectedToDos: selectedToDos,\n        allToDos: toDos,\n        optionName: 'Unimportant',\n        toDos: toDos.filter(function (todo) {\n          return !todo.deleted;\n        })\n      });\n\n      return toDos;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onLabelMenuItemSelect\", function (e) {\n      var label = +e.key;\n\n      _this.handleRequestClose();\n\n      var toDos = _this.state.allToDos.map(function (todo) {\n        if (todo.selected) {\n          if (todo.labels.includes(label.id)) {\n            return _objectSpread(_objectSpread({}, todo), {}, {\n              labels: _this.removeLabel(todo, label.id)\n            });\n          } else {\n            return _objectSpread(_objectSpread({}, todo), {}, {\n              labels: _this.addLabel(todo, label.id)\n            });\n          }\n        } else {\n          return todo;\n        }\n      });\n\n      _this.setState({\n        alertMessage: 'Label Updated Successfully',\n        showMessage: true,\n        allToDos: toDos,\n        toDos: toDos\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleRequestClose\", function () {\n      _this.setState({\n        showMessage: false,\n        addTodo: false,\n        labelMenuState: false,\n        optionMenuState: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onLabelUpdate\", function (data, label) {\n      if (data.labels.includes(label.id)) {\n        data.labels = _this.removeLabel(data, label.id);\n      } else {\n        data.labels = _this.addLabel(data, label.id);\n      }\n\n      _this.handleRequestClose();\n\n      var toDos = _this.state.allToDos.map(function (todo) {\n        if (todo.id === data.id) {\n          return data;\n        } else {\n          return todo;\n        }\n      });\n\n      _this.setState({\n        alertMessage: 'Label Updated Successfully',\n        showMessage: true,\n        currentTodo: data,\n        allToDos: toDos,\n        toDos: toDos\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onMarkAsStart\", function (data) {\n      var toDos = _this.state.allToDos.map(function (todo) {\n        if (todo.id === data.id) {\n          return data;\n        } else {\n          return todo;\n        }\n      });\n\n      _this.setState({\n        alertMessage: 'ToDo Updated Successfully',\n        showMessage: true,\n        allToDos: toDos,\n        toDos: toDos\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onToDoUpdate\", function (data) {\n      _this.handleRequestClose();\n\n      var toDos = _this.state.allToDos.map(function (todo) {\n        if (todo.id === data.id) {\n          return data;\n        } else {\n          return todo;\n        }\n      });\n\n      _this.setState({\n        alertMessage: 'ToDo Updated Successfully',\n        showMessage: true,\n        currentTodo: data,\n        allToDos: toDos,\n        toDos: toDos\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDeleteToDo\", function (data) {\n      var selectedToDos = 0;\n\n      var toDos = _this.state.allToDos.map(function (todo) {\n        if (todo.selected) {\n          selectedToDos++;\n        }\n\n        if (data.id === todo.id) {\n          if (todo.selected) {\n            selectedToDos--;\n          }\n\n          return _objectSpread(_objectSpread({}, todo), {}, {\n            deleted: true\n          });\n        } else {\n          return todo;\n        }\n      });\n\n      _this.setState({\n        alertMessage: 'ToDo Deleted Successfully',\n        showMessage: true,\n        allToDos: toDos,\n        currentTodo: null,\n        selectedToDos: selectedToDos,\n        toDos: toDos.filter(function (todo) {\n          return !todo.deleted;\n        })\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getNavFilters\", function () {\n      return filters.map(function (filter, index) {\n        return __jsx(\"li\", {\n          key: index,\n          onClick: function onClick() {\n            var filterMails = _this.state.allToDos.filter(function (todo) {\n              if (filter.id === 0 && todo.starred) {\n                return todo;\n              } else if (filter.id === 1 && todo.important) {\n                return todo;\n              } else if (filter.id === 2 && todo.important) {\n                return todo;\n              } else if (filter.id === 3 && todo.important) {\n                return todo;\n              } else if (filter.id === 4 && todo.completed) {\n                return todo;\n              } else if (filter.id === 5 && todo.deleted) {\n                return todo;\n              } else return todo;\n            });\n\n            _this.setState({\n              loader: true,\n              currentTodo: null,\n              filter: filter.id,\n              toDos: filterMails\n            });\n\n            setTimeout(function () {\n              _this.setState({\n                loader: false\n              });\n            }, 1500);\n          }\n        }, __jsx(\"span\", {\n          className: filter.id === _this.state.selectedSectionId ? 'gx-link active' : 'gx-link'\n        }, __jsx(\"i\", {\n          className: \"icon icon-\".concat(filter.icon)\n        }), __jsx(\"span\", null, filter.title)));\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getNavLabels\", function () {\n      return labels.map(function (label, index) {\n        return __jsx(\"li\", {\n          key: index,\n          onClick: function onClick() {\n            var filterMails = _this.state.allToDos.filter(function (todo) {\n              return todo.labels.includes(label.id);\n            });\n\n            _this.setState({\n              loader: true,\n              currentTodo: null,\n              toDos: filterMails\n            });\n\n            setTimeout(function () {\n              _this.setState({\n                loader: false\n              });\n            }, 1500);\n          }\n        }, __jsx(\"span\", {\n          className: \"gx-link\"\n        }, __jsx(\"i\", {\n          className: \"icon icon-circle gx-text-\".concat(label.color)\n        }), __jsx(\"span\", null, label.title)));\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"ToDoSideBar\", function () {\n      return __jsx(\"div\", {\n        className: \"gx-module-side\"\n      }, __jsx(\"div\", {\n        className: \"gx-module-side-header\"\n      }, __jsx(\"div\", {\n        className: \"gx-module-logo\"\n      }, __jsx(\"i\", {\n        className: \"icon icon-check-circle-o gx-mr-4\"\n      }), __jsx(IntlMessages, {\n        id: \"sidebar.todoApp\"\n      }))), __jsx(\"div\", {\n        className: \"gx-module-side-content\"\n      }, __jsx(CustomScrollbars, {\n        className: \"gx-module-side-scroll\"\n      }, __jsx(\"div\", {\n        className: \"gx-module-add-task\"\n      }, __jsx(Button, {\n        variant: \"raised\",\n        type: \"primary\",\n        className: \"gx-btn-block\",\n        onClick: function onClick() {\n          _this.setState({\n            addTodo: true\n          });\n        }\n      }, \" \", __jsx(IntlMessages, {\n        id: \"todo.addTask\"\n      }), \" \")), __jsx(\"ul\", {\n        className: \"gx-module-nav\"\n      }, __jsx(\"li\", {\n        onClick: function onClick() {\n          _this.setState({\n            currentTodo: null,\n            toDos: _this.state.allToDos\n          });\n        }\n      }, __jsx(\"span\", {\n        className: \"gx-link active\"\n      }, __jsx(\"i\", {\n        className: \"icon icon-all-contacts gx-pt-1\"\n      }), __jsx(\"span\", null, __jsx(IntlMessages, {\n        id: \"todo.all\"\n      })))), __jsx(\"li\", {\n        className: \"gx-module-nav-label\"\n      }, __jsx(IntlMessages, {\n        id: \"todo.filters\"\n      })), _this.getNavFilters(), __jsx(\"li\", {\n        className: \"gx-module-nav-label\"\n      }, __jsx(IntlMessages, {\n        id: \"todo.labels\"\n      })), _this.getNavLabels()))));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"searchTodo\", function (searchText) {\n      if (searchText === '') {\n        _this.setState({\n          toDos: _this.state.allToDos.filter(function (todo) {\n            return !todo.deleted;\n          })\n        });\n      } else {\n        var searchToDos = _this.state.allToDos.filter(function (todo) {\n          return !todo.deleted && todo.title.toLowerCase().indexOf(searchText.toLowerCase()) > -1;\n        });\n\n        _this.setState({\n          toDos: searchToDos\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"showToDos\", function (_ref2) {\n      var currentTodo = _ref2.currentTodo,\n          toDos = _ref2.toDos,\n          conversation = _ref2.conversation,\n          user = _ref2.user;\n      return currentTodo === null ? __jsx(ToDoList, {\n        toDos: toDos,\n        onSortEnd: _this.onSortEnd,\n        onMarkAsStart: _this.onMarkAsStart.bind(_assertThisInitialized(_this)),\n        onTodoSelect: _this.onTodoSelect.bind(_assertThisInitialized(_this)),\n        onTodoChecked: _this.onTodoChecked.bind(_assertThisInitialized(_this)),\n        useDragHandle: true\n      }) : __jsx(ToDoDetail, {\n        todo: currentTodo,\n        user: user,\n        conversation: conversation,\n        onLabelUpdate: _this.onLabelUpdate.bind(_assertThisInitialized(_this)),\n        onToDoUpdate: _this.onToDoUpdate.bind(_assertThisInitialized(_this)),\n        onDeleteToDo: _this.onDeleteToDo.bind(_assertThisInitialized(_this))\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"optionMenu\", function () {\n      return __jsx(Menu, {\n        id: \"option-menu\",\n        onClick: _this.onOptionMenuItemSelect.bind(_assertThisInitialized(_this)),\n        onClose: _this.handleRequestClose,\n        style: {\n          maxHeight: ITEM_HEIGHT * 5.5\n        }\n      }, options.map(function (option) {\n        return __jsx(Menu.Item, {\n          key: option.title\n        }, option.title);\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"labelMenu\", function () {\n      return __jsx(Menu, {\n        id: \"label-menu\",\n        onClick: _this.onLabelMenuItemSelect.bind(_assertThisInitialized(_this)),\n        onClose: _this.handleRequestClose,\n        style: {\n          maxHeight: ITEM_HEIGHT * 4.5\n        }\n      }, labels.map(function (label) {\n        return __jsx(Menu.Item, {\n          key: label\n        }, label.title);\n      }));\n    });\n\n    _this.state = {\n      searchTodo: '',\n      alertMessage: '',\n      loader: false,\n      showMessage: false,\n      drawerState: false,\n      optionName: 'None',\n      anchorEl: null,\n      allToDos: toDos,\n      currentTodo: null,\n      user: {\n        name: 'Robert Johnson',\n        email: 'robert.johnson@example.com',\n        avatar: 'https://via.placeholder.com/150x150'\n      },\n      selectedToDos: 0,\n      labelMenuState: false,\n      optionMenuState: false,\n      toDos: toDos,\n      filter: -1,\n      todoConversation: todoConversation,\n      conversation: null\n    };\n    return _this;\n  }\n\n  _createClass(ToDo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.manageHeight();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.manageHeight();\n    }\n  }, {\n    key: \"getToDoConversation\",\n    value: function getToDoConversation(id) {\n      return todoConversation.find(function (conversation) {\n        return conversation.id === id;\n      });\n    }\n  }, {\n    key: \"onTodoChecked\",\n    value: function onTodoChecked(data) {\n      data.selected = !data.selected;\n      var selectedToDos = 0;\n      var toDos = this.state.toDos.map(function (todo) {\n        if (todo.selected) {\n          selectedToDos++;\n        }\n\n        if (todo.id === data.id) {\n          if (todo.selected) {\n            selectedToDos++;\n          }\n\n          return data;\n        } else {\n          return todo;\n        }\n      });\n      this.setState({\n        selectedToDos: selectedToDos,\n        toDos: toDos\n      });\n    }\n  }, {\n    key: \"onAllTodoSelect\",\n    value: function onAllTodoSelect() {\n      var selectAll = this.state.selectedToDos < this.state.toDos.length;\n\n      if (selectAll) {\n        this.getAllTodo();\n      } else {\n        this.getUnselectedAllTodo();\n      }\n    }\n  }, {\n    key: \"onTodoAdd\",\n    value: function onTodoAdd(data) {\n      this.setState({\n        toDos: this.state.allToDos.concat(data),\n        allToDos: this.state.allToDos.concat(data)\n      });\n    }\n  }, {\n    key: \"manageHeight\",\n    value: function manageHeight() {}\n  }, {\n    key: \"onTodoSelect\",\n    value: function onTodoSelect(todo) {\n      var _this2 = this;\n\n      var conversationList = this.getToDoConversation(todo.id);\n\n      if (conversationList) {\n        conversationList = conversationList.conversationData;\n      } else {\n        conversationList = [];\n      }\n\n      this.setState({\n        currentTodo: todo,\n        loader: true,\n        conversation: conversationList\n      });\n      setTimeout(function () {\n        _this2.setState({\n          loader: false\n        });\n      }, 1500);\n    }\n  }, {\n    key: \"removeLabel\",\n    value: function removeLabel(todo, label) {\n      todo.labels.splice(todo.labels.indexOf(label), 1);\n      return todo.labels;\n    }\n  }, {\n    key: \"addLabel\",\n    value: function addLabel(todo, label) {\n      todo.labels = todo.labels.concat(label);\n      return todo.labels;\n    }\n  }, {\n    key: \"onToggleDrawer\",\n    value: function onToggleDrawer() {\n      this.setState({\n        drawerState: !this.state.drawerState\n      });\n    }\n  }, {\n    key: \"updateSearch\",\n    value: function updateSearch(evt) {\n      this.setState({\n        searchTodo: evt.target.value\n      });\n      this.searchTodo(evt.target.value);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          selectedToDos = _this$state.selectedToDos,\n          loader = _this$state.loader,\n          drawerState = _this$state.drawerState,\n          toDos = _this$state.toDos,\n          alertMessage = _this$state.alertMessage,\n          showMessage = _this$state.showMessage;\n      return __jsx(\"div\", {\n        className: \"gx-main-content\"\n      }, __jsx(\"div\", {\n        className: \"gx-app-module\"\n      }, __jsx(\"div\", {\n        className: \"gx-d-block gx-d-lg-none\"\n      }, __jsx(Drawer, {\n        placement: \"left\",\n        closable: false,\n        visible: drawerState,\n        onClose: this.onToggleDrawer.bind(this)\n      }, this.ToDoSideBar())), __jsx(\"div\", {\n        className: \"gx-module-sidenav gx-d-none gx-d-lg-flex\"\n      }, this.ToDoSideBar()), __jsx(\"div\", {\n        className: \"gx-module-box\"\n      }, __jsx(\"div\", {\n        className: \"gx-module-box-header\"\n      }, __jsx(\"span\", {\n        className: \"gx-drawer-btn gx-d-flex gx-d-lg-none\"\n      }, __jsx(\"i\", {\n        className: \"icon icon-menu gx-icon-btn\",\n        \"aria-label\": \"Menu\",\n        onClick: this.onToggleDrawer.bind(this)\n      })), __jsx(AppModuleHeader, {\n        placeholder: \"Search To Do\",\n        user: this.state.user,\n        onChange: this.updateSearch.bind(this),\n        value: this.state.searchTodo\n      })), __jsx(\"div\", {\n        className: \"gx-module-box-content\"\n      }, this.state.currentTodo === null ? __jsx(\"div\", {\n        className: \"gx-module-box-topbar gx-module-box-topbar-todo\"\n      }, this.state.toDos.length > 0 ? __jsx(React.Fragment, null, __jsx(Checkbox, {\n        className: \"gx-icon-btn\",\n        color: \"primary\",\n        indeterminate: selectedToDos > 0 && selectedToDos < toDos.length,\n        checked: selectedToDos > 0,\n        onChange: this.onAllTodoSelect.bind(this),\n        value: \"SelectMail\"\n      }), __jsx(Dropdown, {\n        overlay: this.optionMenu(),\n        placement: \"bottomRight\",\n        trigger: ['click']\n      }, __jsx(\"div\", null, __jsx(\"span\", {\n        className: \"gx-px-2\"\n      }, \" \", this.state.optionName), __jsx(\"i\", {\n        className: \"icon icon-charvlet-down\"\n      })))) : null, selectedToDos > 0 && __jsx(Dropdown, {\n        overlay: this.labelMenu(),\n        placement: \"bottomRight\",\n        trigger: ['click']\n      }, __jsx(\"i\", {\n        className: \"gx-icon-btn icon icon-tag\"\n      }))) : __jsx(\"div\", {\n        className: \"gx-module-box-topbar\"\n      }, __jsx(\"i\", {\n        className: \"icon icon-arrow-left gx-icon-btn\",\n        onClick: function onClick() {\n          _this3.setState({\n            currentTodo: null\n          });\n        }\n      })), loader ? __jsx(\"div\", {\n        className: \"gx-loader-view\"\n      }, __jsx(CircularProgress, null)) : this.showToDos(this.state)))), showMessage && message.info(__jsx(\"span\", {\n        id: \"message-id\"\n      }, alertMessage), 3, this.handleRequestClose));\n    }\n  }]);\n\n  return ToDo;\n}(Component);\n\nexport default ToDo;","map":{"version":3,"sources":["E:/frontend-projects/crm-frontend-wieldy/routes/inbuiltApps/Todo/index.js"],"names":["React","Component","Button","Checkbox","Drawer","Dropdown","Menu","message","CustomScrollbars","toDos","filters","labels","options","todoConversation","ToDoList","ToDoDetail","AppModuleHeader","IntlMessages","CircularProgress","ITEM_HEIGHT","ToDo","oldIndex","newIndex","setState","state","event","anchorEl","currentTarget","labelMenuState","optionMenuState","e","key","handleRequestClose","getAllTodo","getUnselectedAllTodo","getStarredToDo","getUnStarredTodo","getImportantToDo","getUnimportantToDo","allToDos","map","todo","selected","selectedToDos","length","optionName","starred","filter","deleted","important","label","includes","id","removeLabel","addLabel","alertMessage","showMessage","addTodo","data","currentTodo","index","filterMails","completed","loader","setTimeout","selectedSectionId","icon","title","color","getNavFilters","getNavLabels","searchText","searchToDos","toLowerCase","indexOf","conversation","user","onSortEnd","onMarkAsStart","bind","onTodoSelect","onTodoChecked","onLabelUpdate","onToDoUpdate","onDeleteToDo","onOptionMenuItemSelect","maxHeight","option","onLabelMenuItemSelect","searchTodo","drawerState","name","email","avatar","manageHeight","find","selectAll","concat","conversationList","getToDoConversation","conversationData","splice","evt","target","value","onToggleDrawer","ToDoSideBar","updateSearch","onAllTodoSelect","optionMenu","labelMenu","showToDos","info"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Button, Checkbox, Drawer, Dropdown, Menu, message} from \"antd\";\r\n\r\nimport CustomScrollbars from \"../../../util/CustomScrollbars\";\r\nimport toDos from \"./data/todo\";\r\nimport filters from \"./data/filters\";\r\nimport labels from \"./data/labels\";\r\nimport options from \"./data/options\";\r\nimport todoConversation from \"./data/todoConversation\";\r\nimport ToDoList from \"../../../app/components/todo/ToDoList\";\r\nimport ToDoDetail from \"../../../app/components/todo/ToDoDetail\";\r\nimport AppModuleHeader from \"../../../app/components/AppModuleHeader\";\r\nimport IntlMessages from \"../../../util/IntlMessages\";\r\nimport CircularProgress from \"../../../app/components/CircularProgress\";\r\n\r\nimport './index.css';\r\n\r\nconst ITEM_HEIGHT = 34;\r\n\r\nclass ToDo extends Component {\r\n\r\n  onSortEnd = ({oldIndex, newIndex}) => {\r\n    this.setState({\r\n      toDos: (this.state.toDos, oldIndex, newIndex),\r\n    });\r\n  };\r\n  onLabelSelect = event => {\r\n    this.setState({\r\n      anchorEl: event.currentTarget,\r\n      labelMenuState: !this.state.labelMenuState\r\n    })\r\n  };\r\n  onOptionMenuSelect = event => {\r\n    this.setState({\r\n      anchorEl: event.currentTarget,\r\n      optionMenuState: !this.state.optionMenuState\r\n    })\r\n  };\r\n  onOptionMenuItemSelect = (e) => {\r\n    switch (e.key) {\r\n      case 'All':\r\n        this.handleRequestClose();\r\n        this.getAllTodo();\r\n        break;\r\n      case 'None':\r\n        this.handleRequestClose();\r\n        this.getUnselectedAllTodo();\r\n        break;\r\n      case 'Starred':\r\n        this.handleRequestClose();\r\n        this.getStarredToDo();\r\n        break;\r\n      case 'Unstarred':\r\n        this.handleRequestClose();\r\n        this.getUnStarredTodo();\r\n        break;\r\n      case 'Important':\r\n        this.handleRequestClose();\r\n        this.getImportantToDo();\r\n        break;\r\n      case 'Unimportant':\r\n        this.handleRequestClose();\r\n        this.getUnimportantToDo();\r\n        break;\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n  getAllTodo = () => {\r\n    let toDos = this.state.allToDos.map((todo) => todo ? {\r\n      ...todo,\r\n      selected: true\r\n    } : todo);\r\n    this.setState({\r\n      selectedToDos: toDos.length,\r\n      allToDos: toDos,\r\n      optionName: 'All',\r\n      toDos: toDos\r\n    });\r\n  };\r\n  getUnselectedAllTodo = () => {\r\n    let toDos = this.state.allToDos.map((todo) => todo ? {\r\n      ...todo,\r\n      selected: false\r\n    } : todo);\r\n    this.setState({\r\n      selectedToDos: 0,\r\n      allToDos: toDos,\r\n      optionName: 'None',\r\n      toDos: toDos\r\n    });\r\n  };\r\n  getStarredToDo = () => {\r\n    let selectedToDos = 0;\r\n    let toDos = this.state.allToDos.map((todo) => {\r\n      if (todo.starred) {\r\n        selectedToDos++;\r\n        return {...todo, selected: true};\r\n      }\r\n      return {...todo, selected: false}\r\n    });\r\n    this.setState({\r\n      selectedToDos: selectedToDos,\r\n      allToDos: toDos,\r\n      toDos: toDos.filter(todo => !todo.deleted)\r\n    });\r\n    return toDos;\r\n  };\r\n  getUnStarredTodo = () => {\r\n    let selectedToDos = 0;\r\n    let toDos = this.state.allToDos.map((todo) => {\r\n      if (!todo.starred) {\r\n        selectedToDos++;\r\n        return {...todo, selected: true};\r\n      }\r\n      return {...todo, selected: false}\r\n    });\r\n    this.setState({\r\n      selectedToDos: selectedToDos,\r\n      allToDos: toDos,\r\n      optionName: 'Unstarred',\r\n      toDos: toDos.filter(todo => !todo.deleted)\r\n    });\r\n    return toDos;\r\n  };\r\n  getImportantToDo = () => {\r\n    let selectedToDos = 0;\r\n    let toDos = this.state.allToDos.map((todo) => {\r\n      if (todo.important) {\r\n        selectedToDos++;\r\n        return {...todo, selected: true};\r\n      }\r\n      return {...todo, selected: false}\r\n    });\r\n    this.setState({\r\n      selectedToDos: selectedToDos,\r\n      allToDos: toDos,\r\n      optionName: 'Important',\r\n      toDos: toDos.filter(todo => !todo.deleted)\r\n    });\r\n    return toDos;\r\n  };\r\n  getUnimportantToDo = () => {\r\n    let selectedToDos = 0;\r\n    let toDos = this.state.allToDos.map((todo) => {\r\n      if (!todo.important) {\r\n        selectedToDos++;\r\n        return {...todo, selected: true};\r\n      }\r\n      return {...todo, selected: false}\r\n    });\r\n    this.setState({\r\n      selectedToDos: selectedToDos,\r\n      allToDos: toDos,\r\n      optionName: 'Unimportant',\r\n      toDos: toDos.filter(todo => !todo.deleted)\r\n    });\r\n\r\n    return toDos;\r\n  };\r\n  onLabelMenuItemSelect = (e) => {\r\n    const label = +e.key;\r\n    this.handleRequestClose();\r\n    const toDos = this.state.allToDos.map(todo => {\r\n        if (todo.selected) {\r\n          if (todo.labels.includes(label.id)) {\r\n            return {...todo, labels: this.removeLabel(todo, label.id)};\r\n          } else {\r\n            return {...todo, labels: this.addLabel(todo, label.id)};\r\n          }\r\n        } else {\r\n          return todo;\r\n        }\r\n      }\r\n    );\r\n    this.setState({\r\n      alertMessage: 'Label Updated Successfully',\r\n      showMessage: true,\r\n      allToDos: toDos,\r\n      toDos: toDos\r\n    });\r\n  };\r\n  handleRequestClose = () => {\r\n    this.setState({showMessage: false, addTodo: false, labelMenuState: false, optionMenuState: false,});\r\n  };\r\n  onLabelUpdate = (data, label) => {\r\n    if (data.labels.includes(label.id)) {\r\n      data.labels = this.removeLabel(data, label.id);\r\n    } else {\r\n      data.labels = this.addLabel(data, label.id);\r\n    }\r\n    this.handleRequestClose();\r\n    const toDos = this.state.allToDos.map(todo => {\r\n        if (todo.id === data.id) {\r\n          return data;\r\n        } else {\r\n          return todo;\r\n        }\r\n      }\r\n    );\r\n\r\n    this.setState({\r\n      alertMessage: 'Label Updated Successfully',\r\n      showMessage: true,\r\n      currentTodo: data,\r\n      allToDos: toDos,\r\n      toDos: toDos,\r\n    });\r\n  };\r\n  onMarkAsStart = (data) => {\r\n    const toDos = this.state.allToDos.map(todo => {\r\n      if (todo.id === data.id) {\r\n        return data;\r\n      } else {\r\n        return todo;\r\n      }\r\n    });\r\n    this.setState({\r\n      alertMessage: 'ToDo Updated Successfully',\r\n      showMessage: true,\r\n      allToDos: toDos,\r\n      toDos: toDos,\r\n    });\r\n  };\r\n\r\n  onToDoUpdate = (data) => {\r\n    this.handleRequestClose();\r\n    const toDos = this.state.allToDos.map(todo => {\r\n      if (todo.id === data.id) {\r\n        return data;\r\n      } else {\r\n        return todo;\r\n      }\r\n    });\r\n    this.setState({\r\n      alertMessage: 'ToDo Updated Successfully',\r\n      showMessage: true,\r\n      currentTodo: data,\r\n      allToDos: toDos,\r\n      toDos: toDos,\r\n    });\r\n  };\r\n\r\n\r\n  onDeleteToDo = (data) => {\r\n    let selectedToDos = 0;\r\n    const toDos = this.state.allToDos.map(todo => {\r\n        if (todo.selected) {\r\n          selectedToDos++\r\n        }\r\n        if (data.id === todo.id) {\r\n          if (todo.selected) {\r\n            selectedToDos--\r\n          }\r\n          return {...todo, deleted: true};\r\n        } else {\r\n          return todo;\r\n        }\r\n      }\r\n    );\r\n    this.setState({\r\n      alertMessage: 'ToDo Deleted Successfully',\r\n      showMessage: true,\r\n      allToDos: toDos,\r\n      currentTodo: null,\r\n      selectedToDos: selectedToDos,\r\n      toDos: toDos.filter((todo) => !todo.deleted)\r\n    });\r\n\r\n  };\r\n  getNavFilters = () => {\r\n    return filters.map((filter, index) =>\r\n      <li key={index} onClick={() => {\r\n        const filterMails = this.state.allToDos.filter(todo => {\r\n          if (filter.id === 0 && todo.starred) {\r\n            return todo\r\n          } else if (filter.id === 1 && todo.important) {\r\n            return todo\r\n          } else if (filter.id === 2 && todo.important) {\r\n            return todo\r\n          } else if (filter.id === 3 && todo.important) {\r\n            return todo\r\n          } else if (filter.id === 4 && todo.completed) {\r\n            return todo\r\n          } else if (filter.id === 5 && todo.deleted) {\r\n            return todo\r\n          } else\r\n            return todo\r\n        });\r\n        this.setState({\r\n          loader: true,\r\n          currentTodo: null,\r\n          filter: filter.id,\r\n          toDos: filterMails\r\n        });\r\n        setTimeout(() => {\r\n          this.setState({loader: false});\r\n        }, 1500);\r\n      }\r\n      }>\r\n        <span className={filter.id === this.state.selectedSectionId ? 'gx-link active' : 'gx-link'}>\r\n          <i className={`icon icon-${filter.icon}`}/>\r\n          <span>{filter.title}</span>\r\n        </span>\r\n      </li>\r\n    )\r\n  };\r\n  getNavLabels = () => {\r\n    return labels.map((label, index) =>\r\n      <li key={index} onClick={() => {\r\n        const filterMails = this.state.allToDos.filter(todo => todo.labels.includes(label.id));\r\n        this.setState({\r\n          loader: true,\r\n          currentTodo: null,\r\n          toDos: filterMails\r\n        });\r\n        setTimeout(() => {\r\n          this.setState({loader: false});\r\n        }, 1500);\r\n      }\r\n      }>\r\n        <span className=\"gx-link\">\r\n          <i className={`icon icon-circle gx-text-${label.color}`}/>\r\n          <span>{label.title}</span>\r\n        </span>\r\n      </li>\r\n    )\r\n  };\r\n  ToDoSideBar = () => {\r\n    return <div className=\"gx-module-side\">\r\n      <div className=\"gx-module-side-header\">\r\n        <div className=\"gx-module-logo\">\r\n          <i className=\"icon icon-check-circle-o gx-mr-4\"/>\r\n          <IntlMessages id=\"sidebar.todoApp\"/>\r\n        </div>\r\n\r\n      </div>\r\n      <div className=\"gx-module-side-content\">\r\n        <CustomScrollbars className=\"gx-module-side-scroll\">\r\n          <div className=\"gx-module-add-task\">\r\n            <Button variant=\"raised\" type=\"primary\" className=\"gx-btn-block\"\r\n                    onClick={() => {\r\n                      this.setState({addTodo: true})\r\n                    }}> <IntlMessages id=\"todo.addTask\"/> </Button>\r\n          </div>\r\n          <ul className=\"gx-module-nav\">\r\n\r\n            <li onClick={() => {\r\n              this.setState({\r\n                currentTodo: null,\r\n                toDos: this.state.allToDos\r\n              });\r\n            }\r\n            }>\r\n              <span className=\"gx-link active\">\r\n                <i className=\"icon icon-all-contacts gx-pt-1\"/>\r\n                <span><IntlMessages id=\"todo.all\"/></span>\r\n              </span>\r\n            </li>\r\n\r\n            <li className=\"gx-module-nav-label\">\r\n              <IntlMessages id=\"todo.filters\"/>\r\n            </li>\r\n\r\n            {this.getNavFilters()}\r\n\r\n            <li className=\"gx-module-nav-label\">\r\n              <IntlMessages id=\"todo.labels\"/>\r\n            </li>\r\n            {this.getNavLabels()}\r\n          </ul>\r\n        </CustomScrollbars>\r\n      </div>\r\n    </div>\r\n  };\r\n  searchTodo = (searchText) => {\r\n    if (searchText === '') {\r\n      this.setState({toDos: this.state.allToDos.filter((todo) => !todo.deleted)});\r\n    } else {\r\n      const searchToDos = this.state.allToDos.filter((todo) =>\r\n        !todo.deleted && todo.title.toLowerCase().indexOf(searchText.toLowerCase()) > -1);\r\n      this.setState({\r\n        toDos: searchToDos\r\n      });\r\n    }\r\n  };\r\n  showToDos = ({currentTodo, toDos, conversation, user}) => {\r\n    return currentTodo === null ?\r\n      <ToDoList toDos={toDos} onSortEnd={this.onSortEnd}\r\n                onMarkAsStart={this.onMarkAsStart.bind(this)}\r\n                onTodoSelect={this.onTodoSelect.bind(this)}\r\n                onTodoChecked={this.onTodoChecked.bind(this)} useDragHandle={true}/>\r\n      :\r\n      <ToDoDetail todo={currentTodo} user={user}\r\n                  conversation={conversation}\r\n                  onLabelUpdate={this.onLabelUpdate.bind(this)}\r\n                  onToDoUpdate={this.onToDoUpdate.bind(this)}\r\n                  onDeleteToDo={this.onDeleteToDo.bind(this)}/>\r\n  };\r\n  optionMenu = () => {\r\n    return (<Menu id=\"option-menu\" onClick={this.onOptionMenuItemSelect.bind(this)}\r\n                  onClose={this.handleRequestClose}\r\n                  style={{maxHeight: ITEM_HEIGHT * 5.5}}>\r\n      {options.map(option =>\r\n        <Menu.Item key={option.title}\r\n        >\r\n          {option.title}\r\n        </Menu.Item>,\r\n      )}\r\n    </Menu>)\r\n\r\n  };\r\n  labelMenu = () => {\r\n    return (\r\n      <Menu id=\"label-menu\" onClick={this.onLabelMenuItemSelect.bind(this)}\r\n            onClose={this.handleRequestClose}\r\n            style={{maxHeight: ITEM_HEIGHT * 4.5}}>\r\n        {labels.map(label =>\r\n          <Menu.Item key={label}>\r\n            {label.title}\r\n          </Menu.Item>,\r\n        )}\r\n      </Menu>)\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      searchTodo: '',\r\n      alertMessage: '',\r\n      loader: false,\r\n      showMessage: false,\r\n      drawerState: false,\r\n      optionName: 'None',\r\n      anchorEl: null,\r\n      allToDos: toDos,\r\n      currentTodo: null,\r\n      user: {\r\n        name: 'Robert Johnson',\r\n        email: 'robert.johnson@example.com',\r\n        avatar: 'https://via.placeholder.com/150x150'\r\n      },\r\n      selectedToDos: 0,\r\n      labelMenuState: false,\r\n      optionMenuState: false,\r\n      toDos: toDos,\r\n      filter: -1,\r\n      todoConversation,\r\n      conversation: null\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.manageHeight();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.manageHeight();\r\n  }\r\n\r\n  getToDoConversation(id) {\r\n    return todoConversation.find((conversation) => conversation.id === id);\r\n  }\r\n\r\n  onTodoChecked(data) {\r\n    data.selected = !data.selected;\r\n    let selectedToDos = 0;\r\n    const toDos = this.state.toDos.map(todo => {\r\n        if (todo.selected) {\r\n          selectedToDos++;\r\n        }\r\n        if (todo.id === data.id) {\r\n          if (todo.selected) {\r\n            selectedToDos++;\r\n          }\r\n          return data;\r\n        } else {\r\n          return todo;\r\n        }\r\n      }\r\n    );\r\n    this.setState({\r\n      selectedToDos: selectedToDos,\r\n      toDos: toDos\r\n    });\r\n  }\r\n\r\n  onAllTodoSelect() {\r\n    const selectAll = this.state.selectedToDos < this.state.toDos.length;\r\n    if (selectAll) {\r\n      this.getAllTodo();\r\n    } else {\r\n      this.getUnselectedAllTodo();\r\n    }\r\n  }\r\n\r\n  onTodoAdd(data) {\r\n    this.setState(\r\n      {\r\n        toDos: this.state.allToDos.concat(data),\r\n        allToDos: this.state.allToDos.concat(data)\r\n      }\r\n    );\r\n  }\r\n\r\n  manageHeight() {\r\n  }\r\n\r\n  onTodoSelect(todo) {\r\n    let conversationList = this.getToDoConversation(todo.id);\r\n    if (conversationList) {\r\n      conversationList = conversationList.conversationData;\r\n    } else {\r\n      conversationList = [];\r\n    }\r\n    this.setState({\r\n      currentTodo: todo,\r\n      loader: true,\r\n      conversation: conversationList\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({loader: false});\r\n    }, 1500);\r\n  }\r\n\r\n  removeLabel(todo, label) {\r\n    todo.labels.splice(todo.labels.indexOf(label), 1);\r\n    return todo.labels;\r\n  }\r\n\r\n  addLabel(todo, label) {\r\n    todo.labels = todo.labels.concat(label);\r\n    return todo.labels\r\n  }\r\n\r\n  onToggleDrawer() {\r\n    this.setState({\r\n      drawerState: !this.state.drawerState\r\n    });\r\n  }\r\n\r\n  updateSearch(evt) {\r\n    this.setState({\r\n      searchTodo: evt.target.value,\r\n    });\r\n    this.searchTodo(evt.target.value)\r\n  }\r\n\r\n  render() {\r\n    const {selectedToDos, loader, drawerState, toDos, alertMessage, showMessage} = this.state;\r\n\r\n    return (\r\n      <div className=\"gx-main-content\">\r\n        <div className=\"gx-app-module\">\r\n          <div className=\"gx-d-block gx-d-lg-none\">\r\n            <Drawer\r\n              placement=\"left\"\r\n              closable={false}\r\n              visible={drawerState}\r\n              onClose={this.onToggleDrawer.bind(this)}>\r\n              {this.ToDoSideBar()}\r\n            </Drawer>\r\n          </div>\r\n          <div className=\"gx-module-sidenav gx-d-none gx-d-lg-flex\">\r\n            {this.ToDoSideBar()}\r\n          </div>\r\n\r\n          <div className=\"gx-module-box\">\r\n            <div className=\"gx-module-box-header\">\r\n\r\n              <span className=\"gx-drawer-btn gx-d-flex gx-d-lg-none\">\r\n                  <i className=\"icon icon-menu gx-icon-btn\" aria-label=\"Menu\"\r\n                     onClick={this.onToggleDrawer.bind(this)}/>\r\n              </span>\r\n              <AppModuleHeader placeholder=\"Search To Do\" user={this.state.user}\r\n                               onChange={this.updateSearch.bind(this)}\r\n                               value={this.state.searchTodo}/>\r\n            </div>\r\n            <div className=\"gx-module-box-content\">\r\n              {this.state.currentTodo === null ?\r\n                <div className=\"gx-module-box-topbar gx-module-box-topbar-todo\">\r\n                  {this.state.toDos.length > 0 ?\r\n                    <>\r\n                      <Checkbox className=\"gx-icon-btn\" color=\"primary\"\r\n                                indeterminate={selectedToDos > 0 && selectedToDos < toDos.length}\r\n                                checked={selectedToDos > 0}\r\n                                onChange={this.onAllTodoSelect.bind(this)}\r\n                                value=\"SelectMail\"/>\r\n                      <Dropdown overlay={this.optionMenu()} placement=\"bottomRight\" trigger={['click']}>\r\n                        <div>\r\n                          <span className=\"gx-px-2\"> {this.state.optionName}</span>\r\n                          <i className=\"icon icon-charvlet-down\"/>\r\n                        </div>\r\n                      </Dropdown>\r\n                    </> : null}\r\n\r\n                  {(selectedToDos > 0) &&\r\n\r\n                  <Dropdown overlay={this.labelMenu()} placement=\"bottomRight\" trigger={['click']}>\r\n                    <i className=\"gx-icon-btn icon icon-tag\"/>\r\n                  </Dropdown>\r\n                  }\r\n                </div>\r\n                :\r\n                <div className=\"gx-module-box-topbar\">\r\n                  <i className=\"icon icon-arrow-left gx-icon-btn\" onClick={() => {\r\n                    this.setState({currentTodo: null})\r\n                  }}/>\r\n                </div>\r\n              }\r\n              {loader ?\r\n                <div className=\"gx-loader-view\">\r\n                  <CircularProgress/>\r\n                </div> :\r\n                this.showToDos(this.state)\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {showMessage && message.info(<span id=\"message-id\">{alertMessage}</span>, 3, this.handleRequestClose)}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ToDo;\r\n"]},"metadata":{},"sourceType":"module"}