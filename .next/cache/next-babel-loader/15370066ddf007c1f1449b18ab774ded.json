{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Button, Card, Form, Input } from \"antd\";\nimport UserOutlined from \"@ant-design/icons/lib/icons/UserOutlined\";\nimport LockOutlined from \"@ant-design/icons/lib/icons/LockOutlined\";\nconst FormItem = Form.Item;\n\nfunction hasErrors(fieldsError) {\n  return Object.keys(fieldsError).some(field => fieldsError[field]);\n}\n\nclass Basic extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"onFinishFailed\", errorInfo => {\n      console.log('Failed:', errorInfo);\n    });\n\n    _defineProperty(this, \"onFinish\", values => {\n      console.log('Received values of form: ', values);\n    });\n  }\n\n  render() {\n    return __jsx(Card, {\n      className: \"gx-card\",\n      title: \"Basic\"\n    }, __jsx(Form, {\n      initialValues: {\n        remember: true\n      },\n      name: \"basic\",\n      onFinish: this.onFinish,\n      onFinishFailed: this.onFinishFailed,\n      layout: \"inline\"\n    }, __jsx(FormItem, {\n      rules: [{\n        required: true,\n        message: 'Please input your username!\\'}'\n      }],\n      name: \"uaername\"\n    }, __jsx(Input, {\n      prefix: __jsx(UserOutlined, {\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        }\n      }),\n      placeholder: \"Username\"\n    })), __jsx(FormItem, {\n      rules: [{\n        required: true,\n        message: 'Please input your Password!'\n      }],\n      name: \"password\"\n    }, __jsx(Input, {\n      prefix: __jsx(LockOutlined, {\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        }\n      }),\n      type: \"password\",\n      placeholder: \"Password\"\n    })), __jsx(FormItem, null, __jsx(Button, {\n      className: \"gx-mb-0\",\n      type: \"primary\",\n      htmlType: \"submit\"\n    }, \"Log in\"))));\n  }\n\n}\n\nexport default Basic;","map":{"version":3,"sources":["E:/frontend-projects/crm-frontend-wieldy/routes/components/dataEntry/Form/Basic.js"],"names":["React","Component","Button","Card","Form","Input","UserOutlined","LockOutlined","FormItem","Item","hasErrors","fieldsError","Object","keys","some","field","Basic","errorInfo","console","log","values","render","remember","onFinish","onFinishFailed","required","message","color"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,IAAtB,EAA4BC,KAA5B,QAAwC,MAAxC;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AAEA,MAAMC,QAAQ,GAAGJ,IAAI,CAACK,IAAtB;;AAEA,SAASC,SAAT,CAAmBC,WAAnB,EAAgC;AAC9B,SAAOC,MAAM,CAACC,IAAP,CAAYF,WAAZ,EAAyBG,IAAzB,CAA8BC,KAAK,IAAIJ,WAAW,CAACI,KAAD,CAAlD,CAAP;AACD;;AAED,MAAMC,KAAN,SAAoBf,SAApB,CAA8B;AAAA;AAAA;;AAAA,4CAGXgB,SAAS,IAAI;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,SAAvB;AACD,KAL2B;;AAAA,sCAOjBG,MAAM,IAAI;AACnBF,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCC,MAAzC;AAED,KAV2B;AAAA;;AAY5BC,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,IAAD;AAAM,MAAA,SAAS,EAAC,SAAhB;AAA0B,MAAA,KAAK,EAAC;AAAhC,OACE,MAAC,IAAD;AACE,MAAA,aAAa,EAAE;AAACC,QAAAA,QAAQ,EAAE;AAAX,OADjB;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,QAAQ,EAAE,KAAKC,QAHjB;AAIE,MAAA,cAAc,EAAE,KAAKC,cAJvB;AAKE,MAAA,MAAM,EAAC;AALT,OAOE,MAAC,QAAD;AAAU,MAAA,KAAK,EAAE,CAAC;AAACC,QAAAA,QAAQ,EAAE,IAAX;AAAiBC,QAAAA,OAAO,EAAE;AAA1B,OAAD,CAAjB;AAAgF,MAAA,IAAI,EAAC;AAArF,OAEE,MAAC,KAAD;AAAO,MAAA,MAAM,EAAE,MAAC,YAAD;AAAc,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE;AAAR;AAArB,QAAf;AACO,MAAA,WAAW,EAAC;AADnB,MAFF,CAPF,EAaE,MAAC,QAAD;AAAU,MAAA,KAAK,EAAE,CAAC;AAACF,QAAAA,QAAQ,EAAE,IAAX;AAAiBC,QAAAA,OAAO,EAAE;AAA1B,OAAD,CAAjB;AAA6E,MAAA,IAAI,EAAC;AAAlF,OACE,MAAC,KAAD;AAAO,MAAA,MAAM,EAAE,MAAC,YAAD;AAAc,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE;AAAR;AAArB,QAAf;AACO,MAAA,IAAI,EAAC,UADZ;AAEO,MAAA,WAAW,EAAC;AAFnB,MADF,CAbF,EAkBE,MAAC,QAAD,QACE,MAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,SAAlB;AACQ,MAAA,IAAI,EAAC,SADb;AAEQ,MAAA,QAAQ,EAAC;AAFjB,gBADF,CAlBF,CADF,CADF;AA+BD;;AA5C2B;;AA+C9B,eAAeX,KAAf","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Button, Card, Form, Input} from \"antd\";\r\nimport UserOutlined from \"@ant-design/icons/lib/icons/UserOutlined\";\r\nimport LockOutlined from \"@ant-design/icons/lib/icons/LockOutlined\";\r\n\r\nconst FormItem = Form.Item;\r\n\r\nfunction hasErrors(fieldsError) {\r\n  return Object.keys(fieldsError).some(field => fieldsError[field]);\r\n}\r\n\r\nclass Basic extends Component {\r\n\r\n\r\n  onFinishFailed = errorInfo => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  onFinish = values => {\r\n    console.log('Received values of form: ', values);\r\n\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Basic\">\r\n        <Form\r\n          initialValues={{remember: true}}\r\n          name=\"basic\"\r\n          onFinish={this.onFinish}\r\n          onFinishFailed={this.onFinishFailed}\r\n          layout=\"inline\">\r\n\r\n          <FormItem rules={[{required: true, message: 'Please input your username!\\'}'}]} name=\"uaername\">\r\n\r\n            <Input prefix={<UserOutlined style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                   placeholder=\"Username\"/>\r\n          </FormItem>\r\n\r\n          <FormItem rules={[{required: true, message: 'Please input your Password!'}]} name=\"password\">\r\n            <Input prefix={<LockOutlined style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                   type=\"password\"\r\n                   placeholder=\"Password\"/>\r\n          </FormItem>\r\n          <FormItem>\r\n            <Button className=\"gx-mb-0\"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n            >\r\n              Log in\r\n            </Button>\r\n          </FormItem>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Basic;\r\n\r\n"]},"metadata":{},"sourceType":"module"}