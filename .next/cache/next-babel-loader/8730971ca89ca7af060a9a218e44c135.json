{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Button, Card, Checkbox } from \"antd\";\n\nclass ControlledCheckbox extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      checked: true,\n      disabled: false\n    });\n\n    _defineProperty(this, \"toggleChecked\", () => {\n      this.setState({\n        checked: !this.state.checked\n      });\n    });\n\n    _defineProperty(this, \"toggleDisable\", () => {\n      this.setState({\n        disabled: !this.state.disabled\n      });\n    });\n\n    _defineProperty(this, \"onChange\", e => {\n      console.log('checked = ', e.target.checked);\n      this.setState({\n        checked: e.target.checked\n      });\n    });\n  }\n\n  render() {\n    const label = `${this.state.checked ? 'Checked' : 'Unchecked'}-${this.state.disabled ? 'Disabled' : 'Enabled'}`;\n    return __jsx(Card, {\n      className: \"gx-card gx-card\",\n      title: \"ControlledCheckbox\"\n    }, __jsx(\"p\", {\n      style: {\n        marginBottom: '20px'\n      }\n    }, __jsx(Checkbox, {\n      checked: this.state.checked,\n      disabled: this.state.disabled,\n      onChange: this.onChange\n    }, label)), __jsx(\"p\", null, __jsx(Button, {\n      type: \"primary\",\n      size: \"small\",\n      onClick: this.toggleChecked\n    }, !this.state.checked ? 'Check' : 'Uncheck'), __jsx(Button, {\n      style: {\n        marginLeft: '10px'\n      },\n      type: \"primary\",\n      size: \"small\",\n      onClick: this.toggleDisable\n    }, !this.state.disabled ? 'Disable' : 'Enable')));\n  }\n\n}\n\nexport default ControlledCheckbox;","map":{"version":3,"sources":["E:/frontend-projects/crm-frontend-wieldy/routes/components/dataEntry/Checkbox/ControlledCheckbox.js"],"names":["React","Component","Button","Card","Checkbox","ControlledCheckbox","checked","disabled","setState","state","e","console","log","target","render","label","marginBottom","onChange","toggleChecked","marginLeft","toggleDisable"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,QAAtB,QAAqC,MAArC;;AAEA,MAAMC,kBAAN,SAAiCJ,SAAjC,CAA2C;AAAA;AAAA;;AAAA,mCACjC;AACNK,MAAAA,OAAO,EAAE,IADH;AAENC,MAAAA,QAAQ,EAAE;AAFJ,KADiC;;AAAA,2CAKzB,MAAM;AACpB,WAAKC,QAAL,CAAc;AAACF,QAAAA,OAAO,EAAE,CAAC,KAAKG,KAAL,CAAWH;AAAtB,OAAd;AACD,KAPwC;;AAAA,2CAQzB,MAAM;AACpB,WAAKE,QAAL,CAAc;AAACD,QAAAA,QAAQ,EAAE,CAAC,KAAKE,KAAL,CAAWF;AAAvB,OAAd;AACD,KAVwC;;AAAA,sCAW7BG,CAAD,IAAO;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,CAAC,CAACG,MAAF,CAASP,OAAnC;AACA,WAAKE,QAAL,CAAc;AACZF,QAAAA,OAAO,EAAEI,CAAC,CAACG,MAAF,CAASP;AADN,OAAd;AAGD,KAhBwC;AAAA;;AAkBzCQ,EAAAA,MAAM,GAAG;AACP,UAAMC,KAAK,GAAI,GAAE,KAAKN,KAAL,CAAWH,OAAX,GAAqB,SAArB,GAAiC,WAAY,IAAG,KAAKG,KAAL,CAAWF,QAAX,GAAsB,UAAtB,GAAmC,SAAU,EAA9G;AACA,WACE,MAAC,IAAD;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAkC,MAAA,KAAK,EAAC;AAAxC,OACE;AAAG,MAAA,KAAK,EAAE;AAACS,QAAAA,YAAY,EAAE;AAAf;AAAV,OACE,MAAC,QAAD;AACE,MAAA,OAAO,EAAE,KAAKP,KAAL,CAAWH,OADtB;AAEE,MAAA,QAAQ,EAAE,KAAKG,KAAL,CAAWF,QAFvB;AAGE,MAAA,QAAQ,EAAE,KAAKU;AAHjB,OAKGF,KALH,CADF,CADF,EAUE,iBACE,MAAC,MAAD;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,OAAO,EAAE,KAAKG;AAHhB,OAKG,CAAC,KAAKT,KAAL,CAAWH,OAAZ,GAAsB,OAAtB,GAAgC,SALnC,CADF,EAQE,MAAC,MAAD;AACE,MAAA,KAAK,EAAE;AAACa,QAAAA,UAAU,EAAE;AAAb,OADT;AAEE,MAAA,IAAI,EAAC,SAFP;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,OAAO,EAAE,KAAKC;AAJhB,OAMG,CAAC,KAAKX,KAAL,CAAWF,QAAZ,GAAuB,SAAvB,GAAmC,QANtC,CARF,CAVF,CADF;AA8BD;;AAlDwC;;AAuD3C,eAAeF,kBAAf","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Button, Card, Checkbox} from \"antd\";\r\n\r\nclass ControlledCheckbox extends Component {\r\n  state = {\r\n    checked: true,\r\n    disabled: false,\r\n  };\r\n  toggleChecked = () => {\r\n    this.setState({checked: !this.state.checked});\r\n  }\r\n  toggleDisable = () => {\r\n    this.setState({disabled: !this.state.disabled});\r\n  }\r\n  onChange = (e) => {\r\n    console.log('checked = ', e.target.checked);\r\n    this.setState({\r\n      checked: e.target.checked,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const label = `${this.state.checked ? 'Checked' : 'Unchecked'}-${this.state.disabled ? 'Disabled' : 'Enabled'}`;\r\n    return (\r\n      <Card className=\"gx-card gx-card\" title=\"ControlledCheckbox\">\r\n        <p style={{marginBottom: '20px'}}>\r\n          <Checkbox\r\n            checked={this.state.checked}\r\n            disabled={this.state.disabled}\r\n            onChange={this.onChange}\r\n          >\r\n            {label}\r\n          </Checkbox>\r\n        </p>\r\n        <p>\r\n          <Button\r\n            type=\"primary\"\r\n            size=\"small\"\r\n            onClick={this.toggleChecked}\r\n          >\r\n            {!this.state.checked ? 'Check' : 'Uncheck'}\r\n          </Button>\r\n          <Button\r\n            style={{marginLeft: '10px'}}\r\n            type=\"primary\"\r\n            size=\"small\"\r\n            onClick={this.toggleDisable}\r\n          >\r\n            {!this.state.disabled ? 'Disable' : 'Enable'}\r\n          </Button>\r\n        </p>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default ControlledCheckbox;\r\n"]},"metadata":{},"sourceType":"module"}