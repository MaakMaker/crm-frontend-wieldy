{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { Button, Card, Tabs } from \"antd\";\nconst TabPane = Tabs.TabPane;\n\nclass CustomizeTrigger extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onChange\", activeKey => {\n      this.setState({\n        activeKey\n      });\n    });\n\n    _defineProperty(this, \"onEdit\", (targetKey, action) => {\n      this[action](targetKey);\n    });\n\n    _defineProperty(this, \"add\", () => {\n      const panes = this.state.panes;\n      const activeKey = `newTab${this.newTabIndex++}`;\n      panes.push({\n        title: 'New Tab',\n        content: 'New Tab Pane',\n        key: activeKey\n      });\n      this.setState({\n        panes,\n        activeKey\n      });\n    });\n\n    _defineProperty(this, \"remove\", targetKey => {\n      let activeKey = this.state.activeKey;\n      let lastIndex;\n      this.state.panes.forEach((pane, i) => {\n        if (pane.key === targetKey) {\n          lastIndex = i - 1;\n        }\n      });\n      const panes = this.state.panes.filter(pane => pane.key !== targetKey);\n\n      if (lastIndex >= 0 && activeKey === targetKey) {\n        activeKey = panes[lastIndex].key;\n      }\n\n      this.setState({\n        panes,\n        activeKey\n      });\n    });\n\n    this.newTabIndex = 0;\n    const _panes = [{\n      title: 'Tab 1',\n      content: 'Content of Tab Pane 1',\n      key: '1'\n    }, {\n      title: 'Tab 2',\n      content: 'Content of Tab Pane 2',\n      key: '2'\n    }];\n    this.state = {\n      activeKey: _panes[0].key,\n      panes: _panes\n    };\n  }\n\n  render() {\n    return __jsx(Card, {\n      className: \"gx-card\",\n      title: \"Customize Trigger\"\n    }, __jsx(\"div\", {\n      className: \"gx-mb-3\"\n    }, __jsx(Button, {\n      onClick: this.add\n    }, \"ADD\")), __jsx(Tabs, {\n      hideAdd: true,\n      onChange: this.onChange,\n      activeKey: this.state.activeKey,\n      type: \"editable-card\",\n      onEdit: this.onEdit\n    }, this.state.panes.map(pane => __jsx(TabPane, {\n      tab: pane.title,\n      key: pane.key\n    }, pane.content))));\n  }\n\n}\n\nexport default CustomizeTrigger;","map":{"version":3,"sources":["E:/frontend-projects/crm-frontend-wieldy/routes/components/dataDisplay/Tabs/CustomizeTrigger.js"],"names":["React","Button","Card","Tabs","TabPane","CustomizeTrigger","Component","constructor","props","activeKey","setState","targetKey","action","panes","state","newTabIndex","push","title","content","key","lastIndex","forEach","pane","i","filter","render","add","onChange","onEdit","map"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Button, Card, Tabs} from \"antd\";\r\n\r\nconst TabPane = Tabs.TabPane;\r\n\r\nclass CustomizeTrigger extends React.Component {\r\n  onChange = (activeKey) => {\r\n    this.setState({activeKey});\r\n  };\r\n  onEdit = (targetKey, action) => {\r\n    this[action](targetKey);\r\n  };\r\n  add = () => {\r\n    const panes = this.state.panes;\r\n    const activeKey = `newTab${this.newTabIndex++}`;\r\n    panes.push({title: 'New Tab', content: 'New Tab Pane', key: activeKey});\r\n    this.setState({panes, activeKey});\r\n  };\r\n  remove = (targetKey) => {\r\n    let activeKey = this.state.activeKey;\r\n    let lastIndex;\r\n    this.state.panes.forEach((pane, i) => {\r\n      if (pane.key === targetKey) {\r\n        lastIndex = i - 1;\r\n      }\r\n    });\r\n    const panes = this.state.panes.filter(pane => pane.key !== targetKey);\r\n    if (lastIndex >= 0 && activeKey === targetKey) {\r\n      activeKey = panes[lastIndex].key;\r\n    }\r\n    this.setState({panes, activeKey});\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.newTabIndex = 0;\r\n    const panes = [\r\n      {title: 'Tab 1', content: 'Content of Tab Pane 1', key: '1'},\r\n      {title: 'Tab 2', content: 'Content of Tab Pane 2', key: '2'},\r\n    ];\r\n    this.state = {\r\n      activeKey: panes[0].key,\r\n      panes,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Customize Trigger\">\r\n        <div className=\"gx-mb-3\">\r\n          <Button onClick={this.add}>ADD</Button>\r\n        </div>\r\n        <Tabs\r\n          hideAdd\r\n          onChange={this.onChange}\r\n          activeKey={this.state.activeKey}\r\n          type=\"editable-card\"\r\n          onEdit={this.onEdit}\r\n        >\r\n          {this.state.panes.map(pane => <TabPane tab={pane.title} key={pane.key}>{pane.content}</TabPane>)}\r\n        </Tabs>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomizeTrigger;\r\n"]},"metadata":{},"sourceType":"module"}