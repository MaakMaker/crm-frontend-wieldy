{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState } from 'react';\nimport { Form, Input, Button, Radio, Card } from 'antd';\n\nconst FormLayout = () => {\n  const [form] = Form.useForm();\n  const {\n    0: formLayout,\n    1: setFormLayout\n  } = useState('horizontal');\n\n  const onFormLayoutChange = ({\n    layout\n  }) => {\n    setFormLayout(layout);\n  };\n\n  const formItemLayout = formLayout === 'horizontal' ? {\n    labelCol: {\n      xs: {\n        span: 24\n      },\n      sm: {\n        span: 6\n      }\n    },\n    wrapperCol: {\n      xs: {\n        span: 24\n      },\n      sm: {\n        span: 14\n      }\n    }\n  } : null;\n  const buttonItemLayout = formLayout === 'horizontal' ? {\n    wrapperCol: {\n      span: 14,\n      offset: 4\n    }\n  } : null;\n  return __jsx(Card, {\n    className: \"gx-card\",\n    title: \"FORM LAYOUT\"\n  }, __jsx(Form, _extends({}, formItemLayout, {\n    layout: formLayout,\n    form: form,\n    initialValues: {\n      layout: formLayout\n    },\n    onValuesChange: onFormLayoutChange\n  }), __jsx(Form.Item, {\n    label: \"Form Layout\",\n    name: \"layout\"\n  }, __jsx(Radio.Group, {\n    value: formLayout\n  }, __jsx(Radio.Button, {\n    value: \"horizontal\"\n  }, \"Horizontal\"), __jsx(Radio.Button, {\n    value: \"vertical\"\n  }, \"Vertical\"), __jsx(Radio.Button, {\n    value: \"inline\"\n  }, \"Inline\"))), __jsx(Form.Item, {\n    label: \"Field A\"\n  }, __jsx(Input, {\n    placeholder: \"input placeholder\"\n  })), __jsx(Form.Item, {\n    label: \"Field B\"\n  }, __jsx(Input, {\n    placeholder: \"input placeholder\"\n  })), __jsx(Form.Item, buttonItemLayout, __jsx(Button, {\n    type: \"primary\"\n  }, \"Submit\"))));\n};\n\nexport default FormLayout;","map":{"version":3,"sources":["E:/frontend-projects/crm-frontend-wieldy/routes/components/dataEntry/Form/FormLayout.js"],"names":["React","useState","Form","Input","Button","Radio","Card","FormLayout","form","useForm","formLayout","setFormLayout","onFormLayoutChange","layout","formItemLayout","labelCol","xs","span","sm","wrapperCol","buttonItemLayout","offset"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,KAA9B,EAAoCC,IAApC,QAAgD,MAAhD;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAM,CAACC,IAAD,IAASN,IAAI,CAACO,OAAL,EAAf;AACA,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BV,QAAQ,CAAC,YAAD,CAA5C;;AAEA,QAAMW,kBAAkB,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAgB;AACzCF,IAAAA,aAAa,CAACE,MAAD,CAAb;AACD,GAFD;;AAIA,QAAMC,cAAc,GAClBJ,UAAU,KAAK,YAAf,GACI;AACAK,IAAAA,QAAQ,EAAE;AACRC,MAAAA,EAAE,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR,OADI;AAERC,MAAAA,EAAE,EAAE;AAAED,QAAAA,IAAI,EAAE;AAAR;AAFI,KADV;AAKAE,IAAAA,UAAU,EAAE;AACVH,MAAAA,EAAE,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR,OADM;AAEVC,MAAAA,EAAE,EAAE;AAAED,QAAAA,IAAI,EAAE;AAAR;AAFM;AALZ,GADJ,GAWI,IAZN;AAaA,QAAMG,gBAAgB,GACpBV,UAAU,KAAK,YAAf,GACI;AACAS,IAAAA,UAAU,EAAE;AACVF,MAAAA,IAAI,EAAE,EADI;AAEVI,MAAAA,MAAM,EAAE;AAFE;AADZ,GADJ,GAOI,IARN;AASA,SACE,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,SAAhB;AAA0B,IAAA,KAAK,EAAC;AAAhC,KACE,MAAC,IAAD,eACMP,cADN;AAEE,IAAA,MAAM,EAAEJ,UAFV;AAGE,IAAA,IAAI,EAAEF,IAHR;AAIE,IAAA,aAAa,EAAE;AACbK,MAAAA,MAAM,EAAEH;AADK,KAJjB;AAOE,IAAA,cAAc,EAAEE;AAPlB,MASE,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAC,aAAjB;AAA+B,IAAA,IAAI,EAAC;AAApC,KACE,MAAC,KAAD,CAAO,KAAP;AAAa,IAAA,KAAK,EAAEF;AAApB,KACE,MAAC,KAAD,CAAO,MAAP;AAAc,IAAA,KAAK,EAAC;AAApB,kBADF,EAEE,MAAC,KAAD,CAAO,MAAP;AAAc,IAAA,KAAK,EAAC;AAApB,gBAFF,EAGE,MAAC,KAAD,CAAO,MAAP;AAAc,IAAA,KAAK,EAAC;AAApB,cAHF,CADF,CATF,EAgBE,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAC;AAAjB,KACE,MAAC,KAAD;AAAO,IAAA,WAAW,EAAC;AAAnB,IADF,CAhBF,EAmBE,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAC;AAAjB,KACE,MAAC,KAAD;AAAO,IAAA,WAAW,EAAC;AAAnB,IADF,CAnBF,EAsBE,MAAC,IAAD,CAAM,IAAN,EAAeU,gBAAf,EACE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC;AAAb,cADF,CAtBF,CADF,CADF;AA8BD,CA5DD;;AA8DA,eAAeb,UAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Form, Input, Button, Radio,Card } from 'antd';\r\n\r\nconst FormLayout = () => {\r\n  const [form] = Form.useForm();\r\n  const [formLayout, setFormLayout] = useState('horizontal');\r\n\r\n  const onFormLayoutChange = ({ layout }) => {\r\n    setFormLayout(layout);\r\n  };\r\n\r\n  const formItemLayout =\r\n    formLayout === 'horizontal'\r\n      ? {\r\n        labelCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 6 },\r\n        },\r\n        wrapperCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 14 },\r\n        },\r\n      }\r\n      : null;\r\n  const buttonItemLayout =\r\n    formLayout === 'horizontal'\r\n      ? {\r\n        wrapperCol: {\r\n          span: 14,\r\n          offset: 4,\r\n        },\r\n      }\r\n      : null;\r\n  return (\r\n    <Card className=\"gx-card\" title=\"FORM LAYOUT\">\r\n      <Form\r\n        {...formItemLayout}\r\n        layout={formLayout}\r\n        form={form}\r\n        initialValues={{\r\n          layout: formLayout,\r\n        }}\r\n        onValuesChange={onFormLayoutChange}\r\n      >\r\n        <Form.Item label=\"Form Layout\" name=\"layout\">\r\n          <Radio.Group value={formLayout}>\r\n            <Radio.Button value=\"horizontal\">Horizontal</Radio.Button>\r\n            <Radio.Button value=\"vertical\">Vertical</Radio.Button>\r\n            <Radio.Button value=\"inline\">Inline</Radio.Button>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n        <Form.Item label=\"Field A\">\r\n          <Input placeholder=\"input placeholder\" />\r\n        </Form.Item>\r\n        <Form.Item label=\"Field B\">\r\n          <Input placeholder=\"input placeholder\" />\r\n        </Form.Item>\r\n        <Form.Item {...buttonItemLayout}>\r\n          <Button type=\"primary\">Submit</Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default FormLayout;\r\n"]},"metadata":{},"sourceType":"module"}