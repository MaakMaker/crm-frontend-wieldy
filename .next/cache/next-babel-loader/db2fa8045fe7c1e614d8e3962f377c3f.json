{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport { Avatar, Dropdown, Menu } from \"antd\";\nimport CustomScrollbars from '../../../../util/CustomScrollbars';\nimport labels from \"../../../../routes/inbuiltApps/mail/data/labels\";\nvar options = ['Reply', 'Forward', 'Print'];\n\nvar MailDetail = /*#__PURE__*/function (_React$Component) {\n  _inherits(MailDetail, _React$Component);\n\n  var _super = _createSuper(MailDetail);\n\n  function MailDetail() {\n    var _this;\n\n    _classCallCheck(this, MailDetail);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      showDetail: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"optionMenu\", function () {\n      return __jsx(Menu, {\n        id: \"long-menu\"\n      }, options.map(function (option) {\n        return __jsx(Menu.Item, {\n          key: option\n        }, option);\n      }));\n    });\n\n    return _this;\n  }\n\n  _createClass(MailDetail, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          mail = _this$props.mail,\n          onStartSelect = _this$props.onStartSelect,\n          onImportantSelect = _this$props.onImportantSelect;\n      return __jsx(\"div\", {\n        className: \"gx-module-detail gx-mail-detail\"\n      }, __jsx(CustomScrollbars, {\n        className: \"gx-module-content-scroll\"\n      }, __jsx(\"div\", {\n        className: \"gx-mail-detail-inner\"\n      }, __jsx(\"div\", {\n        className: \"gx-mail-header\"\n      }, __jsx(\"div\", {\n        className: \"gx-mail-header-content gx-col gx-pl-0\"\n      }, __jsx(\"div\", {\n        className: \"gx-subject\"\n      }, mail.subject), __jsx(\"div\", {\n        className: \"gx-labels\"\n      }, labels.map(function (label, index) {\n        return mail.labels.includes(label.id) && __jsx(\"div\", {\n          key: index,\n          className: \"gx-badge gx-text-white gx-bg-\".concat(label.color)\n        }, label.title);\n      }))), __jsx(\"div\", {\n        className: \"gx-mail-header-actions\"\n      }, __jsx(\"div\", {\n        onClick: function onClick() {\n          onStartSelect(mail);\n        }\n      }, mail.starred ? __jsx(\"i\", {\n        className: \"icon icon-star gx-icon-btn\"\n      }) : __jsx(\"i\", {\n        className: \"icon icon-star-o gx-icon-btn\"\n      })), __jsx(\"div\", {\n        onClick: function onClick() {\n          onImportantSelect(mail);\n        }\n      }, mail.important ? __jsx(\"i\", {\n        className: \"icon icon-important gx-icon-btn\"\n      }) : __jsx(\"i\", {\n        className: \"icon icon-important-o gx-icon-btn\"\n      })))), __jsx(\"hr\", null), __jsx(\"div\", {\n        className: \"gx-mail-user-info gx-ml-0 gx-mb-3\"\n      }, mail.from.avatar === '' ? __jsx(Avatar, {\n        className: \"gx-avatar gx-bg-blue gx-size-40 gx-mr-3\"\n      }, \" \", mail.from.name.charAt(0).toUpperCase()) : __jsx(Avatar, {\n        className: \"gx-size-40 gx-mr-3\",\n        alt: \"Alice Freeman\",\n        src: mail.from.avatar\n      }), __jsx(\"div\", {\n        className: \"gx-sender-name\"\n      }, mail.from.name, __jsx(\"div\", {\n        className: \"gx-send-to gx-text-grey\"\n      }, \"to me\")), __jsx(Dropdown, {\n        trigger: ['click'],\n        overlay: this.optionMenu()\n      }, __jsx(\"span\", {\n        className: \"gx-ml-auto\"\n      }, __jsx(\"i\", {\n        className: \"icon icon-ellipse-v gx-icon-btn\"\n      })))), __jsx(\"div\", {\n        className: \"gx-show-link\",\n        onClick: function onClick() {\n          _this2.setState({\n            showDetail: !_this2.state.showDetail\n          });\n        }\n      }, this.state.showDetail ? 'Hide Detail' : 'Show Detail'), this.state.showDetail && __jsx(\"div\", {\n        className: \"gx-show-detail\"\n      }, __jsx(\"div\", null, __jsx(\"strong\", null, \"From: \"), mail.from.email), __jsx(\"div\", null, __jsx(\"strong\", null, \" To: \"), mail.to.map(function (to, index) {\n        return __jsx(\"span\", null, index > 0 && ', ', \" \", to.email);\n      })), __jsx(\"div\", null, __jsx(\"strong\", null, \"Date: \"), mail.time, \" \")), __jsx(\"p\", null, mail.message), mail.hasAttachments && __jsx(\"div\", {\n        className: \"gx-attachment-block\"\n      }, __jsx(\"h3\", null, \"Attachments (\", mail.attachments.length, \")\"), __jsx(\"div\", {\n        className: \"gx-attachment-row\"\n      }, mail.attachments.map(function (attachment, index) {\n        return __jsx(\"div\", {\n          className: \"gx-attachment-col\",\n          key: index\n        }, __jsx(\"img\", {\n          src: attachment.preview,\n          alt: attachment.fileName\n        }), __jsx(\"div\", {\n          className: \"size\"\n        }, attachment.size));\n      }))))));\n    }\n  }]);\n\n  return MailDetail;\n}(React.Component);\n\nexport default MailDetail;","map":{"version":3,"sources":["E:/frontend-projects/crm-frontend-wieldy/app/components/mail/MailDetail/index.js"],"names":["React","Avatar","Dropdown","Menu","CustomScrollbars","labels","options","MailDetail","showDetail","map","option","props","mail","onStartSelect","onImportantSelect","subject","label","index","includes","id","color","title","starred","important","from","avatar","name","charAt","toUpperCase","optionMenu","setState","state","email","to","time","message","hasAttachments","attachments","length","attachment","preview","fileName","size","Component"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,QAAhB,EAA0BC,IAA1B,QAAqC,MAArC;AACA,OAAOC,gBAAP,MAA6B,mCAA7B;AAEA,OAAOC,MAAP,MAAmB,iDAAnB;AAEA,IAAMC,OAAO,GAAG,CACd,OADc,EAEd,SAFc,EAGd,OAHc,CAAhB;;IAMMC,U;;;;;;;;;;;;;;;;4DAEI;AACNC,MAAAA,UAAU,EAAE;AADN,K;;iEAIK,YAAM;AACjB,aACE,MAAC,IAAD;AAAM,QAAA,EAAE,EAAC;AAAT,SACGF,OAAO,CAACG,GAAR,CAAY,UAAAC,MAAM;AAAA,eACjB,MAAC,IAAD,CAAM,IAAN;AAAW,UAAA,GAAG,EAAEA;AAAhB,WACGA,MADH,CADiB;AAAA,OAAlB,CADH,CADF;AAQD,K;;;;;;;6BAEQ;AAAA;;AAAA,wBAC0C,KAAKC,KAD/C;AAAA,UACAC,IADA,eACAA,IADA;AAAA,UACMC,aADN,eACMA,aADN;AAAA,UACqBC,iBADrB,eACqBA,iBADrB;AAGP,aACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,MAAC,gBAAD;AAAkB,QAAA,SAAS,EAAC;AAA5B,SACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,SAAS,EAAC;AAAf,SAEE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACGF,IAAI,CAACG,OADR,CADF,EAKE;AAAK,QAAA,SAAS,EAAC;AAAf,SACGV,MAAM,CAACI,GAAP,CAAW,UAACO,KAAD,EAAQC,KAAR,EAAkB;AAC5B,eAAQL,IAAI,CAACP,MAAN,CAAca,QAAd,CAAuBF,KAAK,CAACG,EAA7B,KAAoC;AAAK,UAAA,GAAG,EAAEF,KAAV;AACK,UAAA,SAAS,yCAAkCD,KAAK,CAACI,KAAxC;AADd,WACgEJ,KAAK,CAACK,KADtE,CAA3C;AAED,OAHA,CADH,CALF,CAFF,EAiBE;AAAK,QAAA,SAAS,EAAC;AAAf,SAEE;AAAK,QAAA,OAAO,EAAE,mBAAM;AAClBR,UAAAA,aAAa,CAACD,IAAD,CAAb;AACD;AAFD,SAGGA,IAAI,CAACU,OAAL,GACC;AAAG,QAAA,SAAS,EAAC;AAAb,QADD,GAEC;AAAG,QAAA,SAAS,EAAC;AAAb,QALJ,CAFF,EAWE;AAAK,QAAA,OAAO,EAAE,mBAAM;AAClBR,UAAAA,iBAAiB,CAACF,IAAD,CAAjB;AACD;AAFD,SAIGA,IAAI,CAACW,SAAL,GACC;AAAG,QAAA,SAAS,EAAC;AAAb,QADD,GAEG;AAAG,QAAA,SAAS,EAAC;AAAb,QANN,CAXF,CAjBF,CADF,EAyCE,iBAzCF,EA2CE;AAAK,QAAA,SAAS,EAAC;AAAf,SAEGX,IAAI,CAACY,IAAL,CAAUC,MAAV,KAAqB,EAArB,GACC,MAAC,MAAD;AACE,QAAA,SAAS,EAAC;AADZ,cACwDb,IAAI,CAACY,IAAL,CAAUE,IAAV,CAAeC,MAAf,CAAsB,CAAtB,EAAyBC,WAAzB,EADxD,CADD,GAGC,MAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,oBAAlB;AAAuC,QAAA,GAAG,EAAC,eAA3C;AACQ,QAAA,GAAG,EAAEhB,IAAI,CAACY,IAAL,CAAUC;AADvB,QALJ,EASE;AAAK,QAAA,SAAS,EAAC;AAAf,SAAiCb,IAAI,CAACY,IAAL,CAAUE,IAA3C,EACE;AAAK,QAAA,SAAS,EAAC;AAAf,iBADF,CATF,EAaE,MAAC,QAAD;AAAU,QAAA,OAAO,EAAE,CAAC,OAAD,CAAnB;AAA8B,QAAA,OAAO,EAAE,KAAKG,UAAL;AAAvC,SACE;AAAM,QAAA,SAAS,EAAC;AAAhB,SAA6B;AAAG,QAAA,SAAS,EAAC;AAAb,QAA7B,CADF,CAbF,CA3CF,EA8DE;AAAK,QAAA,SAAS,EAAC,cAAf;AAA8B,QAAA,OAAO,EAAE,mBAAM;AAC3C,UAAA,MAAI,CAACC,QAAL,CAAc;AAACtB,YAAAA,UAAU,EAAE,CAAC,MAAI,CAACuB,KAAL,CAAWvB;AAAzB,WAAd;AACD;AAFD,SAEI,KAAKuB,KAAL,CAAWvB,UAAX,GAAwB,aAAxB,GAAwC,aAF5C,CA9DF,EAiEG,KAAKuB,KAAL,CAAWvB,UAAX,IAA0B;AAAK,QAAA,SAAS,EAAC;AAAf,SACzB,mBACE,+BADF,EAC0BI,IAAI,CAACY,IAAL,CAAUQ,KADpC,CADyB,EAIzB,mBACE,8BADF,EAGIpB,IAAI,CAACqB,EAAL,CAAQxB,GAAR,CAAY,UAACwB,EAAD,EAAKhB,KAAL;AAAA,eAAe,oBAAOA,KAAK,GAAG,CAAR,IAAa,IAApB,OAA2BgB,EAAE,CAACD,KAA9B,CAAf;AAAA,OAAZ,CAHJ,CAJyB,EAUzB,mBAAK,+BAAL,EAA6BpB,IAAI,CAACsB,IAAlC,MAVyB,CAjE7B,EA+EE,iBACGtB,IAAI,CAACuB,OADR,CA/EF,EAmFGvB,IAAI,CAACwB,cAAL,IACD;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,mCAAkBxB,IAAI,CAACyB,WAAL,CAAiBC,MAAnC,MADF,EAEE;AAAK,QAAA,SAAS,EAAC;AAAf,SACG1B,IAAI,CAACyB,WAAL,CAAiB5B,GAAjB,CAAqB,UAAC8B,UAAD,EAAatB,KAAb;AAAA,eACpB;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAmC,UAAA,GAAG,EAAEA;AAAxC,WACE;AAAK,UAAA,GAAG,EAAEsB,UAAU,CAACC,OAArB;AAA8B,UAAA,GAAG,EAAED,UAAU,CAACE;AAA9C,UADF,EAEE;AAAK,UAAA,SAAS,EAAC;AAAf,WAAuBF,UAAU,CAACG,IAAlC,CAFF,CADoB;AAAA,OAArB,CADH,CAFF,CApFF,CADF,CADF,CADF;AAuGD;;;;EA3HsB1C,KAAK,CAAC2C,S;;AA8H/B,eAAepC,UAAf","sourcesContent":["import React from \"react\";\r\nimport {Avatar, Dropdown, Menu} from \"antd\";\r\nimport CustomScrollbars from '../../../../util/CustomScrollbars'\r\n\r\nimport labels from \"../../../../routes/inbuiltApps/mail/data/labels\";\r\n\r\nconst options = [\r\n  'Reply',\r\n  'Forward',\r\n  'Print',\r\n];\r\n\r\nclass MailDetail extends React.Component {\r\n\r\n  state = {\r\n    showDetail: false\r\n  };\r\n\r\n  optionMenu = () => {\r\n    return (\r\n      <Menu id=\"long-menu\">\r\n        {options.map(option =>\r\n          <Menu.Item key={option}>\r\n            {option}\r\n          </Menu.Item>,\r\n        )}\r\n      </Menu>)\r\n  };\r\n\r\n  render() {\r\n    const {mail, onStartSelect, onImportantSelect} = this.props;\r\n\r\n    return (\r\n      <div className=\"gx-module-detail gx-mail-detail\">\r\n        <CustomScrollbars className=\"gx-module-content-scroll\">\r\n          <div className=\"gx-mail-detail-inner\">\r\n            <div className=\"gx-mail-header\">\r\n\r\n              <div className=\"gx-mail-header-content gx-col gx-pl-0\">\r\n                <div className=\"gx-subject\">\r\n                  {mail.subject}\r\n                </div>\r\n\r\n                <div className=\"gx-labels\">\r\n                  {labels.map((label, index) => {\r\n                    return (mail.labels).includes(label.id) && <div key={index}\r\n                                                                    className={`gx-badge gx-text-white gx-bg-${label.color}`}>{label.title}</div>\r\n                  })}\r\n                </div>\r\n\r\n\r\n              </div>\r\n\r\n              <div className=\"gx-mail-header-actions\">\r\n\r\n                <div onClick={() => {\r\n                  onStartSelect(mail);\r\n                }}>\r\n                  {mail.starred ?\r\n                    <i className=\"icon icon-star gx-icon-btn\"/> :\r\n                    <i className=\"icon icon-star-o gx-icon-btn\"/>\r\n                  }\r\n\r\n                </div>\r\n                <div onClick={() => {\r\n                  onImportantSelect(mail);\r\n                }}>\r\n\r\n                  {mail.important ?\r\n                    <i className=\"icon icon-important gx-icon-btn\"/>\r\n                    : <i className=\"icon icon-important-o gx-icon-btn\"/>\r\n                  }\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n            <hr/>\r\n\r\n            <div className=\"gx-mail-user-info gx-ml-0 gx-mb-3\">\r\n\r\n              {mail.from.avatar === '' ?\r\n                <Avatar\r\n                  className=\"gx-avatar gx-bg-blue gx-size-40 gx-mr-3\"> {mail.from.name.charAt(0).toUpperCase()}</Avatar> :\r\n                <Avatar className=\"gx-size-40 gx-mr-3\" alt=\"Alice Freeman\"\r\n                        src={mail.from.avatar}/>\r\n              }\r\n\r\n              <div className=\"gx-sender-name\">{mail.from.name}\r\n                <div className=\"gx-send-to gx-text-grey\">to me</div>\r\n              </div>\r\n\r\n              <Dropdown trigger={['click']} overlay={this.optionMenu()}>\r\n                <span className=\"gx-ml-auto\"><i className=\"icon icon-ellipse-v gx-icon-btn\"/></span>\r\n              </Dropdown>\r\n\r\n            </div>\r\n\r\n            <div className=\"gx-show-link\" onClick={() => {\r\n              this.setState({showDetail: !this.state.showDetail});\r\n            }}>{this.state.showDetail ? 'Hide Detail' : 'Show Detail'}</div>\r\n            {this.state.showDetail && (<div className=\"gx-show-detail\">\r\n              <div>\r\n                <strong>From: </strong>{mail.from.email}\r\n              </div>\r\n              <div>\r\n                <strong> To: </strong>\r\n                {\r\n                  mail.to.map((to, index) => <span>{index > 0 && ', '} {to.email}</span>)\r\n                }\r\n              </div>\r\n              <div><strong>Date: </strong>{mail.time} </div>\r\n            </div>)}\r\n\r\n\r\n            <p>\r\n              {mail.message}\r\n            </p>\r\n\r\n            {mail.hasAttachments &&\r\n            <div className=\"gx-attachment-block\">\r\n              <h3>Attachments ({mail.attachments.length})</h3>\r\n              <div className=\"gx-attachment-row\">\r\n                {mail.attachments.map((attachment, index) =>\r\n                  <div className=\"gx-attachment-col\" key={index}>\r\n                    <img src={attachment.preview} alt={attachment.fileName}/>\r\n                    <div className=\"size\">{attachment.size}</div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            }\r\n          </div>\r\n        </CustomScrollbars>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MailDetail;\r\n"]},"metadata":{},"sourceType":"module"}