{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Card, Checkbox } from \"antd\";\nconst CheckboxGroup = Checkbox.Group;\nconst plainOptions = ['Apple', 'Pear', 'Orange'];\nconst defaultCheckedList = ['Apple', 'Orange'];\n\nclass CheckAll extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      checkedList: defaultCheckedList,\n      indeterminate: true,\n      checkAll: false\n    });\n\n    _defineProperty(this, \"onChange\", checkedList => {\n      this.setState({\n        checkedList,\n        indeterminate: !!checkedList.length && checkedList.length < plainOptions.length,\n        checkAll: checkedList.length === plainOptions.length\n      });\n    });\n\n    _defineProperty(this, \"onCheckAllChange\", e => {\n      this.setState({\n        checkedList: e.target.checked ? plainOptions : [],\n        indeterminate: false,\n        checkAll: e.target.checked\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Card, {\n      className: \"gx-card\",\n      title: \"CheckAll\"\n    }, __jsx(\"div\", {\n      className: \"gx-border-bottom gx-pb-3 gx-mb-3\"\n    }, __jsx(Checkbox, {\n      indeterminate: this.state.indeterminate,\n      onChange: this.onCheckAllChange,\n      checked: this.state.checkAll\n    }, \"Check all\")), __jsx(CheckboxGroup, {\n      options: plainOptions,\n      value: this.state.checkedList,\n      onChange: this.onChange\n    }));\n  }\n\n}\n\nexport default CheckAll;","map":{"version":3,"sources":["E:/frontend-projects/crm-frontend-wieldy/routes/components/dataEntry/Checkbox/CheckAll.js"],"names":["React","Component","Card","Checkbox","CheckboxGroup","Group","plainOptions","defaultCheckedList","CheckAll","checkedList","indeterminate","checkAll","setState","length","e","target","checked","render","state","onCheckAllChange","onChange"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,EAAcC,QAAd,QAA6B,MAA7B;AAEA,MAAMC,aAAa,GAAGD,QAAQ,CAACE,KAA/B;AAEA,MAAMC,YAAY,GAAG,CAAC,OAAD,EAAU,MAAV,EAAkB,QAAlB,CAArB;AACA,MAAMC,kBAAkB,GAAG,CAAC,OAAD,EAAU,QAAV,CAA3B;;AAGA,MAAMC,QAAN,SAAuBP,SAAvB,CAAiC;AAAA;AAAA;;AAAA,mCACvB;AACNQ,MAAAA,WAAW,EAAEF,kBADP;AAENG,MAAAA,aAAa,EAAE,IAFT;AAGNC,MAAAA,QAAQ,EAAE;AAHJ,KADuB;;AAAA,sCAMnBF,WAAD,IAAiB;AAC1B,WAAKG,QAAL,CAAc;AACZH,QAAAA,WADY;AAEZC,QAAAA,aAAa,EAAE,CAAC,CAACD,WAAW,CAACI,MAAd,IAAyBJ,WAAW,CAACI,MAAZ,GAAqBP,YAAY,CAACO,MAF9D;AAGZF,QAAAA,QAAQ,EAAEF,WAAW,CAACI,MAAZ,KAAuBP,YAAY,CAACO;AAHlC,OAAd;AAKD,KAZ8B;;AAAA,8CAaXC,CAAD,IAAO;AACxB,WAAKF,QAAL,CAAc;AACZH,QAAAA,WAAW,EAAEK,CAAC,CAACC,MAAF,CAASC,OAAT,GAAmBV,YAAnB,GAAkC,EADnC;AAEZI,QAAAA,aAAa,EAAE,KAFH;AAGZC,QAAAA,QAAQ,EAAEG,CAAC,CAACC,MAAF,CAASC;AAHP,OAAd;AAKD,KAnB8B;AAAA;;AAqB/BC,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,IAAD;AAAM,MAAA,SAAS,EAAC,SAAhB;AAA0B,MAAA,KAAK,EAAC;AAAhC,OACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE,MAAC,QAAD;AACE,MAAA,aAAa,EAAE,KAAKC,KAAL,CAAWR,aAD5B;AAEE,MAAA,QAAQ,EAAE,KAAKS,gBAFjB;AAGE,MAAA,OAAO,EAAE,KAAKD,KAAL,CAAWP;AAHtB,mBADF,CADF,EAUE,MAAC,aAAD;AAAe,MAAA,OAAO,EAAEL,YAAxB;AAAsC,MAAA,KAAK,EAAE,KAAKY,KAAL,CAAWT,WAAxD;AAAqE,MAAA,QAAQ,EAAE,KAAKW;AAApF,MAVF,CADF;AAcD;;AApC8B;;AAwCjC,eAAeZ,QAAf","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Card, Checkbox} from \"antd\";\r\n\r\nconst CheckboxGroup = Checkbox.Group;\r\n\r\nconst plainOptions = ['Apple', 'Pear', 'Orange'];\r\nconst defaultCheckedList = ['Apple', 'Orange'];\r\n\r\n\r\nclass CheckAll extends Component {\r\n  state = {\r\n    checkedList: defaultCheckedList,\r\n    indeterminate: true,\r\n    checkAll: false,\r\n  };\r\n  onChange = (checkedList) => {\r\n    this.setState({\r\n      checkedList,\r\n      indeterminate: !!checkedList.length && (checkedList.length < plainOptions.length),\r\n      checkAll: checkedList.length === plainOptions.length,\r\n    });\r\n  }\r\n  onCheckAllChange = (e) => {\r\n    this.setState({\r\n      checkedList: e.target.checked ? plainOptions : [],\r\n      indeterminate: false,\r\n      checkAll: e.target.checked,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card className=\"gx-card\" title=\"CheckAll\">\r\n        <div className=\"gx-border-bottom gx-pb-3 gx-mb-3\">\r\n          <Checkbox\r\n            indeterminate={this.state.indeterminate}\r\n            onChange={this.onCheckAllChange}\r\n            checked={this.state.checkAll}\r\n          >\r\n            Check all\r\n          </Checkbox>\r\n        </div>\r\n        <CheckboxGroup options={plainOptions} value={this.state.checkedList} onChange={this.onChange}/>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default CheckAll;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}