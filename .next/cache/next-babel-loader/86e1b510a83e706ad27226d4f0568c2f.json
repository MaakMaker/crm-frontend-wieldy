{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Card, Checkbox } from \"antd\";\nvar CheckboxGroup = Checkbox.Group;\nvar plainOptions = ['Apple', 'Pear', 'Orange'];\nvar defaultCheckedList = ['Apple', 'Orange'];\n\nvar CheckAll = /*#__PURE__*/function (_Component) {\n  _inherits(CheckAll, _Component);\n\n  var _super = _createSuper(CheckAll);\n\n  function CheckAll() {\n    var _this;\n\n    _classCallCheck(this, CheckAll);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      checkedList: defaultCheckedList,\n      indeterminate: true,\n      checkAll: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (checkedList) {\n      _this.setState({\n        checkedList: checkedList,\n        indeterminate: !!checkedList.length && checkedList.length < plainOptions.length,\n        checkAll: checkedList.length === plainOptions.length\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCheckAllChange\", function (e) {\n      _this.setState({\n        checkedList: e.target.checked ? plainOptions : [],\n        indeterminate: false,\n        checkAll: e.target.checked\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(CheckAll, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(Card, {\n        className: \"gx-card\",\n        title: \"CheckAll\"\n      }, __jsx(\"div\", {\n        className: \"gx-border-bottom gx-pb-3 gx-mb-3\"\n      }, __jsx(Checkbox, {\n        indeterminate: this.state.indeterminate,\n        onChange: this.onCheckAllChange,\n        checked: this.state.checkAll\n      }, \"Check all\")), __jsx(CheckboxGroup, {\n        options: plainOptions,\n        value: this.state.checkedList,\n        onChange: this.onChange\n      }));\n    }\n  }]);\n\n  return CheckAll;\n}(Component);\n\nexport default CheckAll;","map":{"version":3,"sources":["E:/frontend-projects/crm-frontend-wieldy/routes/components/dataEntry/Checkbox/CheckAll.js"],"names":["React","Component","Card","Checkbox","CheckboxGroup","Group","plainOptions","defaultCheckedList","CheckAll","checkedList","indeterminate","checkAll","setState","length","e","target","checked","state","onCheckAllChange","onChange"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,EAAcC,QAAd,QAA6B,MAA7B;AAEA,IAAMC,aAAa,GAAGD,QAAQ,CAACE,KAA/B;AAEA,IAAMC,YAAY,GAAG,CAAC,OAAD,EAAU,MAAV,EAAkB,QAAlB,CAArB;AACA,IAAMC,kBAAkB,GAAG,CAAC,OAAD,EAAU,QAAV,CAA3B;;IAGMC,Q;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,WAAW,EAAEF,kBADP;AAENG,MAAAA,aAAa,EAAE,IAFT;AAGNC,MAAAA,QAAQ,EAAE;AAHJ,K;;+DAKG,UAACF,WAAD,EAAiB;AAC1B,YAAKG,QAAL,CAAc;AACZH,QAAAA,WAAW,EAAXA,WADY;AAEZC,QAAAA,aAAa,EAAE,CAAC,CAACD,WAAW,CAACI,MAAd,IAAyBJ,WAAW,CAACI,MAAZ,GAAqBP,YAAY,CAACO,MAF9D;AAGZF,QAAAA,QAAQ,EAAEF,WAAW,CAACI,MAAZ,KAAuBP,YAAY,CAACO;AAHlC,OAAd;AAKD,K;;uEACkB,UAACC,CAAD,EAAO;AACxB,YAAKF,QAAL,CAAc;AACZH,QAAAA,WAAW,EAAEK,CAAC,CAACC,MAAF,CAASC,OAAT,GAAmBV,YAAnB,GAAkC,EADnC;AAEZI,QAAAA,aAAa,EAAE,KAFH;AAGZC,QAAAA,QAAQ,EAAEG,CAAC,CAACC,MAAF,CAASC;AAHP,OAAd;AAKD,K;;;;;;;6BAEQ;AACP,aACE,MAAC,IAAD;AAAM,QAAA,SAAS,EAAC,SAAhB;AAA0B,QAAA,KAAK,EAAC;AAAhC,SACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,MAAC,QAAD;AACE,QAAA,aAAa,EAAE,KAAKC,KAAL,CAAWP,aAD5B;AAEE,QAAA,QAAQ,EAAE,KAAKQ,gBAFjB;AAGE,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWN;AAHtB,qBADF,CADF,EAUE,MAAC,aAAD;AAAe,QAAA,OAAO,EAAEL,YAAxB;AAAsC,QAAA,KAAK,EAAE,KAAKW,KAAL,CAAWR,WAAxD;AAAqE,QAAA,QAAQ,EAAE,KAAKU;AAApF,QAVF,CADF;AAcD;;;;EApCoBlB,S;;AAwCvB,eAAeO,QAAf","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Card, Checkbox} from \"antd\";\r\n\r\nconst CheckboxGroup = Checkbox.Group;\r\n\r\nconst plainOptions = ['Apple', 'Pear', 'Orange'];\r\nconst defaultCheckedList = ['Apple', 'Orange'];\r\n\r\n\r\nclass CheckAll extends Component {\r\n  state = {\r\n    checkedList: defaultCheckedList,\r\n    indeterminate: true,\r\n    checkAll: false,\r\n  };\r\n  onChange = (checkedList) => {\r\n    this.setState({\r\n      checkedList,\r\n      indeterminate: !!checkedList.length && (checkedList.length < plainOptions.length),\r\n      checkAll: checkedList.length === plainOptions.length,\r\n    });\r\n  }\r\n  onCheckAllChange = (e) => {\r\n    this.setState({\r\n      checkedList: e.target.checked ? plainOptions : [],\r\n      indeterminate: false,\r\n      checkAll: e.target.checked,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card className=\"gx-card\" title=\"CheckAll\">\r\n        <div className=\"gx-border-bottom gx-pb-3 gx-mb-3\">\r\n          <Checkbox\r\n            indeterminate={this.state.indeterminate}\r\n            onChange={this.onCheckAllChange}\r\n            checked={this.state.checkAll}\r\n          >\r\n            Check all\r\n          </Checkbox>\r\n        </div>\r\n        <CheckboxGroup options={plainOptions} value={this.state.checkedList} onChange={this.onChange}/>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default CheckAll;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}