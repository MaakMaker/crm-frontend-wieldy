{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { AutoComplete, Card } from \"antd\";\nvar dataSource = ['Burns Bay Road', 'Downing Street', 'Wall Street'];\n\nvar NonCaseSensitiveAutoComplete = function NonCaseSensitiveAutoComplete() {\n  return __jsx(Card, {\n    className: \"gx-card\",\n    title: \"Non CaseSensitive AutoComplete\"\n  }, __jsx(AutoComplete, {\n    style: {\n      width: 200\n    },\n    dataSource: dataSource,\n    placeholder: \"try to type `b`\",\n    filterOption: function filterOption(inputValue, option) {\n      return option.props.children.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1;\n    }\n  }));\n};\n\n_c = NonCaseSensitiveAutoComplete;\nexport default NonCaseSensitiveAutoComplete;\n\nvar _c;\n\n$RefreshReg$(_c, \"NonCaseSensitiveAutoComplete\");","map":{"version":3,"sources":["E:/frontend-projects/crm-frontend-wieldy/routes/components/dataEntry/AutoComplete/NonCaseSensitiveAutoComplete.js"],"names":["React","AutoComplete","Card","dataSource","NonCaseSensitiveAutoComplete","width","inputValue","option","props","children","toUpperCase","indexOf"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,YAAR,EAAsBC,IAAtB,QAAiC,MAAjC;AAEA,IAAMC,UAAU,GAAG,CAAC,gBAAD,EAAmB,gBAAnB,EAAqC,aAArC,CAAnB;;AAEA,IAAMC,4BAA4B,GAAG,SAA/BA,4BAA+B,GAAM;AACzC,SACE,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,SAAhB;AAA0B,IAAA,KAAK,EAAC;AAAhC,KACE,MAAC,YAAD;AACE,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR,KADT;AAEE,IAAA,UAAU,EAAEF,UAFd;AAGE,IAAA,WAAW,EAAC,iBAHd;AAIE,IAAA,YAAY,EAAE,sBAACG,UAAD,EAAaC,MAAb;AAAA,aAAwBA,MAAM,CAACC,KAAP,CAAaC,QAAb,CAAsBC,WAAtB,GAAoCC,OAApC,CAA4CL,UAAU,CAACI,WAAX,EAA5C,MAA0E,CAAC,CAAnG;AAAA;AAJhB,IADF,CADF;AAUD,CAXD;;KAAMN,4B;AAaN,eAAeA,4BAAf","sourcesContent":["import React from \"react\";\r\nimport {AutoComplete, Card} from \"antd\";\r\n\r\nconst dataSource = ['Burns Bay Road', 'Downing Street', 'Wall Street'];\r\n\r\nconst NonCaseSensitiveAutoComplete = () => {\r\n  return (\r\n    <Card className=\"gx-card\" title=\"Non CaseSensitive AutoComplete\">\r\n      <AutoComplete\r\n        style={{width: 200}}\r\n        dataSource={dataSource}\r\n        placeholder=\"try to type `b`\"\r\n        filterOption={(inputValue, option) => option.props.children.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default NonCaseSensitiveAutoComplete;\r\n"]},"metadata":{},"sourceType":"module"}