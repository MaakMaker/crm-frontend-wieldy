{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Head from 'next/head';\nimport withRedux from 'next-redux-wrapper';\nimport 'react-notifications/lib/notifications.css';\nimport 'antd/dist/antd.css';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport \"../public/vendors/style\";\nimport \"../styles/style.css\";\nimport \"../firebaseConfig/index\";\nimport initStore from '../redux/store';\nimport { Provider } from \"react-redux\";\n\nconst Page = ({\n  Component,\n  pageProps,\n  store\n}) => {\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Wieldy- Admin Dashboard\")), __jsx(React.Fragment, null, __jsx(Provider, {\n    store: store\n  }, __jsx(Component, pageProps))));\n};\n\nexport default withRedux(initStore)(Page);\n\nPage.getInitialProps = async ({\n  Component,\n  ctx\n}) => {\n  return {\n    pageProps: _objectSpread({}, Component.getInitialProps ? await Component.getInitialProps(ctx) : {})\n  };\n};","map":{"version":3,"sources":["E:/frontend-projects/crm-frontend-wieldy/pages/_app.js"],"names":["React","Head","withRedux","initStore","Provider","Page","Component","pageProps","store","getInitialProps","ctx"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAO,2CAAP;AACA,OAAO,oBAAP;AACA,OAAO,gCAAP;AACA,OAAO,sCAAP;AAEA,OAAO,yBAAP;AACA,OAAO,qBAAP;AACA,OAAO,yBAAP;AAEA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,SAAQC,QAAR,QAAuB,aAAvB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,SAAZ;AAAuBC,EAAAA;AAAvB,CAAD,KAAmC;AAE9C,SACE,4BACE,MAAC,IAAD,QACE,+CADF,CADF,EAIE,4BACE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEA;AAAjB,KACA,MAAC,SAAD,EAAeD,SAAf,CADA,CADF,CAJF,CADF;AAYD,CAdD;;AAgBA,eAAeL,SAAS,CAACC,SAAD,CAAT,CAAqBE,IAArB,CAAf;;AAEAA,IAAI,CAACI,eAAL,GAAuB,OAAO;AAACH,EAAAA,SAAD;AAAYI,EAAAA;AAAZ,CAAP,KAA4B;AAEjD,SAAO;AACLH,IAAAA,SAAS,oBACHD,SAAS,CAACG,eAAV,GACA,MAAMH,SAAS,CAACG,eAAV,CAA0BC,GAA1B,CADN,GAEA,EAHG;AADJ,GAAP;AAOD,CATD","sourcesContent":["import React from 'react';\r\nimport Head from 'next/head'\r\nimport withRedux from 'next-redux-wrapper';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport 'antd/dist/antd.css';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nimport \"../public/vendors/style\";\r\nimport \"../styles/style.css\"\r\nimport \"../firebaseConfig/index\"\r\n\r\nimport initStore from '../redux/store';\r\nimport {Provider} from \"react-redux\";\r\n\r\nconst Page = ({Component, pageProps, store}) => {\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>Wieldy- Admin Dashboard</title>\r\n      </Head>\r\n      <>\r\n        <Provider store={store}>\r\n        <Component {...pageProps} />\r\n        </Provider>\r\n      </>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRedux(initStore)(Page);\r\n\r\nPage.getInitialProps = async ({Component, ctx}) => {\r\n\r\n  return {\r\n    pageProps: {\r\n      ...(Component.getInitialProps\r\n        ? await Component.getInitialProps(ctx)\r\n        : {}),\r\n    },\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}