{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport { Avatar, Badge, Col, DatePicker, Input, Menu, Row } from \"antd\";\nimport Moment from \"moment\";\nimport CustomScrollbars from \"../../../../util/CustomScrollbars\";\nimport labels from \"../../../../routes/inbuiltApps/Todo/data/labels\";\nimport users from \"../../../../routes/inbuiltApps/Todo/data/users\";\nimport ConversationCell from \"./ConversationCell\";\nvar TextArea = Input.TextArea;\n\nvar ToDoDetail = /*#__PURE__*/function (_React$Component) {\n  _inherits(ToDoDetail, _React$Component);\n\n  var _super = _createSuper(ToDoDetail);\n\n  function ToDoDetail(props) {\n    var _this;\n\n    _classCallCheck(this, ToDoDetail);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleLabelClick\", function (event) {\n      _this.setState({\n        labelMenu: true,\n        anchorEl: event.currentTarget\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleUserClick\", function (event) {\n      _this.setState({\n        userMenu: true,\n        anchorEl: event.currentTarget\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleRequestClose\", function () {\n      _this.setState({\n        userMenu: false,\n        labelMenu: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleKeyPress\", function (e) {\n      if (e.key === 'Enter') {\n        _this.submitComment();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleEditTitle\", function () {\n      if (_this.state.editTitle) {\n        var todo = _this.state.todo;\n        todo.title = _this.state.title;\n\n        _this.props.onToDoUpdate(todo);\n      }\n\n      _this.setState({\n        editTitle: !_this.state.editTitle\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleEditNote\", function () {\n      if (_this.state.note) {\n        var todo = _this.state.todo;\n        todo.note = _this.state.note;\n\n        _this.props.onToDoUpdate(todo);\n      }\n\n      _this.setState({\n        editNote: !_this.state.editNote\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDueDateChange\", function (date) {\n      _this.setState({\n        todo: _objectSpread(_objectSpread({}, _this.state.todo), {}, {\n          dueDate: date\n        })\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"optionMenu\", function () {\n      return __jsx(Menu, {\n        id: \"label-menu\",\n        onClick: _this.handleRequestClose,\n        onClose: _this.handleRequestClose\n      }, users.map(function (user, index) {\n        return __jsx(Menu.Item, {\n          key: index,\n          value: user.id\n        }, __jsx(\"div\", {\n          className: \"gx-d-flex gx-user-name gx-align-items-center\"\n        }, __jsx(Avatar, {\n          src: user.thumb,\n          alt: user.name\n        }), __jsx(\"h4\", null, user.name)));\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"labelMenu\", function () {\n      return __jsx(Menu, {\n        id: \"label-menu\",\n        onClick: _this.handleRequestClose()\n      }, labels.map(function (label) {\n        return __jsx(Menu.Item, {\n          key: label.id\n        }, label.title);\n      }));\n    });\n\n    var _props$todo = props.todo,\n        title = _props$todo.title,\n        notes = _props$todo.notes;\n    var conversation = props.conversation;\n    _this.state = {\n      todo: props.todo,\n      title: title,\n      notes: notes,\n      anchorEl: undefined,\n      userMenu: false,\n      labelMenu: false,\n      editTitle: false,\n      editNote: false,\n      message: '',\n      conversation: conversation\n    };\n    _this.handleRequestClose = _this.handleRequestClose.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ToDoDetail, [{\n    key: \"submitComment\",\n    value: function submitComment() {\n      if (this.state.message !== '') {\n        var updatedConversation = this.state.conversation.concat({\n          'name': this.props.user.name,\n          'thumb': this.props.user.avatar,\n          'message': this.state.message,\n          'sentAt': Moment().format('ddd DD, YYYY, hh:mm:ss A')\n        });\n        this.setState({\n          conversation: updatedConversation,\n          message: ''\n        });\n      }\n    }\n  }, {\n    key: \"updateMessageValue\",\n    value: function updateMessageValue(evt) {\n      this.setState({\n        message: evt.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          onToDoUpdate = _this$props.onToDoUpdate,\n          onDeleteToDo = _this$props.onDeleteToDo;\n      var _this$state = this.state,\n          todo = _this$state.todo,\n          editNote = _this$state.editNote,\n          editTitle = _this$state.editTitle,\n          title = _this$state.title,\n          notes = _this$state.notes,\n          message = _this$state.message,\n          conversation = _this$state.conversation;\n      var user = null;\n      if (todo.user > 0) user = users.find(function (user) {\n        return user.id === todo.user;\n      });\n      return __jsx(\"div\", {\n        className: \"gx-module-detail gx-module-list\"\n      }, __jsx(CustomScrollbars, {\n        className: \"gx-todo-detail-content-scroll\"\n      }, __jsx(\"div\", {\n        className: \"gx-module-detail-item gx-module-detail-header\"\n      }, __jsx(Row, null, __jsx(Col, {\n        xs: 24,\n        sm: 12,\n        md: 17,\n        lg: 12,\n        xl: 17\n      }, __jsx(\"div\", {\n        className: \"gx-flex-row\"\n      }, __jsx(\"div\", {\n        className: \"gx-user-name gx-mr-md-4 gx-mr-2 gx-my-1\",\n        onClick: this.handleUserClick\n      }, user === null ? __jsx(\"h4\", {\n        className: \"gx-mb-0 gx-pointer\"\n      }, \"Assign User \") : __jsx(\"div\", {\n        className: \"gx-flex-row gx-align-items-center gx-pointer\"\n      }, __jsx(Avatar, {\n        className: \"gx-mr-2\",\n        src: user.thumb,\n        alt: user.name\n      }), __jsx(\"h4\", {\n        className: \"gx-mb-0\"\n      }, user.name))), __jsx(DatePicker, {\n        className: \"gx-module-date gx-my-1\",\n        defaultValue: todo.dueDate !== null ? Moment(todo.dueDate, 'dddd, MMMM DD, YYYY h:mm a') : undefined,\n        invalidLabel: \"Due Date\",\n        format: \"MMMM DD, YYYY\",\n        onChange: this.handleDueDateChange.bind(this),\n        animateYearScrolling: false\n      }))), __jsx(Col, {\n        xs: 24,\n        sm: 12,\n        md: 7,\n        lg: 12,\n        xl: 7\n      }, __jsx(\"div\", {\n        className: \"gx-flex-row gx-justify-content-between\"\n      }, __jsx(\"i\", {\n        className: \"gx-icon-btn icon icon-trash\",\n        onClick: function onClick() {\n          onDeleteToDo(todo);\n        }\n      }), __jsx(\"span\", {\n        className: \"gx-d-block\",\n        onClick: function onClick() {\n          todo.starred = !todo.starred;\n          onToDoUpdate(todo);\n        }\n      }, todo.starred ? __jsx(\"i\", {\n        className: \"gx-icon-btn icon icon-star\"\n      }) : __jsx(\"i\", {\n        className: \"gx-icon-btn icon icon-star-o\"\n      })), __jsx(\"span\", {\n        className: \"gx-d-block\",\n        onClick: function onClick() {\n          todo.important = !todo.important;\n          onToDoUpdate(todo);\n        }\n      }, todo.important ? __jsx(\"i\", {\n        className: \"gx-icon-btn icon icon-important\"\n      }) : __jsx(\"i\", {\n        className: \"gx-icon-btn icon icon-important-o\"\n      })), __jsx(\"span\", {\n        className: \"gx-d-block\",\n        onClick: this.handleLabelClick\n      }, __jsx(\"i\", {\n        className: \"gx-icon-btn icon icon-tag\"\n      })))))), __jsx(\"div\", {\n        className: \"gx-module-detail-item\"\n      }, __jsx(\"div\", {\n        className: \"gx-mb-md-4 gx-mb-2\"\n      }, labels.map(function (label, index) {\n        return todo.labels.includes(label.id) && __jsx(Badge, {\n          key: index,\n          count: label.title,\n          style: {\n            backgroundColor: label.color\n          }\n        });\n      })), __jsx(\"div\", {\n        className: \"gx-form-group gx-flex-row gx-align-items-center gx-mb-0 gx-flex-nowrap\"\n      }, __jsx(\"div\", {\n        onClick: function onClick(event) {\n          todo.completed = !todo.completed;\n          onToDoUpdate(todo);\n        }\n      }, todo.completed ? __jsx(\"span\", {\n        className: \"gx-border-2 gx-size-30 gx-rounded-circle gx-text-green gx-border-green gx-d-block gx-text-center gx-pointer\"\n      }, __jsx(\"i\", {\n        className: \"icon icon-check\"\n      })) : __jsx(\"span\", {\n        className: \"gx-border-2 gx-size-30 gx-rounded-circle gx-text-muted gx-border-grey gx-d-block gx-text-center gx-pointer\"\n      }, __jsx(\"i\", {\n        className: \"icon icon-check\"\n      }))), editTitle ? __jsx(\"div\", {\n        className: \"gx-flex-row gx-align-items-center gx-justify-content-between gx-flex-1 gx-flex-nowrap\"\n      }, __jsx(\"div\", {\n        className: \"gx-col\"\n      }, __jsx(Input, {\n        fullWidth: true,\n        className: \"gx-task-title\",\n        id: \"required\",\n        placeholder: \"Title\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            title: event.target.value\n          });\n        },\n        defaultValue: title\n      })), __jsx(\"span\", {\n        className: \"gx-d-block gx-size-40 gx-text-center gx-pointer\",\n        onClick: this.handleEditTitle\n      }, __jsx(\"i\", {\n        className: \"gx-icon-btn icon icon-edit\"\n      }))) : __jsx(\"div\", {\n        className: \"gx-flex-row gx-align-items-center gx-justify-content-between gx-flex-1 gx-flex-nowrap\"\n      }, __jsx(\"div\", {\n        className: \"gx-task-title gx-col\"\n      }, title), __jsx(\"span\", {\n        className: \"gx-d-block gx-size-40 gx-text-center gx-pointer\",\n        onClick: this.handleEditTitle\n      }, __jsx(\"i\", {\n        className: \"gx-icon-btn icon icon-edit\"\n      }))))), __jsx(\"div\", {\n        className: \"gx-module-detail-item gx-mb-md-4 gx-mb-2\"\n      }, editNote ? __jsx(\"div\", {\n        className: \"gx-flex-row gx-align-items-center gx-justify-content-between gx-flex-1 gx-flex-nowrap\"\n      }, __jsx(\"div\", {\n        className: \"gx-task-input gx-col\"\n      }, __jsx(Input, {\n        fullWidth: true,\n        id: \"required\",\n        placeholder: \"Note\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            notes: event.target.value\n          });\n        },\n        defaultValue: notes\n      })), __jsx(\"span\", {\n        className: \"gx-d-block gx-size-40 gx-text-center gx-pointer\",\n        onClick: this.handleEditNote\n      }, __jsx(\"i\", {\n        className: \"gx-icon-btn icon icon-edit\"\n      }))) : __jsx(\"div\", {\n        className: \"gx-flex-row gx-align-items-center gx-justify-content-between gx-flex-1 gx-flex-nowrap\"\n      }, __jsx(\"div\", {\n        className: \"gx-task-des gx-col\"\n      }, notes === '' ? 'Add note here' : notes), __jsx(\"span\", {\n        className: \"gx-d-block gx-size-40 gx-text-center gx-pointer\",\n        onClick: this.handleEditNote\n      }, __jsx(\"i\", {\n        className: \"gx-icon-btn icon icon-edit\"\n      })))), __jsx(\"div\", {\n        className: \"gx-module-detail-item\"\n      }, __jsx(\"h3\", {\n        className: \"gx-mb-0 gx-mb-sm-1\"\n      }, \"Comments\")), conversation.map(function (conversation, index) {\n        return __jsx(ConversationCell, {\n          key: index,\n          conversation: conversation\n        });\n      })), __jsx(\"div\", {\n        className: \"gx-chat-main-footer gx-todo-main-footer\"\n      }, __jsx(\"div\", {\n        className: \"gx-flex-row gx-align-items-center\"\n      }, __jsx(\"div\", {\n        className: \"gx-col\"\n      }, __jsx(\"div\", {\n        className: \"gx-form-group\"\n      }, __jsx(TextArea, {\n        className: \"gx-border-0 ant-input gx-chat-textarea\",\n        id: \"required\",\n        onKeyUp: this._handleKeyPress.bind(this),\n        onChange: this.updateMessageValue.bind(this),\n        value: message,\n        rows: 2,\n        placeholder: \"Type and hit enter to send message\"\n      }))), __jsx(\"div\", {\n        className: \"gx-chat-sent\",\n        onClick: this.submitComment.bind(this),\n        \"aria-label\": \"Send message\"\n      }, __jsx(\"i\", {\n        className: \"gx-icon-btn icon icon-sent\"\n      })))));\n    }\n  }]);\n\n  return ToDoDetail;\n}(React.Component);\n\nexport default ToDoDetail;","map":{"version":3,"sources":["E:/frontend-projects/crm-frontend-wieldy/app/components/todo/ToDoDetail/index.js"],"names":["React","Avatar","Badge","Col","DatePicker","Input","Menu","Row","Moment","CustomScrollbars","labels","users","ConversationCell","TextArea","ToDoDetail","props","event","setState","labelMenu","anchorEl","currentTarget","userMenu","e","key","submitComment","state","editTitle","todo","title","onToDoUpdate","note","editNote","date","dueDate","target","name","value","handleRequestClose","map","user","index","id","thumb","label","notes","conversation","undefined","message","bind","updatedConversation","concat","avatar","format","evt","onDeleteToDo","find","handleUserClick","handleDueDateChange","starred","important","handleLabelClick","includes","backgroundColor","color","completed","handleEditTitle","handleEditNote","_handleKeyPress","updateMessageValue","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Avatar, Badge, Col, DatePicker, Input, Menu, Row} from \"antd\";\r\nimport Moment from \"moment\";\r\nimport CustomScrollbars from \"../../../../util/CustomScrollbars\";\r\n\r\nimport labels from \"../../../../routes/inbuiltApps/Todo/data/labels\";\r\nimport users from \"../../../../routes/inbuiltApps/Todo/data/users\";\r\nimport ConversationCell from \"./ConversationCell\";\r\n\r\nconst {TextArea} = Input;\r\n\r\nclass ToDoDetail extends React.Component {\r\n  handleLabelClick = event => {\r\n    this.setState({labelMenu: true, anchorEl: event.currentTarget});\r\n  };\r\n  handleUserClick = event => {\r\n    this.setState({userMenu: true, anchorEl: event.currentTarget});\r\n  };\r\n  handleRequestClose = () => {\r\n    this.setState({userMenu: false, labelMenu: false});\r\n  };\r\n  _handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      this.submitComment();\r\n    }\r\n  };\r\n  handleEditTitle = () => {\r\n    if (this.state.editTitle) {\r\n      const todo = this.state.todo;\r\n      todo.title = this.state.title;\r\n      this.props.onToDoUpdate(todo)\r\n    }\r\n    this.setState({\r\n      editTitle: !this.state.editTitle\r\n    });\r\n  };\r\n  handleEditNote = () => {\r\n    if (this.state.note) {\r\n      const todo = this.state.todo;\r\n      todo.note = this.state.note;\r\n      this.props.onToDoUpdate(todo)\r\n    }\r\n    this.setState({\r\n      editNote: !this.state.editNote\r\n    });\r\n  };\r\n  handleDueDateChange = (date) => {\r\n    this.setState({\r\n      todo: {...this.state.todo, dueDate: date}\r\n    });\r\n  };\r\n  handleChange = event => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n  optionMenu = () => {\r\n    return (<Menu\r\n      id=\"label-menu\" onClick={this.handleRequestClose}\r\n      onClose={this.handleRequestClose}>\r\n      {users.map((user, index) =>\r\n        <Menu.Item key={index} value={user.id}>\r\n          <div className=\"gx-d-flex gx-user-name gx-align-items-center\">\r\n            <Avatar src={user.thumb} alt={user.name}/><h4>{user.name}</h4>\r\n          </div>\r\n        </Menu.Item>\r\n      )}\r\n\r\n    </Menu>)\r\n  };\r\n  labelMenu = () => {\r\n    return (<Menu id=\"label-menu\" onClick={this.handleRequestClose()}>\r\n      {labels.map(label =>\r\n        <Menu.Item key={label.id}>\r\n          {label.title}\r\n        </Menu.Item>,\r\n      )}\r\n    </Menu>)\r\n\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const {title, notes} = props.todo;\r\n    const {conversation} = props;\r\n    this.state = {\r\n      todo: props.todo,\r\n      title,\r\n      notes,\r\n      anchorEl: undefined,\r\n      userMenu: false,\r\n      labelMenu: false,\r\n      editTitle: false,\r\n      editNote: false,\r\n      message: '',\r\n      conversation\r\n    };\r\n    this.handleRequestClose = this.handleRequestClose.bind(this)\r\n  }\r\n\r\n  submitComment() {\r\n    if (this.state.message !== '') {\r\n      const updatedConversation = this.state.conversation.concat({\r\n        'name': this.props.user.name,\r\n        'thumb': this.props.user.avatar,\r\n        'message': this.state.message,\r\n        'sentAt': Moment().format('ddd DD, YYYY, hh:mm:ss A'),\r\n      });\r\n      this.setState({\r\n        conversation: updatedConversation,\r\n        message: '',\r\n      });\r\n    }\r\n  }\r\n\r\n  updateMessageValue(evt) {\r\n    this.setState({\r\n      message: evt.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {onToDoUpdate, onDeleteToDo} = this.props;\r\n    const {todo, editNote, editTitle, title, notes, message, conversation} = this.state;\r\n    let user = null;\r\n    if (todo.user > 0)\r\n      user = users.find((user) => user.id === todo.user);\r\n\r\n    return (\r\n      <div className=\"gx-module-detail gx-module-list\">\r\n        <CustomScrollbars className=\"gx-todo-detail-content-scroll\">\r\n          <div className=\"gx-module-detail-item gx-module-detail-header\">\r\n            <Row>\r\n              <Col xs={24} sm={12} md={17} lg={12} xl={17}>\r\n                <div className=\"gx-flex-row\">\r\n                  <div className=\"gx-user-name gx-mr-md-4 gx-mr-2 gx-my-1\"\r\n                       onClick={this.handleUserClick}>\r\n\r\n                    {user === null ? <h4 className=\"gx-mb-0 gx-pointer\">Assign User </h4> :\r\n                      <div className=\"gx-flex-row gx-align-items-center gx-pointer\">\r\n                        <Avatar className=\"gx-mr-2\" src={user.thumb} alt={user.name}/>\r\n                        <h4 className=\"gx-mb-0\">{user.name}</h4>\r\n                      </div>}\r\n                  </div>\r\n                  <DatePicker className=\"gx-module-date gx-my-1\"\r\n                              defaultValue={todo.dueDate !== null ? Moment(todo.dueDate, 'dddd, MMMM DD, YYYY h:mm a') : undefined}\r\n                              invalidLabel=\"Due Date\"\r\n                              format=\"MMMM DD, YYYY\"\r\n                              onChange={this.handleDueDateChange.bind(this)}\r\n                              animateYearScrolling={false}/>\r\n\r\n\r\n                </div>\r\n              </Col>\r\n\r\n              <Col xs={24} sm={12} md={7} lg={12} xl={7}>\r\n                <div className=\"gx-flex-row gx-justify-content-between\">\r\n                  <i className=\"gx-icon-btn icon icon-trash\" onClick={() => {\r\n                    onDeleteToDo(todo);\r\n                  }}/>\r\n\r\n                  <span className=\"gx-d-block\" onClick={() => {\r\n                    todo.starred = !todo.starred;\r\n                    onToDoUpdate(todo);\r\n                  }}>\r\n                        {todo.starred ?\r\n                          <i className=\"gx-icon-btn icon icon-star\"/> :\r\n                          <i className=\"gx-icon-btn icon icon-star-o\"/>\r\n                        }\r\n\r\n                  </span>\r\n\r\n                  <span className=\"gx-d-block\" onClick={() => {\r\n                    todo.important = !todo.important;\r\n                    onToDoUpdate(todo);\r\n                  }}>\r\n                        {todo.important ?\r\n                          <i className=\"gx-icon-btn icon icon-important\"/> :\r\n                          <i className=\"gx-icon-btn icon icon-important-o\"/>\r\n                        }\r\n\r\n                  </span>\r\n                  <span className=\"gx-d-block\" onClick={this.handleLabelClick}>\r\n                          <i className=\"gx-icon-btn icon icon-tag\"/>\r\n                  </span>\r\n\r\n\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n\r\n          <div className=\"gx-module-detail-item\">\r\n\r\n            <div className=\"gx-mb-md-4 gx-mb-2\">\r\n              {labels.map((label, index) => {\r\n                return (todo.labels).includes(label.id) &&\r\n                  <Badge key={index} count={label.title} style={{backgroundColor: label.color}}/>\r\n              })}\r\n            </div>\r\n\r\n            <div className=\"gx-form-group gx-flex-row gx-align-items-center gx-mb-0 gx-flex-nowrap\">\r\n              <div onClick={(event) => {\r\n                todo.completed = !todo.completed;\r\n                onToDoUpdate(todo);\r\n              }}>\r\n                {todo.completed ?\r\n                  <span\r\n                    className=\"gx-border-2 gx-size-30 gx-rounded-circle gx-text-green gx-border-green gx-d-block gx-text-center gx-pointer\">\r\n                                        <i className=\"icon icon-check\"/></span>\r\n                  : <span\r\n                    className=\"gx-border-2 gx-size-30 gx-rounded-circle gx-text-muted gx-border-grey gx-d-block gx-text-center gx-pointer\">\r\n                                        <i className=\"icon icon-check\"/>\r\n                                    </span>\r\n                }\r\n              </div>\r\n              {editTitle ?\r\n                <div className=\"gx-flex-row gx-align-items-center gx-justify-content-between gx-flex-1 gx-flex-nowrap\">\r\n                  <div className=\"gx-col\">\r\n                    <Input\r\n                      fullWidth\r\n                      className=\"gx-task-title\"\r\n                      id=\"required\"\r\n                      placeholder=\"Title\"\r\n                      onChange={(event) => this.setState({title: event.target.value})}\r\n                      defaultValue={title}/>\r\n                  </div>\r\n\r\n                  <span className=\"gx-d-block gx-size-40 gx-text-center gx-pointer\"\r\n                        onClick={this.handleEditTitle}>\r\n                    <i className=\"gx-icon-btn icon icon-edit\"/>\r\n                  </span>\r\n                </div> :\r\n                <div className=\"gx-flex-row gx-align-items-center gx-justify-content-between gx-flex-1 gx-flex-nowrap\">\r\n                  <div className=\"gx-task-title gx-col\">\r\n                    {title}\r\n                  </div>\r\n                  <span className=\"gx-d-block gx-size-40 gx-text-center gx-pointer\"\r\n                        onClick={this.handleEditTitle}>\r\n                    <i className=\"gx-icon-btn icon icon-edit\"/>\r\n                  </span>\r\n\r\n                </div>}\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <div className=\"gx-module-detail-item gx-mb-md-4 gx-mb-2\">\r\n            {editNote ?\r\n              <div className=\"gx-flex-row gx-align-items-center gx-justify-content-between gx-flex-1 gx-flex-nowrap\">\r\n                <div className=\"gx-task-input gx-col\">\r\n                  <Input\r\n                    fullWidth\r\n                    id=\"required\"\r\n                    placeholder=\"Note\"\r\n                    onChange={(event) => this.setState({notes: event.target.value})}\r\n                    defaultValue={notes}/>\r\n                </div>\r\n\r\n                <span className=\"gx-d-block gx-size-40 gx-text-center gx-pointer\" onClick={this.handleEditNote}>\r\n                    <i className=\"gx-icon-btn icon icon-edit\"/>\r\n                </span>\r\n              </div> :\r\n              <div className=\"gx-flex-row gx-align-items-center gx-justify-content-between gx-flex-1 gx-flex-nowrap\">\r\n                <div className=\"gx-task-des gx-col\">\r\n                  {notes === '' ? 'Add note here' : notes}\r\n                </div>\r\n                <span className=\"gx-d-block gx-size-40 gx-text-center gx-pointer\"\r\n                      onClick={this.handleEditNote}>\r\n                  <i className=\"gx-icon-btn icon icon-edit\"/>\r\n                </span>\r\n\r\n              </div>}\r\n          </div>\r\n          <div className=\"gx-module-detail-item\">\r\n            <h3 className=\"gx-mb-0 gx-mb-sm-1\">Comments</h3>\r\n          </div>\r\n          {conversation.map((conversation, index) =>\r\n            <ConversationCell key={index} conversation={conversation}/>\r\n          )}\r\n\r\n        </CustomScrollbars>\r\n\r\n\r\n        <div className=\"gx-chat-main-footer gx-todo-main-footer\">\r\n          <div className=\"gx-flex-row gx-align-items-center\">\r\n            <div className=\"gx-col\">\r\n              <div className=\"gx-form-group\">\r\n                <TextArea className=\"gx-border-0 ant-input gx-chat-textarea\"\r\n                          id=\"required\"\r\n                          onKeyUp={this._handleKeyPress.bind(this)}\r\n                          onChange={this.updateMessageValue.bind(this)}\r\n                          value={message}\r\n                          rows={2}\r\n                          placeholder=\"Type and hit enter to send message\"/>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"gx-chat-sent\"\r\n                 onClick={this.submitComment.bind(this)}\r\n                 aria-label=\"Send message\">\r\n              <i className=\"gx-icon-btn icon icon-sent\"/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToDoDetail;\r\n"]},"metadata":{},"sourceType":"module"}