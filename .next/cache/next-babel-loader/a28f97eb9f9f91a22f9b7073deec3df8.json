{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { Button, Checkbox, Form, Input } from \"antd\";\nimport Link from \"next/link\";\nimport UserOutlined from \"@ant-design/icons/lib/icons/UserOutlined\";\nimport LockOutlined from \"@ant-design/icons/lib/icons/LockOutlined\";\nimport GoogleOutlined from \"@ant-design/icons/lib/icons/GoogleOutlined\";\nimport FacebookOutlined from \"@ant-design/icons/lib/icons/FacebookOutlined\";\nimport GithubOutlined from \"@ant-design/icons/lib/icons/GithubOutlined\";\nimport TwitterOutlined from \"@ant-design/icons/lib/icons/TwitterOutlined\";\nimport { useDispatch } from \"react-redux\";\nimport { showAuthLoader, userFacebookSignIn, userGithubSignIn, userGoogleSignIn, userSignIn, userTwitterSignIn } from \"../../../../redux/actions/Auth\";\nconst FormItem = Form.Item;\n\nconst SignUP = () => {\n  const dispatch = useDispatch();\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  const onFinish = values => {\n    console.log(\"finish\", values);\n    dispatch(showAuthLoader());\n    dispatch(userSignIn(values));\n  };\n\n  return __jsx(\"div\", {\n    className: \"gx-login-container\"\n  }, __jsx(\"div\", {\n    className: \"gx-login-content\"\n  }, __jsx(\"div\", {\n    className: \"gx-login-header gx-text-center\"\n  }, __jsx(\"h1\", {\n    className: \"gx-login-title\"\n  }, \"Sign Up\")), __jsx(Form, {\n    initialValues: {\n      remember: true\n    },\n    name: \"basic\",\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    className: \"gx-signin-form gx-form-row0\"\n  }, __jsx(FormItem, {\n    rules: [{\n      required: true,\n      message: 'Please input your username!\\'}'\n    }],\n    name: \"uaername\"\n  }, __jsx(Input, {\n    prefix: __jsx(UserOutlined, {\n      style: {\n        color: 'rgba(0,0,0,.25)'\n      }\n    }),\n    placeholder: \"Username\"\n  })), __jsx(FormItem, {\n    rules: [{\n      required: true,\n      message: 'Please input your E-mail!'\n    }],\n    name: \"email\"\n  }, __jsx(Input, {\n    prefix: __jsx(UserOutlined, {\n      style: {\n        color: 'rgba(0,0,0,.25)'\n      }\n    }),\n    placeholder: \"Email\"\n  })), __jsx(FormItem, {\n    rules: [{\n      required: true,\n      message: 'Please input your Password!'\n    }],\n    name: \"password\"\n  }, __jsx(Input, {\n    prefix: __jsx(LockOutlined, {\n      style: {\n        color: 'rgba(0,0,0,.25)'\n      }\n    }),\n    type: \"password\",\n    placeholder: \"Password\"\n  })), __jsx(FormItem, {\n    rules: [{\n      required: true,\n      message: 'Please input your Password!'\n    }],\n    name: \"confirm-password\"\n  }, __jsx(Input, {\n    prefix: __jsx(LockOutlined, {\n      style: {\n        color: 'rgba(0,0,0,.25)'\n      }\n    }),\n    type: \"password\",\n    placeholder: \"Confirm Password\"\n  })), __jsx(FormItem, {\n    name: \"remember\",\n    valuePropName: \"checked\"\n  }, __jsx(Checkbox, null, \"Remember me\"), __jsx(Link, {\n    href: \"/custom-views/user-auth/forgot-password\"\n  }, __jsx(\"span\", {\n    className: \"gx-login-form-forgot\"\n  }, \"Forgot password\"))), __jsx(FormItem, {\n    className: \"gx-text-center\"\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\"\n  }, \"Sign Up\"))), __jsx(\"div\", {\n    className: \"gx-flex-row\"\n  }, __jsx(\"span\", {\n    className: \"gx-mb-2 gx-mr-3\"\n  }, \"or Sign up using: \"), __jsx(\"ul\", {\n    className: \"gx-social-link\"\n  }, __jsx(\"li\", null, __jsx(GoogleOutlined, {\n    onClick: () => {\n      dispatch(showAuthLoader());\n      dispatch(userGoogleSignIn());\n    }\n  })), __jsx(\"li\", null, __jsx(FacebookOutlined, {\n    onClick: () => {\n      dispatch(showAuthLoader());\n      dispatch(userFacebookSignIn());\n    }\n  })), __jsx(\"li\", null, __jsx(GithubOutlined, {\n    onClick: () => {\n      dispatch(showAuthLoader());\n      dispatch(userGithubSignIn());\n    }\n  })), __jsx(\"li\", null, __jsx(TwitterOutlined, {\n    onClick: () => {\n      dispatch(showAuthLoader());\n      dispatch(userTwitterSignIn());\n    }\n  }))))));\n};\n\nexport default SignUP;","map":{"version":3,"sources":["E:/frontend-projects/crm-frontend-wieldy/routes/customViews/userAuth/SignUp/index.js"],"names":["React","Button","Checkbox","Form","Input","Link","UserOutlined","LockOutlined","GoogleOutlined","FacebookOutlined","GithubOutlined","TwitterOutlined","useDispatch","showAuthLoader","userFacebookSignIn","userGithubSignIn","userGoogleSignIn","userSignIn","userTwitterSignIn","FormItem","Item","SignUP","dispatch","onFinishFailed","errorInfo","console","log","onFinish","values","remember","required","message","color"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Button, Checkbox, Form, Input} from \"antd\";\r\nimport Link from \"next/link\";\r\nimport UserOutlined from \"@ant-design/icons/lib/icons/UserOutlined\";\r\nimport LockOutlined from \"@ant-design/icons/lib/icons/LockOutlined\";\r\nimport GoogleOutlined from \"@ant-design/icons/lib/icons/GoogleOutlined\";\r\nimport FacebookOutlined from \"@ant-design/icons/lib/icons/FacebookOutlined\";\r\nimport GithubOutlined from \"@ant-design/icons/lib/icons/GithubOutlined\";\r\nimport TwitterOutlined from \"@ant-design/icons/lib/icons/TwitterOutlined\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {\r\n  showAuthLoader,\r\n  userFacebookSignIn,\r\n  userGithubSignIn,\r\n  userGoogleSignIn,\r\n  userSignIn,\r\n  userTwitterSignIn\r\n} from \"../../../../redux/actions/Auth\";\r\n\r\nconst FormItem = Form.Item;\r\n\r\nconst SignUP = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onFinishFailed = errorInfo => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  const onFinish = values => {\r\n    console.log(\"finish\", values)\r\n    dispatch(showAuthLoader());\r\n    dispatch(userSignIn(values));\r\n  };\r\n\r\n  return (\r\n    <div className=\"gx-login-container\">\r\n      <div className=\"gx-login-content\">\r\n        <div className=\"gx-login-header gx-text-center\">\r\n          <h1 className=\"gx-login-title\">Sign Up</h1>\r\n        </div>\r\n        <Form\r\n          initialValues={{remember: true}}\r\n          name=\"basic\"\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          className=\"gx-signin-form gx-form-row0\">\r\n\r\n          <FormItem rules={[{required: true, message: 'Please input your username!\\'}'}]} name=\"uaername\">\r\n\r\n            <Input prefix={<UserOutlined style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                   placeholder=\"Username\"/>\r\n          </FormItem>\r\n          <FormItem rules={[{required: true, message: 'Please input your E-mail!'}]} name=\"email\">\r\n\r\n            <Input prefix={<UserOutlined style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                   placeholder=\"Email\"/>\r\n          </FormItem>\r\n          <FormItem rules={[{required: true, message: 'Please input your Password!'}]} name=\"password\">\r\n\r\n            <Input prefix={<LockOutlined style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                   type=\"password\"\r\n                   placeholder=\"Password\"/>\r\n          </FormItem>\r\n\r\n          <FormItem rules={[{required: true, message: 'Please input your Password!'}]} name=\"confirm-password\">\r\n            <Input prefix={<LockOutlined style={{color: 'rgba(0,0,0,.25)'}}/>} type=\"password\"\r\n                   placeholder=\"Confirm Password\"/>\r\n          </FormItem>\r\n\r\n          <FormItem name=\"remember\" valuePropName=\"checked\">\r\n            <Checkbox>Remember me</Checkbox>\r\n            <Link  href=\"/custom-views/user-auth/forgot-password\"><span className=\"gx-login-form-forgot\">Forgot password</span></Link>\r\n          </FormItem>\r\n          <FormItem className=\"gx-text-center\">\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Sign Up\r\n            </Button>\r\n          </FormItem>\r\n        </Form>\r\n        <div className=\"gx-flex-row\">\r\n          <span className=\"gx-mb-2 gx-mr-3\">or Sign up using: </span>\r\n          <ul className=\"gx-social-link\">\r\n            <li>\r\n              <GoogleOutlined onClick={() => {\r\n                dispatch(showAuthLoader());\r\n                dispatch(userGoogleSignIn());\r\n              }}/>\r\n            </li>\r\n            <li>\r\n              <FacebookOutlined onClick={() => {\r\n                dispatch(showAuthLoader());\r\n                dispatch(userFacebookSignIn());\r\n              }}/>\r\n            </li>\r\n            <li>\r\n              <GithubOutlined onClick={() => {\r\n                dispatch(showAuthLoader());\r\n                dispatch(userGithubSignIn());\r\n              }}/>\r\n            </li>\r\n            <li>\r\n              <TwitterOutlined onClick={() => {\r\n                dispatch(showAuthLoader());\r\n                dispatch(userTwitterSignIn());\r\n              }}/>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUP;\r\n"]},"metadata":{},"sourceType":"module"}