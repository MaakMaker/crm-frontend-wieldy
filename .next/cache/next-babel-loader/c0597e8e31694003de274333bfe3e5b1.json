{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Card, Checkbox, Form, Input, message } from \"antd\";\nimport { LockOutlined, UserOutlined } from '@ant-design/icons';\nimport { hideMessage, showAuthLoader, userFacebookSignIn, userGithubSignIn, userGoogleSignIn, userSignIn, userTwitterSignIn } from \"../../../../redux/actions/Auth\";\nimport \"./horizontalLoginForm.css\";\nimport CircularProgress from \"../../../../app/components/CircularProgress/index\";\nvar FormItem = Form.Item;\n\nvar HorizontalLoginForm = /*#__PURE__*/function (_Component) {\n  _inherits(HorizontalLoginForm, _Component);\n\n  var _super = _createSuper(HorizontalLoginForm);\n\n  function HorizontalLoginForm() {\n    var _this;\n\n    _classCallCheck(this, HorizontalLoginForm);\n\n    _this = _super.call(this);\n    _this.state = {\n      email: 'demo@example.com',\n      password: 'demo#123'\n    };\n    return _this;\n  }\n\n  _createClass(HorizontalLoginForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          showMessage = _this$props.showMessage,\n          loader = _this$props.loader,\n          alertMessage = _this$props.alertMessage;\n      return __jsx(Card, {\n        className: \"gx-card\",\n        title: \"Horizontal Login Form\"\n      }, __jsx(Form, {\n        initialValues: {\n          remember: true\n        },\n        name: \"basic\",\n        onFinish: this.onFinish,\n        onFinishFailed: this.onFinishFailed,\n        className: \"gx-login-form gx-form-row0\"\n      }, __jsx(FormItem, {\n        rules: [{\n          required: true,\n          message: 'Please input your E-mail!'\n        }],\n        name: \"email\",\n        initialValue: \"demo@example.com\"\n      }, __jsx(Input, {\n        prefix: __jsx(UserOutlined, {\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          }\n        }),\n        placeholder: \"Email\"\n      })), __jsx(FormItem, {\n        rules: [{\n          required: true,\n          message: 'Please input your Password!'\n        }],\n        name: \"password\",\n        initialValue: \"demo#123\"\n      }, __jsx(Input, {\n        prefix: __jsx(LockOutlined, {\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          }\n        }),\n        type: \"password\",\n        placeholder: \"Password\"\n      })), __jsx(FormItem, {\n        name: \"remember\",\n        valuePropName: \"checked\"\n      }, __jsx(\"span\", {\n        className: \"gx-d-block gx-mb-2\"\n      }, __jsx(Checkbox, null, \"Remember me\"), __jsx(\"span\", {\n        className: \"gx-link login-form-forgot\"\n      }, \"Forgot password\")), __jsx(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        className: \"login-form-button gx-mt-1\"\n      }, \"Log in\"), __jsx(\"span\", {\n        className: \"gx-d-block gx-mt-2\"\n      }, \"Or \", __jsx(\"span\", {\n        className: \"gx-link\"\n      }, \"register now!\")))), loader && __jsx(\"div\", {\n        className: \"gx-loader-view\"\n      }, __jsx(CircularProgress, null)), showMessage && message.error(alertMessage));\n    }\n  }]);\n\n  return HorizontalLoginForm;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var auth = _ref.auth;\n  var loader = auth.loader,\n      alertMessage = auth.alertMessage,\n      showMessage = auth.showMessage,\n      authUser = auth.authUser;\n  return {\n    loader: loader,\n    alertMessage: alertMessage,\n    showMessage: showMessage,\n    authUser: authUser\n  };\n};\n\nexport default connect(mapStateToProps, {\n  userSignIn: userSignIn,\n  hideMessage: hideMessage,\n  showAuthLoader: showAuthLoader,\n  userFacebookSignIn: userFacebookSignIn,\n  userGoogleSignIn: userGoogleSignIn,\n  userGithubSignIn: userGithubSignIn,\n  userTwitterSignIn: userTwitterSignIn\n})(HorizontalLoginForm);","map":{"version":3,"sources":["E:/frontend-projects/crm-frontend-wieldy/routes/components/dataEntry/Form/HorizontalLoginForm.js"],"names":["React","Component","connect","Button","Card","Checkbox","Form","Input","message","LockOutlined","UserOutlined","hideMessage","showAuthLoader","userFacebookSignIn","userGithubSignIn","userGoogleSignIn","userSignIn","userTwitterSignIn","CircularProgress","FormItem","Item","HorizontalLoginForm","state","email","password","props","showMessage","loader","alertMessage","remember","onFinish","onFinishFailed","required","color","error","mapStateToProps","auth","authUser"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Button, Card, Checkbox, Form, Input, message} from \"antd\";\r\nimport {LockOutlined, UserOutlined} from '@ant-design/icons';\r\nimport {\r\n  hideMessage,\r\n  showAuthLoader,\r\n  userFacebookSignIn,\r\n  userGithubSignIn,\r\n  userGoogleSignIn,\r\n  userSignIn,\r\n  userTwitterSignIn\r\n} from \"../../../../redux/actions/Auth\";\r\nimport \"./horizontalLoginForm.css\";\r\nimport CircularProgress from \"../../../../app/components/CircularProgress/index\";\r\n\r\n\r\nconst FormItem = Form.Item;\r\n\r\nclass HorizontalLoginForm extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: 'demo@example.com',\r\n      password: 'demo#123'\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const {showMessage, loader, alertMessage} = this.props;\r\n\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Horizontal Login Form\">\r\n        <Form\r\n          initialValues={{remember: true}}\r\n          name=\"basic\"\r\n          onFinish={this.onFinish}\r\n          onFinishFailed={this.onFinishFailed}\r\n          className=\"gx-login-form gx-form-row0\">\r\n          <FormItem rules={[{required: true, message: 'Please input your E-mail!'}]}\r\n                    name=\"email\"\r\n                    initialValue=\"demo@example.com\">\r\n\r\n            <Input prefix={<UserOutlined style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                   placeholder=\"Email\"/>\r\n          </FormItem>\r\n          <FormItem rules={[{required: true, message: 'Please input your Password!'}]}\r\n                    name=\"password\"\r\n                    initialValue=\"demo#123\">\r\n\r\n            <Input prefix={<LockOutlined style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                   type=\"password\"\r\n                   placeholder=\"Password\"/>\r\n          </FormItem>\r\n          <FormItem name=\"remember\" valuePropName=\"checked\">\r\n            <span className='gx-d-block gx-mb-2'>\r\n              <Checkbox>Remember me</Checkbox>\r\n            <span className=\"gx-link login-form-forgot\">Forgot password</span>\r\n            </span>\r\n            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button gx-mt-1\">\r\n              Log in\r\n            </Button>\r\n            <span className='gx-d-block gx-mt-2'>\r\n            Or <span className=\"gx-link\">register now!</span>\r\n            </span>\r\n          </FormItem>\r\n        </Form>\r\n\r\n        {loader &&\r\n        <div className=\"gx-loader-view\">\r\n          <CircularProgress/>\r\n        </div>\r\n        }\r\n        {showMessage &&\r\n        message.error(alertMessage)}\r\n      </Card>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = ({auth}) => {\r\n  const {loader, alertMessage, showMessage, authUser} = auth;\r\n  return {loader, alertMessage, showMessage, authUser}\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  userSignIn,\r\n  hideMessage,\r\n  showAuthLoader,\r\n  userFacebookSignIn,\r\n  userGoogleSignIn,\r\n  userGithubSignIn,\r\n  userTwitterSignIn\r\n})(HorizontalLoginForm);\r\n"]},"metadata":{},"sourceType":"module"}