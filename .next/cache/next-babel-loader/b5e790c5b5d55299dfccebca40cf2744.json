{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { Avatar, Badge, Checkbox } from \"antd\";\nimport labels from \"../../../../../routes/inbuiltApps/Todo/data/labels\";\nimport users from \"../../../../../routes/inbuiltApps/Todo/data/users\";\n\nconst ToDoItem = ({\n  todo,\n  onTodoSelect,\n  onTodoChecked,\n  onMarkAsStart\n}) => {\n  let user = null;\n  if (todo.user > 0) user = users[todo.user - 1];\n  return __jsx(\"div\", {\n    className: \"gx-module-list-item\"\n  }, __jsx(\"div\", {\n    className: \"gx-module-list-icon\"\n  }, __jsx(Checkbox, {\n    color: \"primary\",\n    checked: todo.selected,\n    onClick: event => {\n      event.stopPropagation();\n      onTodoChecked(todo);\n    },\n    value: \"SelectTodo\",\n    className: \"gx-icon-btn\"\n  }), __jsx(\"div\", {\n    onClick: () => {\n      todo.starred = !todo.starred;\n      onMarkAsStart(todo);\n    }\n  }, todo.starred ? __jsx(\"i\", {\n    className: \"gx-icon-btn icon icon-star\"\n  }) : __jsx(\"i\", {\n    className: \"gx-icon-btn icon icon-star-o\"\n  }))), __jsx(\"div\", {\n    className: \"gx-module-list-info\",\n    onClick: () => {\n      onTodoSelect(todo);\n    }\n  }, __jsx(\"div\", {\n    className: \"gx-module-todo-content\"\n  }, __jsx(\"div\", {\n    className: `gx-subject ${todo.completed && 'gx-text-muted gx-text-strikethrough'}`\n  }, todo.title), __jsx(\"div\", {\n    className: \"gx-manage-margin\"\n  }, labels.map((label, index) => {\n    return todo.labels.includes(label.id) && __jsx(Badge, {\n      key: index,\n      count: label.title,\n      style: {\n        backgroundColor: label.color\n      }\n    });\n  }))), __jsx(\"div\", {\n    className: \"gx-module-todo-right\"\n  }, user === null ? __jsx(Avatar, null, \"U\") : __jsx(Avatar, {\n    alt: user.name,\n    src: user.thumb\n  }))));\n};\n\nexport default ToDoItem;","map":{"version":3,"sources":["E:/frontend-projects/crm-frontend-wieldy/app/components/todo/ToDoList/ToDoItem/index.js"],"names":["React","Avatar","Badge","Checkbox","labels","users","ToDoItem","todo","onTodoSelect","onTodoChecked","onMarkAsStart","user","selected","event","stopPropagation","starred","completed","title","map","label","index","includes","id","backgroundColor","color","name","thumb"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,QAAvB,QAAsC,MAAtC;AAEA,OAAOC,MAAP,MAAmB,oDAAnB;AACA,OAAOC,KAAP,MAAkB,mDAAlB;;AAGA,MAAMC,QAAQ,GAAI,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,YAAP;AAAqBC,EAAAA,aAArB;AAAoCC,EAAAA;AAApC,CAAD,KAAwD;AACxE,MAAIC,IAAI,GAAG,IAAX;AACA,MAAIJ,IAAI,CAACI,IAAL,GAAY,CAAhB,EACEA,IAAI,GAAGN,KAAK,CAACE,IAAI,CAACI,IAAL,GAAY,CAAb,CAAZ;AACF,SACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAC,SAAhB;AACU,IAAA,OAAO,EAAEJ,IAAI,CAACK,QADxB;AAEU,IAAA,OAAO,EAAGC,KAAD,IAAW;AAClBA,MAAAA,KAAK,CAACC,eAAN;AACAL,MAAAA,aAAa,CAACF,IAAD,CAAb;AACD,KALX;AAMU,IAAA,KAAK,EAAC,YANhB;AAOU,IAAA,SAAS,EAAC;AAPpB,IADF,EAWE;AAAK,IAAA,OAAO,EAAE,MAAM;AAClBA,MAAAA,IAAI,CAACQ,OAAL,GAAe,CAACR,IAAI,CAACQ,OAArB;AACAL,MAAAA,aAAa,CAACH,IAAD,CAAb;AACD;AAHD,KAIGA,IAAI,CAACQ,OAAL,GACC;AAAG,IAAA,SAAS,EAAC;AAAb,IADD,GAEC;AAAG,IAAA,SAAS,EAAC;AAAb,IANJ,CAXF,CADF,EAuBE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAqC,IAAA,OAAO,EAAE,MAAM;AAClDP,MAAAA,YAAY,CAACD,IAAD,CAAZ;AACD;AAFD,KAGE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAG,cAAaA,IAAI,CAACS,SAAL,IAAkB,qCAAsC;AAAtF,KACGT,IAAI,CAACU,KADR,CADF,EAIE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGb,MAAM,CAACc,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC5B,WAAQb,IAAI,CAACH,MAAN,CAAciB,QAAd,CAAuBF,KAAK,CAACG,EAA7B,KACL,MAAC,KAAD;AAAO,MAAA,GAAG,EAAEF,KAAZ;AAAmB,MAAA,KAAK,EAAED,KAAK,CAACF,KAAhC;AAAuC,MAAA,KAAK,EAAE;AAACM,QAAAA,eAAe,EAAEJ,KAAK,CAACK;AAAxB;AAA9C,MADF;AAED,GAHA,CADH,CAJF,CAHF,EAcE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGb,IAAI,KAAK,IAAT,GAAgB,MAAC,MAAD,YAAhB,GACG,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAEA,IAAI,CAACc,IAAlB;AACQ,IAAA,GAAG,EAAEd,IAAI,CAACe;AADlB,IAFN,CAdF,CAvBF,CADF;AA+CD,CAnDD;;AAqDA,eAAepB,QAAf","sourcesContent":["import React from \"react\";\r\nimport {Avatar, Badge, Checkbox} from \"antd\";\r\n\r\nimport labels from \"../../../../../routes/inbuiltApps/Todo/data/labels\";\r\nimport users from \"../../../../../routes/inbuiltApps/Todo/data/users\";\r\n\r\n\r\nconst ToDoItem = (({todo, onTodoSelect, onTodoChecked, onMarkAsStart}) => {\r\n  let user = null;\r\n  if (todo.user > 0)\r\n    user = users[todo.user - 1];\r\n  return (\r\n    <div className=\"gx-module-list-item\">\r\n      <div className=\"gx-module-list-icon\">\r\n        <Checkbox color=\"primary\"\r\n                  checked={todo.selected}\r\n                  onClick={(event) => {\r\n                    event.stopPropagation();\r\n                    onTodoChecked(todo);\r\n                  }}\r\n                  value=\"SelectTodo\"\r\n                  className=\"gx-icon-btn\"\r\n        />\r\n\r\n        <div onClick={() => {\r\n          todo.starred = !todo.starred;\r\n          onMarkAsStart(todo);\r\n        }}>\r\n          {todo.starred ?\r\n            <i className=\"gx-icon-btn icon icon-star\"/> :\r\n            <i className=\"gx-icon-btn icon icon-star-o\"/>\r\n          }\r\n\r\n        </div>\r\n      </div>\r\n      <div className=\"gx-module-list-info\" onClick={() => {\r\n        onTodoSelect(todo);\r\n      }}>\r\n        <div className=\"gx-module-todo-content\">\r\n          <div className={`gx-subject ${todo.completed && 'gx-text-muted gx-text-strikethrough'}`}>\r\n            {todo.title}\r\n          </div>\r\n          <div className=\"gx-manage-margin\">\r\n            {labels.map((label, index) => {\r\n              return (todo.labels).includes(label.id) &&\r\n                <Badge key={index} count={label.title} style={{backgroundColor: label.color}}/>\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"gx-module-todo-right\">\r\n          {user === null ? <Avatar>U</Avatar>\r\n            : <Avatar alt={user.name}\r\n                      src={user.thumb}/>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n});\r\n\r\nexport default ToDoItem;\r\n"]},"metadata":{},"sourceType":"module"}