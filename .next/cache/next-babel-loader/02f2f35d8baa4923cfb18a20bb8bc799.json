{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { AutoComplete, Card, Input } from \"antd\";\nimport { SearchOutlined } from '@ant-design/icons';\nvar Option = AutoComplete.Option;\nvar OptGroup = AutoComplete.OptGroup;\nvar dataSource = [{\n  title: 'g-axon',\n  children: [{\n    title: 'AntDesign',\n    count: 10000\n  }, {\n    title: 'AntDesign UI',\n    count: 10600\n  }]\n}, {\n  title: 'jumbo',\n  children: [{\n    title: 'jumbo UI',\n    count: 60100\n  }, {\n    title: 'AntDesign',\n    count: 30010\n  }]\n}, {\n  title: 'React',\n  children: [{\n    title: 'AntDesign 2.0',\n    count: 100000\n  }]\n}];\n\nfunction renderTitle(title) {\n  return __jsx(\"span\", null, title, __jsx(\"a\", {\n    style: {\n      \"float\": 'right'\n    },\n    href: \"https://www.google.com/search?q=antd\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, \"version 1.1\"));\n}\n\nvar options = dataSource.map(function (group) {\n  return __jsx(OptGroup, {\n    key: group.title,\n    label: renderTitle(group.title)\n  }, group.children.map(function (opt) {\n    return __jsx(Option, {\n      key: opt.title,\n      value: opt.title\n    }, opt.title, __jsx(\"span\", {\n      className: \"certain-search-item-count\"\n    }, opt.count));\n  }));\n}).concat([__jsx(Option, {\n  disabled: true,\n  key: \"all\",\n  className: \"show-all\"\n}, __jsx(\"a\", {\n  href: \"https://www.google.com/search?q=antd\",\n  target: \"_blank\",\n  rel: \"noopener noreferrer\"\n}, \"version 1.2\"))]);\n\nvar LookupPatterns = function LookupPatterns() {\n  return __jsx(Card, {\n    className: \"gx-card\",\n    title: \"Lookup Patterns\"\n  }, __jsx(\"div\", {\n    className: \"certain-category-search-wrapper\",\n    style: {\n      width: 250\n    }\n  }, __jsx(AutoComplete, {\n    className: \"certain-category-search\",\n    dropdownClassName: \"certain-category-search-dropdown\",\n    dropdownMatchSelectWidth: false,\n    dropdownStyle: {\n      width: 300\n    },\n    size: \"large\",\n    style: {\n      width: '100%'\n    },\n    dataSource: options,\n    placeholder: \"input here\",\n    optionLabelProp: \"value\"\n  }, __jsx(Input, {\n    suffix: __jsx(SearchOutlined, null)\n  }))));\n};\n\n_c = LookupPatterns;\nexport default LookupPatterns;\n\nvar _c;\n\n$RefreshReg$(_c, \"LookupPatterns\");","map":{"version":3,"sources":["E:/frontend-projects/crm-frontend-wieldy/routes/components/dataEntry/AutoComplete/LookupPatterns.js"],"names":["React","AutoComplete","Card","Input","SearchOutlined","Option","OptGroup","dataSource","title","children","count","renderTitle","options","map","group","opt","concat","LookupPatterns","width"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {AutoComplete, Card, Input} from \"antd\";\r\nimport {SearchOutlined} from '@ant-design/icons';\r\n\r\nconst Option = AutoComplete.Option;\r\nconst OptGroup = AutoComplete.OptGroup;\r\n\r\nconst dataSource = [{\r\n  title: 'g-axon',\r\n  children: [{\r\n    title: 'AntDesign',\r\n    count: 10000,\r\n  }, {\r\n    title: 'AntDesign UI',\r\n    count: 10600,\r\n  }],\r\n}, {\r\n  title: 'jumbo',\r\n  children: [{\r\n    title: 'jumbo UI',\r\n    count: 60100,\r\n  }, {\r\n    title: 'AntDesign',\r\n    count: 30010,\r\n  }],\r\n}, {\r\n  title: 'React',\r\n  children: [{\r\n    title: 'AntDesign 2.0',\r\n    count: 100000,\r\n  }],\r\n}];\r\n\r\nfunction renderTitle(title) {\r\n  return (\r\n    <span>\r\n      {title}\r\n      <a\r\n        style={{float: 'right'}}\r\n        href=\"https://www.google.com/search?q=antd\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >version 1.1\r\n      </a>\r\n    </span>\r\n  );\r\n}\r\n\r\nconst options = dataSource.map(group => (\r\n  <OptGroup\r\n    key={group.title}\r\n    label={renderTitle(group.title)}\r\n  >\r\n    {group.children.map(opt => (\r\n      <Option key={opt.title} value={opt.title}>\r\n        {opt.title}\r\n        <span className=\"certain-search-item-count\">{opt.count}</span>\r\n      </Option>\r\n    ))}\r\n  </OptGroup>\r\n)).concat([\r\n  <Option disabled key=\"all\" className=\"show-all\">\r\n    <a\r\n      href=\"https://www.google.com/search?q=antd\"\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n    >\r\n      version 1.2\r\n    </a>\r\n  </Option>,\r\n]);\r\n\r\nconst LookupPatterns = () => {\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Lookup Patterns\">\r\n        <div className=\"certain-category-search-wrapper\" style={{width: 250}}>\r\n          <AutoComplete\r\n            className=\"certain-category-search\"\r\n            dropdownClassName=\"certain-category-search-dropdown\"\r\n            dropdownMatchSelectWidth={false}\r\n            dropdownStyle={{width: 300}}\r\n            size=\"large\"\r\n            style={{width: '100%'}}\r\n            dataSource={options}\r\n            placeholder=\"input here\"\r\n            optionLabelProp=\"value\"\r\n          >\r\n            <Input suffix={<SearchOutlined/>}/>\r\n          </AutoComplete>\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n;\r\n\r\nexport default LookupPatterns;\r\n"]},"metadata":{},"sourceType":"module"}