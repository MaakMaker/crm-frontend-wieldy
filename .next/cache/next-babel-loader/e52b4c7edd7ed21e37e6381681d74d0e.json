{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { AutoComplete, Card } from \"antd\";\nconst Option = AutoComplete.Option;\n\nclass Customized extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      result: []\n    });\n\n    _defineProperty(this, \"handleSearch\", value => {\n      let result;\n\n      if (!value || value.indexOf('@') >= 0) {\n        result = [];\n      } else {\n        result = ['gmail.com', '163.com', 'qq.com'].map(domain => `${value}@${domain}`);\n      }\n\n      this.setState({\n        result\n      });\n    });\n  }\n\n  render() {\n    const {\n      result\n    } = this.state;\n    const children = result.map(email => {\n      return __jsx(Option, {\n        key: email\n      }, email);\n    });\n    return __jsx(Card, {\n      className: \"gx-card\",\n      title: \"Customized\"\n    }, __jsx(AutoComplete, {\n      style: {\n        width: 200\n      },\n      onSearch: this.handleSearch,\n      placeholder: \"input here\"\n    }, children));\n  }\n\n}\n\nexport default Customized;","map":{"version":3,"sources":["E:/frontend-projects/crm-frontend-wieldy/routes/components/dataEntry/AutoComplete/Customized.js"],"names":["React","Component","AutoComplete","Card","Option","Customized","result","value","indexOf","map","domain","setState","render","state","children","email","width","handleSearch"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,SAAQC,YAAR,EAAsBC,IAAtB,QAAiC,MAAjC;AAEA,MAAMC,MAAM,GAAGF,YAAY,CAACE,MAA5B;;AAGA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AAAA;AAAA;;AAAA,mCACzB;AACNK,MAAAA,MAAM,EAAE;AADF,KADyB;;AAAA,0CAKjBC,KAAD,IAAW;AACxB,UAAID,MAAJ;;AACA,UAAI,CAACC,KAAD,IAAUA,KAAK,CAACC,OAAN,CAAc,GAAd,KAAsB,CAApC,EAAuC;AACrCF,QAAAA,MAAM,GAAG,EAAT;AACD,OAFD,MAEO;AACLA,QAAAA,MAAM,GAAG,CAAC,WAAD,EAAc,SAAd,EAAyB,QAAzB,EAAmCG,GAAnC,CAAuCC,MAAM,IAAK,GAAEH,KAAM,IAAGG,MAAO,EAApE,CAAT;AACD;;AACD,WAAKC,QAAL,CAAc;AAACL,QAAAA;AAAD,OAAd;AACD,KAbgC;AAAA;;AAejCM,EAAAA,MAAM,GAAG;AACP,UAAM;AAACN,MAAAA;AAAD,QAAW,KAAKO,KAAtB;AACA,UAAMC,QAAQ,GAAGR,MAAM,CAACG,GAAP,CAAYM,KAAD,IAAW;AACrC,aAAO,MAAC,MAAD;AAAQ,QAAA,GAAG,EAAEA;AAAb,SAAqBA,KAArB,CAAP;AACD,KAFgB,CAAjB;AAGA,WACE,MAAC,IAAD;AAAM,MAAA,SAAS,EAAC,SAAhB;AAA0B,MAAA,KAAK,EAAC;AAAhC,OACE,MAAC,YAAD;AACE,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR,OADT;AAEE,MAAA,QAAQ,EAAE,KAAKC,YAFjB;AAGE,MAAA,WAAW,EAAC;AAHd,OAKGH,QALH,CADF,CADF;AAWD;;AA/BgC;;AAoCnC,eAAeT,UAAf","sourcesContent":["import React, {Component} from \"react\";\r\n\r\nimport {AutoComplete, Card} from \"antd\";\r\n\r\nconst Option = AutoComplete.Option;\r\n\r\n\r\nclass Customized extends Component {\r\n  state = {\r\n    result: [],\r\n  };\r\n\r\n  handleSearch = (value) => {\r\n    let result;\r\n    if (!value || value.indexOf('@') >= 0) {\r\n      result = [];\r\n    } else {\r\n      result = ['gmail.com', '163.com', 'qq.com'].map(domain => `${value}@${domain}`);\r\n    }\r\n    this.setState({result});\r\n  };\r\n\r\n  render() {\r\n    const {result} = this.state;\r\n    const children = result.map((email) => {\r\n      return <Option key={email}>{email}</Option>;\r\n    });\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Customized\">\r\n        <AutoComplete\r\n          style={{width: 200}}\r\n          onSearch={this.handleSearch}\r\n          placeholder=\"input here\"\r\n        >\r\n          {children}\r\n        </AutoComplete>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default Customized;\r\n\r\n"]},"metadata":{},"sourceType":"module"}