{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { Form, DatePicker, TimePicker, Button, Card } from 'antd';\nvar MonthPicker = DatePicker.MonthPicker,\n    RangePicker = DatePicker.RangePicker;\nvar formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 8\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\nvar config = {\n  rules: [{\n    type: 'object',\n    required: true,\n    message: 'Please select time!'\n  }]\n};\nvar rangeConfig = {\n  rules: [{\n    type: 'array',\n    required: true,\n    message: 'Please select time!'\n  }]\n};\n\nvar TimeRelatedControls = function TimeRelatedControls() {\n  var onFinish = function onFinish(fieldsValue) {\n    // Should format date value before submit.\n    var rangeValue = fieldsValue['range-picker'];\n    var rangeTimeValue = fieldsValue['range-time-picker'];\n\n    var values = _objectSpread(_objectSpread({}, fieldsValue), {}, {\n      'date-picker': fieldsValue['date-picker'].format('YYYY-MM-DD'),\n      'date-time-picker': fieldsValue['date-time-picker'].format('YYYY-MM-DD HH:mm:ss'),\n      'month-picker': fieldsValue['month-picker'].format('YYYY-MM'),\n      'range-picker': [rangeValue[0].format('YYYY-MM-DD'), rangeValue[1].format('YYYY-MM-DD')],\n      'range-time-picker': [rangeTimeValue[0].format('YYYY-MM-DD HH:mm:ss'), rangeTimeValue[1].format('YYYY-MM-DD HH:mm:ss')],\n      'time-picker': fieldsValue['time-picker'].format('HH:mm:ss')\n    });\n\n    console.log('Received values of form: ', values);\n  };\n\n  return __jsx(Card, {\n    className: \"gx-card\",\n    title: \"Time Related Controls\"\n  }, __jsx(Form, _extends({\n    name: \"time_related_controls\"\n  }, formItemLayout, {\n    onFinish: onFinish\n  }), __jsx(Form.Item, _extends({\n    name: \"date-picker\",\n    label: \"DatePicker\"\n  }, config), __jsx(DatePicker, {\n    className: \"gx-mb-3 gx-w-100\"\n  })), __jsx(Form.Item, _extends({\n    name: \"date-time-picker\",\n    label: \"DatePicker[showTime]\"\n  }, config), __jsx(DatePicker, {\n    className: \"gx-mb-3 gx-w-100\",\n    showTime: true,\n    format: \"YYYY-MM-DD HH:mm:ss\"\n  })), __jsx(Form.Item, _extends({\n    name: \"month-picker\",\n    label: \"MonthPicker\"\n  }, config), __jsx(MonthPicker, {\n    className: \"gx-mb-3 gx-w-100\"\n  })), __jsx(Form.Item, _extends({\n    name: \"range-picker\",\n    label: \"RangePicker\"\n  }, rangeConfig), __jsx(RangePicker, {\n    className: \"gx-mb-3 gx-w-100\"\n  })), __jsx(Form.Item, _extends({\n    name: \"range-time-picker\",\n    label: \"RangePicker[showTime]\"\n  }, rangeConfig), __jsx(RangePicker, {\n    className: \"gx-mb-3 gx-w-100\",\n    showTime: true,\n    format: \"YYYY-MM-DD HH:mm:ss\"\n  })), __jsx(Form.Item, _extends({\n    name: \"time-picker\",\n    label: \"TimePicker\"\n  }, config), __jsx(TimePicker, {\n    className: \"gx-mb-3 gx-w-100\"\n  })), __jsx(Form.Item, {\n    wrapperCol: {\n      xs: {\n        span: 24,\n        offset: 0\n      },\n      sm: {\n        span: 16,\n        offset: 8\n      }\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\"\n  }, \"Submit\"))));\n};\n\n_c = TimeRelatedControls;\nexport default TimeRelatedControls;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimeRelatedControls\");","map":{"version":3,"sources":["E:/frontend-projects/crm-frontend-wieldy/routes/components/dataEntry/Form/TimeRelatedControls.js"],"names":["React","Form","DatePicker","TimePicker","Button","Card","MonthPicker","RangePicker","formItemLayout","labelCol","xs","span","sm","wrapperCol","config","rules","type","required","message","rangeConfig","TimeRelatedControls","onFinish","fieldsValue","rangeValue","rangeTimeValue","values","format","console","log","offset"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Form, DatePicker, TimePicker, Button ,Card} from 'antd';\r\n\r\nconst { MonthPicker, RangePicker } = DatePicker;\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 8 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 16 },\r\n  },\r\n};\r\nconst config = {\r\n  rules: [{ type: 'object', required: true, message: 'Please select time!' }],\r\n};\r\nconst rangeConfig = {\r\n  rules: [{ type: 'array', required: true, message: 'Please select time!' }],\r\n};\r\n\r\nconst TimeRelatedControls = () => {\r\n  const onFinish = fieldsValue => {\r\n    // Should format date value before submit.\r\n    const rangeValue = fieldsValue['range-picker'];\r\n    const rangeTimeValue = fieldsValue['range-time-picker'];\r\n    const values = {\r\n      ...fieldsValue,\r\n      'date-picker': fieldsValue['date-picker'].format('YYYY-MM-DD'),\r\n      'date-time-picker': fieldsValue['date-time-picker'].format('YYYY-MM-DD HH:mm:ss'),\r\n      'month-picker': fieldsValue['month-picker'].format('YYYY-MM'),\r\n      'range-picker': [rangeValue[0].format('YYYY-MM-DD'), rangeValue[1].format('YYYY-MM-DD')],\r\n      'range-time-picker': [\r\n        rangeTimeValue[0].format('YYYY-MM-DD HH:mm:ss'),\r\n        rangeTimeValue[1].format('YYYY-MM-DD HH:mm:ss'),\r\n      ],\r\n      'time-picker': fieldsValue['time-picker'].format('HH:mm:ss'),\r\n    };\r\n    console.log('Received values of form: ', values);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"gx-card\" title=\"Time Related Controls\">\r\n    <Form name=\"time_related_controls\" {...formItemLayout} onFinish={onFinish}>\r\n      <Form.Item name=\"date-picker\" label=\"DatePicker\" {...config}>\r\n        <DatePicker className='gx-mb-3 gx-w-100' />\r\n      </Form.Item>\r\n      <Form.Item name=\"date-time-picker\" label=\"DatePicker[showTime]\" {...config}>\r\n        <DatePicker className='gx-mb-3 gx-w-100' showTime format=\"YYYY-MM-DD HH:mm:ss\" />\r\n      </Form.Item>\r\n      <Form.Item name=\"month-picker\" label=\"MonthPicker\" {...config}>\r\n        <MonthPicker className='gx-mb-3 gx-w-100' />\r\n      </Form.Item>\r\n      <Form.Item name=\"range-picker\" label=\"RangePicker\" {...rangeConfig}>\r\n        <RangePicker className='gx-mb-3 gx-w-100' />\r\n      </Form.Item>\r\n      <Form.Item name=\"range-time-picker\" label=\"RangePicker[showTime]\" {...rangeConfig}>\r\n        <RangePicker className='gx-mb-3 gx-w-100' showTime format=\"YYYY-MM-DD HH:mm:ss\" />\r\n      </Form.Item>\r\n      <Form.Item name=\"time-picker\" label=\"TimePicker\" {...config}>\r\n        <TimePicker className='gx-mb-3 gx-w-100' />\r\n      </Form.Item>\r\n      <Form.Item\r\n        wrapperCol={{\r\n          xs: { span: 24, offset: 0 },\r\n          sm: { span: 16, offset: 8 },\r\n        }}\r\n      >\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n    </Card>\r\n  );\r\n};\r\nexport default TimeRelatedControls;\r\n"]},"metadata":{},"sourceType":"module"}