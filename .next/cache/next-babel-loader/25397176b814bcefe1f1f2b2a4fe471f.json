{"ast":null,"code":"import { all, call, fork, put, takeEvery } from \"redux-saga/effects\";\nimport { auth, facebookAuthProvider, githubAuthProvider, googleAuthProvider, twitterAuthProvider } from \"../../firebaseConfig/index\";\nimport { removeCookie, setCookie } from '../../util/session';\nimport { SIGNIN_FACEBOOK_USER, SIGNIN_GITHUB_USER, SIGNIN_GOOGLE_USER, SIGNIN_TWITTER_USER, SIGNIN_USER, SIGNOUT_USER, SIGNUP_USER } from \"../../constants/ActionTypes\";\nimport { showAuthMessage, userSignInSuccess, userSignOutSuccess, userSignUpSuccess } from \"../../redux/actions/Auth\";\nimport { userFacebookSignInSuccess, userGithubSignInSuccess, userGoogleSignInSuccess, userTwitterSignInSuccess } from \"../actions/Auth\";\n\nconst createUserWithEmailPasswordRequest = async (email, password) => await auth.createUserWithEmailAndPassword(email, password).then(authUser => authUser).catch(error => error);\n\nconst signInUserWithEmailPasswordRequest = async (email, password) => await auth.signInWithEmailAndPassword(email, password).then(authUser => authUser).catch(error => error);\n\nconst signOutRequest = async () => await auth.signOut().then(authUser => authUser).catch(error => error);\n\nconst signInUserWithGoogleRequest = async () => await auth.signInWithPopup(googleAuthProvider).then(authUser => authUser).catch(error => error);\n\nconst signInUserWithFacebookRequest = async () => await auth.signInWithPopup(facebookAuthProvider).then(authUser => authUser).catch(error => error);\n\nconst signInUserWithGithubRequest = async () => await auth.signInWithPopup(githubAuthProvider).then(authUser => authUser).catch(error => error);\n\nconst signInUserWithTwitterRequest = async () => await auth.signInWithPopup(twitterAuthProvider).then(authUser => authUser).catch(error => error);\n\nfunction* createUserWithEmailPassword({\n  payload\n}) {\n  const {\n    email,\n    password\n  } = payload;\n\n  try {\n    const signUpUser = yield call(createUserWithEmailPasswordRequest, email, password);\n\n    if (signUpUser.message) {\n      yield put(showAuthMessage(signUpUser.message));\n    } else {\n      setCookie('user_id', signUpUser.user.uid);\n      yield put(userSignUpSuccess(signUpUser.user.uid));\n    }\n  } catch (error) {\n    yield put(showAuthMessage(error));\n  }\n}\n\nfunction* signInUserWithGoogle() {\n  try {\n    const signUpUser = yield call(signInUserWithGoogleRequest);\n\n    if (signUpUser.message) {\n      yield put(showAuthMessage(signUpUser.message));\n    } else {\n      setCookie('user_id', signUpUser.user.uid);\n      yield put(userGoogleSignInSuccess(signUpUser.user.uid));\n    }\n  } catch (error) {\n    yield put(showAuthMessage(error));\n  }\n}\n\nfunction* signInUserWithFacebook() {\n  try {\n    const signUpUser = yield call(signInUserWithFacebookRequest);\n\n    if (signUpUser.message) {\n      yield put(showAuthMessage(signUpUser.message));\n    } else {\n      setCookie('user_id', signUpUser.user.uid);\n      yield put(userFacebookSignInSuccess(signUpUser.user.uid));\n    }\n  } catch (error) {\n    yield put(showAuthMessage(error));\n  }\n}\n\nfunction* signInUserWithGithub() {\n  try {\n    const signUpUser = yield call(signInUserWithGithubRequest);\n\n    if (signUpUser.message) {\n      yield put(showAuthMessage(signUpUser.message));\n    } else {\n      setCookie('user_id', signUpUser.user.uid);\n      yield put(userGithubSignInSuccess(signUpUser.user.uid));\n    }\n  } catch (error) {\n    yield put(showAuthMessage(error));\n  }\n}\n\nfunction* signInUserWithTwitter() {\n  try {\n    const signUpUser = yield call(signInUserWithTwitterRequest);\n\n    if (signUpUser.message) {\n      if (signUpUser.message.length > 100) {\n        yield put(showAuthMessage('Your request has been canceled.'));\n      } else {\n        yield put(showAuthMessage(signUpUser.message));\n      }\n    } else {\n      setCookie('user_id', signUpUser.user.uid);\n      yield put(userTwitterSignInSuccess(signUpUser.user.uid));\n    }\n  } catch (error) {\n    yield put(showAuthMessage(error));\n  }\n}\n\nfunction* signInUserWithEmailPassword({\n  payload\n}) {\n  const {\n    email,\n    password\n  } = payload;\n\n  try {\n    const signInUser = yield call(signInUserWithEmailPasswordRequest, email, password);\n\n    if (signInUser.message) {\n      yield put(showAuthMessage(signInUser.message));\n    } else {\n      setCookie('user_id', signInUser.user.uid);\n      yield put(userSignInSuccess(signInUser.user.uid));\n    }\n  } catch (error) {\n    yield put(showAuthMessage(error));\n  }\n}\n\nfunction* signOut() {\n  try {\n    const signOutUser = yield call(signOutRequest);\n\n    if (signOutUser === undefined) {\n      removeCookie('user_id');\n      yield put(userSignOutSuccess(signOutUser));\n    } else {\n      yield put(showAuthMessage(signOutUser.message));\n    }\n  } catch (error) {\n    yield put(showAuthMessage(error));\n  }\n}\n\nexport function* createUserAccount() {\n  yield takeEvery(SIGNUP_USER, createUserWithEmailPassword);\n}\nexport function* signInWithGoogle() {\n  yield takeEvery(SIGNIN_GOOGLE_USER, signInUserWithGoogle);\n}\nexport function* signInWithFacebook() {\n  yield takeEvery(SIGNIN_FACEBOOK_USER, signInUserWithFacebook);\n}\nexport function* signInWithTwitter() {\n  yield takeEvery(SIGNIN_TWITTER_USER, signInUserWithTwitter);\n}\nexport function* signInWithGithub() {\n  yield takeEvery(SIGNIN_GITHUB_USER, signInUserWithGithub);\n}\nexport function* signInUser() {\n  yield takeEvery(SIGNIN_USER, signInUserWithEmailPassword);\n}\nexport function* signOutUser() {\n  yield takeEvery(SIGNOUT_USER, signOut);\n}\nexport default function* rootSaga() {\n  yield all([fork(signInUser), fork(createUserAccount), fork(signInWithGoogle), fork(signInWithFacebook), fork(signInWithTwitter), fork(signInWithGithub), fork(signOutUser)]);\n}","map":{"version":3,"sources":["E:/frontend-projects/crm-frontend-wieldy/redux/sagas/Auth.js"],"names":["all","call","fork","put","takeEvery","auth","facebookAuthProvider","githubAuthProvider","googleAuthProvider","twitterAuthProvider","removeCookie","setCookie","SIGNIN_FACEBOOK_USER","SIGNIN_GITHUB_USER","SIGNIN_GOOGLE_USER","SIGNIN_TWITTER_USER","SIGNIN_USER","SIGNOUT_USER","SIGNUP_USER","showAuthMessage","userSignInSuccess","userSignOutSuccess","userSignUpSuccess","userFacebookSignInSuccess","userGithubSignInSuccess","userGoogleSignInSuccess","userTwitterSignInSuccess","createUserWithEmailPasswordRequest","email","password","createUserWithEmailAndPassword","then","authUser","catch","error","signInUserWithEmailPasswordRequest","signInWithEmailAndPassword","signOutRequest","signOut","signInUserWithGoogleRequest","signInWithPopup","signInUserWithFacebookRequest","signInUserWithGithubRequest","signInUserWithTwitterRequest","createUserWithEmailPassword","payload","signUpUser","message","user","uid","signInUserWithGoogle","signInUserWithFacebook","signInUserWithGithub","signInUserWithTwitter","length","signInUserWithEmailPassword","signInUser","signOutUser","undefined","createUserAccount","signInWithGoogle","signInWithFacebook","signInWithTwitter","signInWithGithub","rootSaga"],"mappings":"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","sourcesContent":["import {all, call, fork, put, takeEvery} from \"redux-saga/effects\";\r\nimport {\r\n  auth,\r\n  facebookAuthProvider,\r\n  githubAuthProvider,\r\n  googleAuthProvider,\r\n  twitterAuthProvider\r\n} from \"../../firebaseConfig/index\";\r\nimport {removeCookie, setCookie} from '../../util/session';\r\nimport {\r\n  SIGNIN_FACEBOOK_USER,\r\n  SIGNIN_GITHUB_USER,\r\n  SIGNIN_GOOGLE_USER,\r\n  SIGNIN_TWITTER_USER,\r\n  SIGNIN_USER,\r\n  SIGNOUT_USER,\r\n  SIGNUP_USER\r\n} from \"../../constants/ActionTypes\";\r\nimport {showAuthMessage, userSignInSuccess, userSignOutSuccess, userSignUpSuccess} from \"../../redux/actions/Auth\";\r\nimport {\r\n  userFacebookSignInSuccess,\r\n  userGithubSignInSuccess,\r\n  userGoogleSignInSuccess,\r\n  userTwitterSignInSuccess\r\n} from \"../actions/Auth\";\r\n\r\nconst createUserWithEmailPasswordRequest = async (email, password) =>\r\n  await  auth.createUserWithEmailAndPassword(email, password)\r\n    .then(authUser => authUser)\r\n    .catch(error => error);\r\n\r\nconst signInUserWithEmailPasswordRequest = async (email, password) =>\r\n  await  auth.signInWithEmailAndPassword(email, password)\r\n    .then(authUser => authUser)\r\n    .catch(error => error);\r\n\r\nconst signOutRequest = async () =>\r\n  await  auth.signOut()\r\n    .then(authUser => authUser)\r\n    .catch(error => error);\r\n\r\n\r\nconst signInUserWithGoogleRequest = async () =>\r\n  await  auth.signInWithPopup(googleAuthProvider)\r\n    .then(authUser => authUser)\r\n    .catch(error => error);\r\n\r\nconst signInUserWithFacebookRequest = async () =>\r\n  await  auth.signInWithPopup(facebookAuthProvider)\r\n    .then(authUser => authUser)\r\n    .catch(error => error);\r\n\r\nconst signInUserWithGithubRequest = async () =>\r\n  await  auth.signInWithPopup(githubAuthProvider)\r\n    .then(authUser => authUser)\r\n    .catch(error => error);\r\n\r\nconst signInUserWithTwitterRequest = async () =>\r\n  await  auth.signInWithPopup(twitterAuthProvider)\r\n    .then(authUser => authUser)\r\n    .catch(error => error);\r\n\r\nfunction* createUserWithEmailPassword({payload}) {\r\n  const {email, password} = payload;\r\n  try {\r\n    const signUpUser = yield call(createUserWithEmailPasswordRequest, email, password);\r\n    if (signUpUser.message) {\r\n      yield put(showAuthMessage(signUpUser.message));\r\n    } else {\r\n      setCookie('user_id', signUpUser.user.uid);\r\n      yield put(userSignUpSuccess(signUpUser.user.uid));\r\n    }\r\n  } catch (error) {\r\n    yield put(showAuthMessage(error));\r\n  }\r\n}\r\n\r\nfunction* signInUserWithGoogle() {\r\n  try {\r\n    const signUpUser = yield call(signInUserWithGoogleRequest);\r\n    if (signUpUser.message) {\r\n      yield put(showAuthMessage(signUpUser.message));\r\n    } else {\r\n      setCookie('user_id', signUpUser.user.uid);\r\n      yield put(userGoogleSignInSuccess(signUpUser.user.uid));\r\n    }\r\n  } catch (error) {\r\n    yield put(showAuthMessage(error));\r\n  }\r\n}\r\n\r\n\r\nfunction* signInUserWithFacebook() {\r\n  try {\r\n    const signUpUser = yield call(signInUserWithFacebookRequest);\r\n    if (signUpUser.message) {\r\n      yield put(showAuthMessage(signUpUser.message));\r\n    } else {\r\n      setCookie('user_id', signUpUser.user.uid);\r\n      yield put(userFacebookSignInSuccess(signUpUser.user.uid));\r\n    }\r\n  } catch (error) {\r\n    yield put(showAuthMessage(error));\r\n  }\r\n}\r\n\r\n\r\nfunction* signInUserWithGithub() {\r\n  try {\r\n    const signUpUser = yield call(signInUserWithGithubRequest);\r\n    if (signUpUser.message) {\r\n      yield put(showAuthMessage(signUpUser.message));\r\n    } else {\r\n      setCookie('user_id', signUpUser.user.uid);\r\n      yield put(userGithubSignInSuccess(signUpUser.user.uid));\r\n    }\r\n  } catch (error) {\r\n    yield put(showAuthMessage(error));\r\n  }\r\n}\r\n\r\n\r\nfunction* signInUserWithTwitter() {\r\n  try {\r\n    const signUpUser = yield call(signInUserWithTwitterRequest);\r\n    if (signUpUser.message) {\r\n      if (signUpUser.message.length > 100) {\r\n        yield put(showAuthMessage('Your request has been canceled.'));\r\n      } else {\r\n        yield put(showAuthMessage(signUpUser.message));\r\n      }\r\n    } else {\r\n      setCookie('user_id', signUpUser.user.uid);\r\n      yield put(userTwitterSignInSuccess(signUpUser.user.uid));\r\n    }\r\n  } catch (error) {\r\n    yield put(showAuthMessage(error));\r\n  }\r\n}\r\n\r\nfunction* signInUserWithEmailPassword({payload}) {\r\n  const {email, password} = payload;\r\n  try {\r\n    const signInUser = yield call(signInUserWithEmailPasswordRequest, email, password);\r\n    if (signInUser.message) {\r\n      yield put(showAuthMessage(signInUser.message));\r\n    } else {\r\n      setCookie('user_id', signInUser.user.uid);\r\n      yield put(userSignInSuccess(signInUser.user.uid));\r\n    }\r\n  } catch (error) {\r\n    yield put(showAuthMessage(error));\r\n  }\r\n}\r\n\r\nfunction* signOut() {\r\n  try {\r\n    const signOutUser = yield call(signOutRequest);\r\n    if (signOutUser === undefined) {\r\n      removeCookie('user_id');\r\n      yield put(userSignOutSuccess(signOutUser));\r\n    } else {\r\n      yield put(showAuthMessage(signOutUser.message));\r\n    }\r\n  } catch (error) {\r\n    yield put(showAuthMessage(error));\r\n  }\r\n}\r\n\r\nexport function* createUserAccount() {\r\n  yield takeEvery(SIGNUP_USER, createUserWithEmailPassword);\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n  yield takeEvery(SIGNIN_GOOGLE_USER, signInUserWithGoogle);\r\n}\r\n\r\nexport function* signInWithFacebook() {\r\n  yield takeEvery(SIGNIN_FACEBOOK_USER, signInUserWithFacebook);\r\n}\r\n\r\nexport function* signInWithTwitter() {\r\n  yield takeEvery(SIGNIN_TWITTER_USER, signInUserWithTwitter);\r\n}\r\n\r\nexport function* signInWithGithub() {\r\n  yield takeEvery(SIGNIN_GITHUB_USER, signInUserWithGithub);\r\n}\r\n\r\nexport function* signInUser() {\r\n  yield takeEvery(SIGNIN_USER, signInUserWithEmailPassword);\r\n}\r\n\r\nexport function* signOutUser() {\r\n  yield takeEvery(SIGNOUT_USER, signOut);\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([fork(signInUser),\r\n    fork(createUserAccount),\r\n    fork(signInWithGoogle),\r\n    fork(signInWithFacebook),\r\n    fork(signInWithTwitter),\r\n    fork(signInWithGithub),\r\n    fork(signOutUser)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}