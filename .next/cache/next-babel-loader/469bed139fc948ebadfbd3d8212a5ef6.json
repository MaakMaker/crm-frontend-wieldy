{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Button, Card, Checkbox } from \"antd\";\n\nvar ControlledCheckbox = /*#__PURE__*/function (_Component) {\n  _inherits(ControlledCheckbox, _Component);\n\n  var _super = _createSuper(ControlledCheckbox);\n\n  function ControlledCheckbox() {\n    var _this;\n\n    _classCallCheck(this, ControlledCheckbox);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      checked: true,\n      disabled: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleChecked\", function () {\n      _this.setState({\n        checked: !_this.state.checked\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleDisable\", function () {\n      _this.setState({\n        disabled: !_this.state.disabled\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (e) {\n      console.log('checked = ', e.target.checked);\n\n      _this.setState({\n        checked: e.target.checked\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(ControlledCheckbox, [{\n    key: \"render\",\n    value: function render() {\n      var label = \"\".concat(this.state.checked ? 'Checked' : 'Unchecked', \"-\").concat(this.state.disabled ? 'Disabled' : 'Enabled');\n      return __jsx(Card, {\n        className: \"gx-card gx-card\",\n        title: \"ControlledCheckbox\"\n      }, __jsx(\"p\", {\n        style: {\n          marginBottom: '20px'\n        }\n      }, __jsx(Checkbox, {\n        checked: this.state.checked,\n        disabled: this.state.disabled,\n        onChange: this.onChange\n      }, label)), __jsx(\"p\", null, __jsx(Button, {\n        type: \"primary\",\n        size: \"small\",\n        onClick: this.toggleChecked\n      }, !this.state.checked ? 'Check' : 'Uncheck'), __jsx(Button, {\n        style: {\n          marginLeft: '10px'\n        },\n        type: \"primary\",\n        size: \"small\",\n        onClick: this.toggleDisable\n      }, !this.state.disabled ? 'Disable' : 'Enable')));\n    }\n  }]);\n\n  return ControlledCheckbox;\n}(Component);\n\nexport default ControlledCheckbox;","map":{"version":3,"sources":["E:/frontend-projects/crm-frontend-wieldy/routes/components/dataEntry/Checkbox/ControlledCheckbox.js"],"names":["React","Component","Button","Card","Checkbox","ControlledCheckbox","checked","disabled","setState","state","e","console","log","target","label","marginBottom","onChange","toggleChecked","marginLeft","toggleDisable"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,QAAtB,QAAqC,MAArC;;IAEMC,kB;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,OAAO,EAAE,IADH;AAENC,MAAAA,QAAQ,EAAE;AAFJ,K;;oEAIQ,YAAM;AACpB,YAAKC,QAAL,CAAc;AAACF,QAAAA,OAAO,EAAE,CAAC,MAAKG,KAAL,CAAWH;AAAtB,OAAd;AACD,K;;oEACe,YAAM;AACpB,YAAKE,QAAL,CAAc;AAACD,QAAAA,QAAQ,EAAE,CAAC,MAAKE,KAAL,CAAWF;AAAvB,OAAd;AACD,K;;+DACU,UAACG,CAAD,EAAO;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,CAAC,CAACG,MAAF,CAASP,OAAnC;;AACA,YAAKE,QAAL,CAAc;AACZF,QAAAA,OAAO,EAAEI,CAAC,CAACG,MAAF,CAASP;AADN,OAAd;AAGD,K;;;;;;;6BAEQ;AACP,UAAMQ,KAAK,aAAM,KAAKL,KAAL,CAAWH,OAAX,GAAqB,SAArB,GAAiC,WAAvC,cAAsD,KAAKG,KAAL,CAAWF,QAAX,GAAsB,UAAtB,GAAmC,SAAzF,CAAX;AACA,aACE,MAAC,IAAD;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAkC,QAAA,KAAK,EAAC;AAAxC,SACE;AAAG,QAAA,KAAK,EAAE;AAACQ,UAAAA,YAAY,EAAE;AAAf;AAAV,SACE,MAAC,QAAD;AACE,QAAA,OAAO,EAAE,KAAKN,KAAL,CAAWH,OADtB;AAEE,QAAA,QAAQ,EAAE,KAAKG,KAAL,CAAWF,QAFvB;AAGE,QAAA,QAAQ,EAAE,KAAKS;AAHjB,SAKGF,KALH,CADF,CADF,EAUE,iBACE,MAAC,MAAD;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,OAAO,EAAE,KAAKG;AAHhB,SAKG,CAAC,KAAKR,KAAL,CAAWH,OAAZ,GAAsB,OAAtB,GAAgC,SALnC,CADF,EAQE,MAAC,MAAD;AACE,QAAA,KAAK,EAAE;AAACY,UAAAA,UAAU,EAAE;AAAb,SADT;AAEE,QAAA,IAAI,EAAC,SAFP;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,OAAO,EAAE,KAAKC;AAJhB,SAMG,CAAC,KAAKV,KAAL,CAAWF,QAAZ,GAAuB,SAAvB,GAAmC,QANtC,CARF,CAVF,CADF;AA8BD;;;;EAlD8BN,S;;AAuDjC,eAAeI,kBAAf","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Button, Card, Checkbox} from \"antd\";\r\n\r\nclass ControlledCheckbox extends Component {\r\n  state = {\r\n    checked: true,\r\n    disabled: false,\r\n  };\r\n  toggleChecked = () => {\r\n    this.setState({checked: !this.state.checked});\r\n  }\r\n  toggleDisable = () => {\r\n    this.setState({disabled: !this.state.disabled});\r\n  }\r\n  onChange = (e) => {\r\n    console.log('checked = ', e.target.checked);\r\n    this.setState({\r\n      checked: e.target.checked,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const label = `${this.state.checked ? 'Checked' : 'Unchecked'}-${this.state.disabled ? 'Disabled' : 'Enabled'}`;\r\n    return (\r\n      <Card className=\"gx-card gx-card\" title=\"ControlledCheckbox\">\r\n        <p style={{marginBottom: '20px'}}>\r\n          <Checkbox\r\n            checked={this.state.checked}\r\n            disabled={this.state.disabled}\r\n            onChange={this.onChange}\r\n          >\r\n            {label}\r\n          </Checkbox>\r\n        </p>\r\n        <p>\r\n          <Button\r\n            type=\"primary\"\r\n            size=\"small\"\r\n            onClick={this.toggleChecked}\r\n          >\r\n            {!this.state.checked ? 'Check' : 'Uncheck'}\r\n          </Button>\r\n          <Button\r\n            style={{marginLeft: '10px'}}\r\n            type=\"primary\"\r\n            size=\"small\"\r\n            onClick={this.toggleDisable}\r\n          >\r\n            {!this.state.disabled ? 'Disable' : 'Enable'}\r\n          </Button>\r\n        </p>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default ControlledCheckbox;\r\n"]},"metadata":{},"sourceType":"module"}