{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useEffect, useState } from 'react';\nimport { Button, Card, Checkbox, Form, Input } from 'antd';\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 6\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 14\n    }\n  }\n};\nconst formTailLayout = {\n  labelCol: {\n    span: 4\n  },\n  wrapperCol: {\n    span: 8,\n    offset: 4\n  }\n};\n\nconst DynamicRules = () => {\n  const [form] = Form.useForm();\n  const {\n    0: checkNick,\n    1: setCheckNick\n  } = useState(false);\n  useEffect(() => {\n    form.validateFields(['nickname']);\n  }, [checkNick]);\n\n  const onCheckboxChange = e => {\n    setCheckNick(e.target.checked);\n  };\n\n  const onCheck = async () => {\n    try {\n      const values = await form.validateFields();\n      console.log('Success:', values);\n    } catch (errorInfo) {\n      console.log('Failed:', errorInfo);\n    }\n  };\n\n  return __jsx(Card, {\n    className: \"gx-card\",\n    title: \"DYNAMIC RULES\"\n  }, __jsx(Form, {\n    form: form,\n    name: \"dynamic_rule\"\n  }, __jsx(Form.Item, _extends({}, formItemLayout, {\n    name: \"username\",\n    label: \"Name\",\n    rules: [{\n      required: true,\n      message: 'Please input your name'\n    }]\n  }), __jsx(Input, {\n    placeholder: \"Please input your name\"\n  })), __jsx(Form.Item, _extends({}, formItemLayout, {\n    name: \"nickname\",\n    label: \"Nickname\",\n    rules: [{\n      required: checkNick,\n      message: 'Please input your nickname'\n    }]\n  }), __jsx(Input, {\n    placeholder: \"Please input your nickname\"\n  })), __jsx(Form.Item, formTailLayout, __jsx(Checkbox, {\n    checked: checkNick,\n    onChange: onCheckboxChange\n  }, \"Nickname is required\")), __jsx(Form.Item, formTailLayout, __jsx(Button, {\n    type: \"primary\",\n    onClick: onCheck\n  }, \"Check\"))));\n};\n\nexport default DynamicRules;","map":{"version":3,"sources":["E:/frontend-projects/crm-frontend-wieldy/routes/components/dataEntry/Form/DynamicRules.js"],"names":["React","useEffect","useState","Button","Card","Checkbox","Form","Input","formItemLayout","labelCol","xs","span","sm","wrapperCol","formTailLayout","offset","DynamicRules","form","useForm","checkNick","setCheckNick","validateFields","onCheckboxChange","e","target","checked","onCheck","values","console","log","errorInfo","required","message"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {Button, Card, Checkbox, Form, Input} from 'antd';\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 6 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 14 },\r\n  },\r\n};\r\nconst formTailLayout = {\r\n  labelCol: {\r\n    span: 4,\r\n  },\r\n  wrapperCol: {\r\n    span: 8,\r\n    offset: 4,\r\n  },\r\n};\r\n\r\nconst DynamicRules = () => {\r\n  const [form] = Form.useForm();\r\n  const [checkNick, setCheckNick] = useState(false);\r\n  useEffect(() => {\r\n    form.validateFields(['nickname']);\r\n  }, [checkNick]);\r\n\r\n  const onCheckboxChange = e => {\r\n    setCheckNick(e.target.checked);\r\n  };\r\n\r\n  const onCheck = async () => {\r\n    try {\r\n      const values = await form.validateFields();\r\n      console.log('Success:', values);\r\n    } catch (errorInfo) {\r\n      console.log('Failed:', errorInfo);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className=\"gx-card\" title=\"DYNAMIC RULES\">\r\n      <Form form={form} name=\"dynamic_rule\">\r\n        <Form.Item\r\n          {...formItemLayout}\r\n          name=\"username\"\r\n          label=\"Name\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your name',\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder=\"Please input your name\"/>\r\n        </Form.Item>\r\n        <Form.Item\r\n          {...formItemLayout}\r\n          name=\"nickname\"\r\n          label=\"Nickname\"\r\n          rules={[\r\n            {\r\n              required: checkNick,\r\n              message: 'Please input your nickname',\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder=\"Please input your nickname\"/>\r\n        </Form.Item>\r\n        <Form.Item {...formTailLayout}>\r\n          <Checkbox checked={checkNick} onChange={onCheckboxChange}>\r\n            Nickname is required\r\n          </Checkbox>\r\n        </Form.Item>\r\n        <Form.Item {...formTailLayout}>\r\n          <Button type=\"primary\" onClick={onCheck}>\r\n            Check\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Card>\r\n  );\r\n};\r\nexport default DynamicRules;\r\n"]},"metadata":{},"sourceType":"module"}