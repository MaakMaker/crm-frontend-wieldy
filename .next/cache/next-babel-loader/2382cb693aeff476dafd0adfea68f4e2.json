{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { Button, Card, Checkbox, Form, Input } from 'antd';\nvar formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 6\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 14\n    }\n  }\n};\nvar formTailLayout = {\n  labelCol: {\n    span: 4\n  },\n  wrapperCol: {\n    span: 8,\n    offset: 4\n  }\n};\n\nvar DynamicRules = function DynamicRules() {\n  _s();\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var _useState = useState(false),\n      checkNick = _useState[0],\n      setCheckNick = _useState[1];\n\n  useEffect(function () {\n    form.validateFields(['nickname']);\n  }, [checkNick]);\n\n  var onCheckboxChange = function onCheckboxChange(e) {\n    setCheckNick(e.target.checked);\n  };\n\n  var onCheck = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var values;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return form.validateFields();\n\n            case 3:\n              values = _context.sent;\n              console.log('Success:', values);\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log('Failed:', _context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function onCheck() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Card, {\n    className: \"gx-card\",\n    title: \"DYNAMIC RULES\"\n  }, __jsx(Form, {\n    form: form,\n    name: \"dynamic_rule\"\n  }, __jsx(Form.Item, _extends({}, formItemLayout, {\n    name: \"username\",\n    label: \"Name\",\n    rules: [{\n      required: true,\n      message: 'Please input your name'\n    }]\n  }), __jsx(Input, {\n    placeholder: \"Please input your name\"\n  })), __jsx(Form.Item, _extends({}, formItemLayout, {\n    name: \"nickname\",\n    label: \"Nickname\",\n    rules: [{\n      required: checkNick,\n      message: 'Please input your nickname'\n    }]\n  }), __jsx(Input, {\n    placeholder: \"Please input your nickname\"\n  })), __jsx(Form.Item, formTailLayout, __jsx(Checkbox, {\n    checked: checkNick,\n    onChange: onCheckboxChange\n  }, \"Nickname is required\")), __jsx(Form.Item, formTailLayout, __jsx(Button, {\n    type: \"primary\",\n    onClick: onCheck\n  }, \"Check\"))));\n};\n\n_s(DynamicRules, \"g8NVQvz0YHeMB2qLPM57IEfv+DU=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = DynamicRules;\nexport default DynamicRules;\n\nvar _c;\n\n$RefreshReg$(_c, \"DynamicRules\");","map":{"version":3,"sources":["E:/frontend-projects/crm-frontend-wieldy/routes/components/dataEntry/Form/DynamicRules.js"],"names":["React","useEffect","useState","Button","Card","Checkbox","Form","Input","formItemLayout","labelCol","xs","span","sm","wrapperCol","formTailLayout","offset","DynamicRules","useForm","form","checkNick","setCheckNick","validateFields","onCheckboxChange","e","target","checked","onCheck","values","console","log","required","message"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {Button, Card, Checkbox, Form, Input} from 'antd';\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 6 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 14 },\r\n  },\r\n};\r\nconst formTailLayout = {\r\n  labelCol: {\r\n    span: 4,\r\n  },\r\n  wrapperCol: {\r\n    span: 8,\r\n    offset: 4,\r\n  },\r\n};\r\n\r\nconst DynamicRules = () => {\r\n  const [form] = Form.useForm();\r\n  const [checkNick, setCheckNick] = useState(false);\r\n  useEffect(() => {\r\n    form.validateFields(['nickname']);\r\n  }, [checkNick]);\r\n\r\n  const onCheckboxChange = e => {\r\n    setCheckNick(e.target.checked);\r\n  };\r\n\r\n  const onCheck = async () => {\r\n    try {\r\n      const values = await form.validateFields();\r\n      console.log('Success:', values);\r\n    } catch (errorInfo) {\r\n      console.log('Failed:', errorInfo);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className=\"gx-card\" title=\"DYNAMIC RULES\">\r\n      <Form form={form} name=\"dynamic_rule\">\r\n        <Form.Item\r\n          {...formItemLayout}\r\n          name=\"username\"\r\n          label=\"Name\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your name',\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder=\"Please input your name\"/>\r\n        </Form.Item>\r\n        <Form.Item\r\n          {...formItemLayout}\r\n          name=\"nickname\"\r\n          label=\"Nickname\"\r\n          rules={[\r\n            {\r\n              required: checkNick,\r\n              message: 'Please input your nickname',\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder=\"Please input your nickname\"/>\r\n        </Form.Item>\r\n        <Form.Item {...formTailLayout}>\r\n          <Checkbox checked={checkNick} onChange={onCheckboxChange}>\r\n            Nickname is required\r\n          </Checkbox>\r\n        </Form.Item>\r\n        <Form.Item {...formTailLayout}>\r\n          <Button type=\"primary\" onClick={onCheck}>\r\n            Check\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Card>\r\n  );\r\n};\r\nexport default DynamicRules;\r\n"]},"metadata":{},"sourceType":"module"}